

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Nov 22 17:11:50 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           ; Version 2.00
    50                           ; Generated 27/05/2018 GMT
    51                           ; 
    52                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4550 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataCOMRAM
    85  002012                     __pidataCOMRAM:
    86                           	opt stack 0
    87                           
    88                           ;initializer for _OffsetPeriodo
    89  002012  20                 	db	32
    90                           
    91                           ;initializer for _frecuencia
    92  002013  03E8               	dw	1000
    93                           
    94                           	psect	idataBANK0
    95  006E01                     __pidataBANK0:
    96                           	opt stack 0
    97                           
    98                           ;initializer for _col
    99  006E01  FF                 	db	255
   100                           
   101                           ;initializer for _fila
   102  006E02  FF                 	db	255
   103                           
   104                           ;initializer for tic_encoder@estado
   105  006E03  04                 	db	4
   106                           
   107                           ;initializer for tic_debounce@debounce_tic
   108  006E04  0A                 	db	10
   109                           
   110                           ;initializer for _UpperByte
   111  006E05  FF                 	db	255
   112                           
   113                           ;initializer for Send4Disp@Nro_Disp
   114  006E06  01                 	db	1
   115                           
   116                           ;initializer for Leds13@i
   117  006E07  01                 	db	1
   118                           
   119                           	psect	smallconst
   120  002018                     __psmallconst:
   121                           	opt stack 0
   122  002018  00                 	db	0
   123  002019                     _teclas:
   124                           	opt stack 0
   125  002019  01                 	db	1
   126  00201A  02                 	db	2
   127  00201B  03                 	db	3
   128  00201C  04                 	db	4
   129  00201D  05                 	db	5
   130  00201E  06                 	db	6
   131  00201F  07                 	db	7
   132  002020  08                 	db	8
   133  002021  09                 	db	9
   134  002022  2A                 	db	42
   135  002023  00                 	db	0
   136  002024  2B                 	db	43
   137  002025                     __end_of_teclas:
   138                           	opt stack 0
   139  002025                     STR_1:
   140                           
   141                           ; BSR set to: 0
   142  002025  20                 	db	32
   143  002026  20                 	db	32
   144  002027  20                 	db	32
   145  002028  20                 	db	32
   146  002029  20                 	db	32
   147  00202A  20                 	db	32
   148  00202B  20                 	db	32
   149  00202C  20                 	db	32
   150  00202D  20                 	db	32
   151  00202E  20                 	db	32
   152  00202F  20                 	db	32
   153  002030  20                 	db	32
   154  002031  20                 	db	32
   155  002032  20                 	db	32
   156  002033  00                 	db	0
   157  002034                     STR_2:
   158                           
   159                           ; BSR set to: 0
   160  002034  6D                 	db	109	;'m'
   161  002035  57                 	db	87	;'W'
   162  002036  2F                 	db	47
   163  002037  63                 	db	99	;'c'
   164  002038  6D                 	db	109	;'m'
   165  002039  00                 	db	0
   166  00203A                     STR_3:
   167                           
   168                           ; BSR set to: 0
   169  00203A  2E                 	db	46
   170  00203B  00                 	db	0
   171                           
   172                           ; #config settings
   173  00203C  00                 	db	0	; dummy byte at the end
   174  0000                     
   175                           	psect	nvCOMRAM
   176  00005D                     __pnvCOMRAM:
   177                           	opt stack 0
   178  00005D                     _LCD_tout:
   179                           	opt stack 0
   180  00005D                     	ds	2
   181  0000                     _LATBbits	set	3978
   182  0000                     _PORTBbits	set	3969
   183  0000                     _INTCON3bits	set	4080
   184  0000                     _INTCON2bits	set	4081
   185  0000                     _TRISBbits	set	3987
   186  0000                     _EECON2	set	4007
   187  0000                     _EECON1bits	set	4006
   188  0000                     _EEDATA	set	4008
   189  0000                     _EEADR	set	4009
   190  0000                     _PORTB	set	3969
   191  0000                     _ADRESL	set	4035
   192  0000                     _ADRESH	set	4036
   193  0000                     _ADCON0bits	set	4034
   194  0000                     _ADCON2	set	4032
   195  0000                     _ADCON1bits	set	4033
   196  0000                     _TRISAbits	set	3986
   197  0000                     _PORTA	set	3968
   198  0000                     _TXREG	set	4013
   199  0000                     _T2CONbits	set	4042
   200  0000                     _CCP1CONbits	set	4029
   201  0000                     _CCPR1L	set	4030
   202  0000                     _PR2	set	4043
   203  0000                     _RCREG	set	4014
   204  0000                     _RCSTAbits	set	4011
   205  0000                     _SPBRGH	set	4016
   206  0000                     _SPBRG	set	4015
   207  0000                     _BAUDCONbits	set	4024
   208  0000                     _TXSTAbits	set	4012
   209  0000                     _PIE1bits	set	3997
   210  0000                     _TMR0H	set	4055
   211  0000                     _TRISC	set	3988
   212  0000                     _LATEbits	set	3981
   213  0000                     _LATAbits	set	3977
   214  0000                     _LATCbits	set	3979
   215  0000                     _LATDbits	set	3980
   216  0000                     _TRISB	set	3987
   217  0000                     _TRISE	set	3990
   218  0000                     _TRISA	set	3986
   219  0000                     _ADCON1	set	4033
   220  0000                     _CMCON	set	4020
   221  0000                     _TRISCbits	set	3988
   222  0000                     _LATE	set	3981
   223  0000                     _LATC	set	3979
   224  0000                     _LATB	set	3978
   225  0000                     _LATA	set	3977
   226  0000                     _PORTDbits	set	3971
   227  0000                     _LATD	set	3980
   228  0000                     _PORTEbits	set	3972
   229  0000                     _TRISEbits	set	3990
   230  0000                     _TRISD	set	3989
   231  0000                     _TMR1H	set	4047
   232  0000                     _TMR1L	set	4046
   233  0000                     _PIR1bits	set	3998
   234  0000                     _TMR0L	set	4054
   235  0000                     _INTCONbits	set	4082
   236  0000                     _T1CONbits	set	4045
   237  0000                     _T0CONbits	set	4053
   238  0000                     _RBIE	set	32659
   239  0000                     _RBIF	set	32656
   240  0000                     _RBIP	set	32648
   241  0000                     _RBPU	set	32655
   242  0000                     _INT1IE	set	32643
   243  0000                     _INT1IF	set	32640
   244  0000                     _INT0IF	set	32657
   245  0000                     _INT0IE	set	32660
   246                           
   247                           	psect	cinit
   248  00708C                     __pcinit:
   249                           	opt stack 0
   250  00708C                     start_initialization:
   251                           	opt stack 0
   252  00708C                     __initialization:
   253                           	opt stack 0
   254                           
   255                           ; Initialize objects allocated to BANK0 (7 bytes)
   256                           ; load TBLPTR registers with __pidataBANK0
   257  00708C  0E01               	movlw	low __pidataBANK0
   258  00708E  6EF6               	movwf	tblptrl,c
   259  007090  0E6E               	movlw	high __pidataBANK0
   260  007092  6EF7               	movwf	tblptrh,c
   261  007094  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   262  007096  6EF8               	movwf	tblptru,c
   263  007098  EE00  F089         	lfsr	0,__pdataBANK0
   264  00709C  EE10 F007          	lfsr	1,7
   265  0070A0                     copy_data0:
   266  0070A0  0009               	tblrd		*+
   267  0070A2  CFF5 FFEE          	movff	tablat,postinc0
   268  0070A6  50E5               	movf	postdec1,w,c
   269  0070A8  50E1               	movf	fsr1l,w,c
   270  0070AA  E1FA               	bnz	copy_data0
   271                           
   272                           ; Initialize objects allocated to COMRAM (3 bytes)
   273                           ; load TBLPTR registers with __pidataCOMRAM
   274  0070AC  0E12               	movlw	low __pidataCOMRAM
   275  0070AE  6EF6               	movwf	tblptrl,c
   276  0070B0  0E20               	movlw	high __pidataCOMRAM
   277  0070B2  6EF7               	movwf	tblptrh,c
   278  0070B4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   279  0070B6  6EF8               	movwf	tblptru,c
   280  0070B8  0009               	tblrd		*+	;fetch initializer
   281  0070BA  CFF5 F05A          	movff	tablat,__pdataCOMRAM
   282  0070BE  0009               	tblrd		*+	;fetch initializer
   283  0070C0  CFF5 F05B          	movff	tablat,__pdataCOMRAM+1
   284  0070C4  0009               	tblrd		*+	;fetch initializer
   285  0070C6  CFF5 F05C          	movff	tablat,__pdataCOMRAM+2
   286                           
   287                           ; Clear objects allocated to BANK0 (15 bytes)
   288  0070CA  EE00  F07A         	lfsr	0,__pbssBANK0
   289  0070CE  0E0F               	movlw	15
   290  0070D0                     clear_0:
   291  0070D0  6AEE               	clrf	postinc0,c
   292  0070D2  06E8               	decf	wreg,f,c
   293  0070D4  E1FD               	bnz	clear_0
   294                           
   295                           ; Clear objects allocated to COMRAM (11 bytes)
   296  0070D6  EE00  F04F         	lfsr	0,__pbssCOMRAM
   297  0070DA  0E0B               	movlw	11
   298  0070DC                     clear_1:
   299  0070DC  6AEE               	clrf	postinc0,c
   300  0070DE  06E8               	decf	wreg,f,c
   301  0070E0  E1FD               	bnz	clear_1
   302  0070E2                     end_of_initialization:
   303                           	opt stack 0
   304  0070E2                     __end_of__initialization:
   305                           	opt stack 0
   306  0070E2  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   307  0070E4  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   308  0070E6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   309  0070E8  6EF8               	movwf	tblptru,c
   310  0070EA  0100               	movlb	0
   311  0070EC  EF61  F037         	goto	_main	;jump to C main() function
   312                           tblptru	equ	0xFF8
   313                           tblptrh	equ	0xFF7
   314                           tblptrl	equ	0xFF6
   315                           tablat	equ	0xFF5
   316                           postinc0	equ	0xFEE
   317                           wreg	equ	0xFE8
   318                           postdec1	equ	0xFE5
   319                           fsr1l	equ	0xFE1
   320                           
   321                           	psect	bssCOMRAM
   322  00004F                     __pbssCOMRAM:
   323                           	opt stack 0
   324  00004F                     _MedioPeriodoSet:
   325                           	opt stack 0
   326  00004F                     	ds	2
   327  000051                     _led_tout:
   328                           	opt stack 0
   329  000051                     	ds	2
   330  000053                     _delay_kb:
   331                           	opt stack 0
   332  000053                     	ds	1
   333  000054                     _posicionEncoder:
   334                           	opt stack 0
   335  000054                     	ds	1
   336  000055                     debounce@cnt0:
   337                           	opt stack 0
   338  000055                     	ds	1
   339  000056                     debounce@state:
   340                           	opt stack 0
   341  000056                     	ds	1
   342  000057                     _bot_tout:
   343                           	opt stack 0
   344  000057                     	ds	1
   345  000058                     _mux_tout:
   346                           	opt stack 0
   347  000058                     	ds	1
   348  000059                     _limitador_vumetro:
   349                           	opt stack 0
   350  000059                     	ds	1
   351                           tblptru	equ	0xFF8
   352                           tblptrh	equ	0xFF7
   353                           tblptrl	equ	0xFF6
   354                           tablat	equ	0xFF5
   355                           postinc0	equ	0xFEE
   356                           wreg	equ	0xFE8
   357                           postdec1	equ	0xFE5
   358                           fsr1l	equ	0xFE1
   359                           
   360                           	psect	dataCOMRAM
   361  00005A                     __pdataCOMRAM:
   362                           	opt stack 0
   363  00005A                     _OffsetPeriodo:
   364                           	opt stack 0
   365  00005A                     	ds	1
   366  00005B                     _frecuencia:
   367                           	opt stack 0
   368  00005B                     	ds	2
   369                           tblptru	equ	0xFF8
   370                           tblptrh	equ	0xFF7
   371                           tblptrl	equ	0xFF6
   372                           tablat	equ	0xFF5
   373                           postinc0	equ	0xFEE
   374                           wreg	equ	0xFE8
   375                           postdec1	equ	0xFE5
   376                           fsr1l	equ	0xFE1
   377                           
   378                           	psect	bssBANK0
   379  00007A                     __pbssBANK0:
   380                           	opt stack 0
   381  00007A                     _desplazar_tout:
   382                           	opt stack 0
   383  00007A                     	ds	2
   384  00007C                     tecla@status_KB:
   385                           	opt stack 0
   386  00007C                     	ds	1
   387  00007D                     _flag_kb:
   388                           	opt stack 0
   389  00007D                     	ds	1
   390  00007E                     _flagCanal:
   391                           	opt stack 0
   392  00007E                     	ds	1
   393  00007F                     _encoderTout:
   394                           	opt stack 0
   395  00007F                     	ds	1
   396  000080                     _minimoEncoder:
   397                           	opt stack 0
   398  000080                     	ds	1
   399  000081                     _maximoEncoder:
   400                           	opt stack 0
   401  000081                     	ds	1
   402  000082                     debounce@cnt1:
   403                           	opt stack 0
   404  000082                     	ds	1
   405  000083                     _MultiplicadorSet:
   406                           	opt stack 0
   407  000083                     	ds	1
   408  000084                     _Multiplicador:
   409                           	opt stack 0
   410  000084                     	ds	1
   411  000085                     _LowerByte:
   412                           	opt stack 0
   413  000085                     	ds	1
   414  000086                     Botones13@Estado_BOT:
   415                           	opt stack 0
   416  000086                     	ds	1
   417  000087                     _limitadorADC:
   418                           	opt stack 0
   419  000087                     	ds	1
   420  000088                     _EstadoDeLosBotones:
   421                           	opt stack 0
   422  000088                     	ds	1
   423                           tblptru	equ	0xFF8
   424                           tblptrh	equ	0xFF7
   425                           tblptrl	equ	0xFF6
   426                           tablat	equ	0xFF5
   427                           postinc0	equ	0xFEE
   428                           wreg	equ	0xFE8
   429                           postdec1	equ	0xFE5
   430                           fsr1l	equ	0xFE1
   431                           
   432                           	psect	dataBANK0
   433  000089                     __pdataBANK0:
   434                           	opt stack 0
   435  000089                     _col:
   436                           	opt stack 0
   437  000089                     	ds	1
   438  00008A                     _fila:
   439                           	opt stack 0
   440  00008A                     	ds	1
   441  00008B                     tic_encoder@estado:
   442                           	opt stack 0
   443  00008B                     	ds	1
   444  00008C                     tic_debounce@debounce_tic:
   445                           	opt stack 0
   446  00008C                     	ds	1
   447  00008D                     _UpperByte:
   448                           	opt stack 0
   449  00008D                     	ds	1
   450  00008E                     Send4Disp@Nro_Disp:
   451                           	opt stack 0
   452  00008E                     	ds	1
   453  00008F                     Leds13@i:
   454                           	opt stack 0
   455  00008F                     	ds	1
   456                           tblptru	equ	0xFF8
   457                           tblptrh	equ	0xFF7
   458                           tblptrl	equ	0xFF6
   459                           tablat	equ	0xFF5
   460                           postinc0	equ	0xFEE
   461                           wreg	equ	0xFE8
   462                           postdec1	equ	0xFE5
   463                           fsr1l	equ	0xFE1
   464                           
   465                           	psect	cstackBANK0
   466  000060                     __pcstackBANK0:
   467                           	opt stack 0
   468  000060                     _AD_Converter$2570:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x0
   472  000060                     	ds	2
   473  000062                     AD_Converter@ConversionAD:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x2
   477  000062                     	ds	2
   478  000064                     AD_Converter@Unidad:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0x4
   482  000064                     	ds	1
   483  000065                     AD_Converter@Decena:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x5
   487  000065                     	ds	1
   488  000066                     AD_Converter@Centena:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x6
   492  000066                     	ds	1
   493  000067                     AD_Converter@UniMil:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x7
   497  000067                     	ds	1
   498  000068                     AD_Converter@UniDiezMil:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0x8
   502  000068                     	ds	1
   503  000069                     AD_Converter@Vumetro:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x9
   507  000069                     	ds	1
   508  00006A                     AD_Converter@VumetroF:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0xA
   512  00006A                     	ds	1
   513  00006B                     AD_Converter@contador_prom:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0xB
   517  00006B                     	ds	1
   518  00006C                     AD_Converter@UV_bits:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0xC
   522  00006C                     	ds	2
   523  00006E                     _AD_Converter$2569:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0xE
   527  00006E                     	ds	2
   528  000070                     AD_Converter@Calculo_Prom:
   529                           	opt stack 0
   530                           
   531                           ; 4 bytes @ 0x10
   532  000070                     	ds	4
   533  000074                     AD_Converter@UV_VOLTS:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x14
   537  000074                     	ds	2
   538  000076                     _AD_Converter$2568:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x16
   542  000076                     	ds	2
   543  000078                     AD_Converter@UVI:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x18
   547  000078                     	ds	2
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1l	equ	0xFE1
   556                           
   557                           	psect	cstackCOMRAM
   558  000001                     __pcstackCOMRAM:
   559                           	opt stack 0
   560  000001                     ?_obtener_ADC10:
   561                           	opt stack 0
   562  000001                     ?___lwmod:
   563                           	opt stack 0
   564  000001                     ?___lldiv:
   565                           	opt stack 0
   566  000001                     ?___xxtofl:
   567                           	opt stack 0
   568  000001                     write_LCD@dato:
   569                           	opt stack 0
   570  000001                     read_BUSY@aux:
   571                           	opt stack 0
   572  000001                     ___lwmod@dividend:
   573                           	opt stack 0
   574  000001                     ___lldiv@dividend:
   575                           	opt stack 0
   576  000001                     ___xxtofl@val:
   577                           	opt stack 0
   578                           
   579                           ; 4 bytes @ 0x0
   580  000001                     	ds	1
   581  000002                     write_DATA@dato:
   582                           	opt stack 0
   583  000002                     write_CMD@dato:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x1
   587  000002                     	ds	1
   588  000003                     ??_obtener_ADC10:
   589  000003                     char2LCD@dato:
   590                           	opt stack 0
   591  000003                     set_CURSOR@posi:
   592                           	opt stack 0
   593  000003                     msg2LCD@datos:
   594                           	opt stack 0
   595  000003                     ___lwmod@divisor:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x2
   599  000003                     	ds	1
   600  000004                     Simbolos@flag_dibujo:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x3
   604  000004                     	ds	1
   605  000005                     ??___xxtofl:
   606  000005                     Simbolos@contador:
   607                           	opt stack 0
   608  000005                     Vumetro_Func@Vumetro_Resto:
   609                           	opt stack 0
   610  000005                     obtener_ADC10@GuardoPorta:
   611                           	opt stack 0
   612  000005                     ___lwmod@counter:
   613                           	opt stack 0
   614  000005                     ___lldiv@divisor:
   615                           	opt stack 0
   616                           
   617                           ; 4 bytes @ 0x4
   618  000005                     	ds	1
   619  000006                     ?___wmul:
   620                           	opt stack 0
   621  000006                     Vumetro_Func@Vumetro_Entero:
   622                           	opt stack 0
   623  000006                     obtener_ADC10@GuardoTrisa:
   624                           	opt stack 0
   625  000006                     ___wmul@multiplier:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x5
   629  000006                     	ds	2
   630  000008                     ___wmul@multiplicand:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0x7
   634  000008                     	ds	1
   635  000009                     ___xxtofl@sign:
   636                           	opt stack 0
   637  000009                     ___lldiv@quotient:
   638                           	opt stack 0
   639                           
   640                           ; 4 bytes @ 0x8
   641  000009                     	ds	1
   642  00000A                     ___xxtofl@exp:
   643                           	opt stack 0
   644  00000A                     ___wmul@product:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x9
   648  00000A                     	ds	1
   649  00000B                     ___xxtofl@arg:
   650                           	opt stack 0
   651                           
   652                           ; 4 bytes @ 0xA
   653  00000B                     	ds	1
   654  00000C                     ?___lwdiv:
   655                           	opt stack 0
   656  00000C                     ___lwdiv@dividend:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0xB
   660  00000C                     	ds	1
   661  00000D                     ___lldiv@counter:
   662                           	opt stack 0
   663                           
   664                           ; 1 bytes @ 0xC
   665  00000D                     	ds	1
   666  00000E                     ___lwdiv@divisor:
   667                           	opt stack 0
   668                           
   669                           ; 2 bytes @ 0xD
   670  00000E                     	ds	1
   671  00000F                     ?___flmul:
   672                           	opt stack 0
   673  00000F                     ___flmul@b:
   674                           	opt stack 0
   675                           
   676                           ; 4 bytes @ 0xE
   677  00000F                     	ds	1
   678  000010                     ___lwdiv@quotient:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0xF
   682  000010                     	ds	2
   683  000012                     ___lwdiv@counter:
   684                           	opt stack 0
   685                           
   686                           ; 1 bytes @ 0x11
   687  000012                     	ds	1
   688  000013                     ___flmul@a:
   689                           	opt stack 0
   690                           
   691                           ; 4 bytes @ 0x12
   692  000013                     	ds	4
   693  000017                     ??___flmul:
   694                           
   695                           ; 1 bytes @ 0x16
   696  000017                     	ds	4
   697  00001B                     ___flmul@sign:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x1A
   701  00001B                     	ds	1
   702  00001C                     ___flmul@grs:
   703                           	opt stack 0
   704                           
   705                           ; 4 bytes @ 0x1B
   706  00001C                     	ds	4
   707  000020                     ___flmul@aexp:
   708                           	opt stack 0
   709                           
   710                           ; 1 bytes @ 0x1F
   711  000020                     	ds	1
   712  000021                     ___flmul@bexp:
   713                           	opt stack 0
   714                           
   715                           ; 1 bytes @ 0x20
   716  000021                     	ds	1
   717  000022                     ___flmul@prod:
   718                           	opt stack 0
   719                           
   720                           ; 4 bytes @ 0x21
   721  000022                     	ds	4
   722  000026                     ___flmul@temp:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x25
   726  000026                     	ds	2
   727  000028                     ?___fldiv:
   728                           	opt stack 0
   729  000028                     ___fldiv@b:
   730                           	opt stack 0
   731                           
   732                           ; 4 bytes @ 0x27
   733  000028                     	ds	4
   734  00002C                     ___fldiv@a:
   735                           	opt stack 0
   736                           
   737                           ; 4 bytes @ 0x2B
   738  00002C                     	ds	4
   739  000030                     ??___fldiv:
   740                           
   741                           ; 1 bytes @ 0x2F
   742  000030                     	ds	4
   743  000034                     ___fldiv@rem:
   744                           	opt stack 0
   745                           
   746                           ; 4 bytes @ 0x33
   747  000034                     	ds	4
   748  000038                     ___fldiv@sign:
   749                           	opt stack 0
   750                           
   751                           ; 1 bytes @ 0x37
   752  000038                     	ds	1
   753  000039                     ___fldiv@new_exp:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x38
   757  000039                     	ds	2
   758  00003B                     ___fldiv@grs:
   759                           	opt stack 0
   760                           
   761                           ; 4 bytes @ 0x3A
   762  00003B                     	ds	4
   763  00003F                     ___fldiv@bexp:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x3E
   767  00003F                     	ds	1
   768  000040                     ___fldiv@aexp:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x3F
   772  000040                     	ds	1
   773  000041                     ?___fltol:
   774                           	opt stack 0
   775  000041                     ___fltol@f1:
   776                           	opt stack 0
   777                           
   778                           ; 4 bytes @ 0x40
   779  000041                     	ds	4
   780  000045                     ??___fltol:
   781                           
   782                           ; 1 bytes @ 0x44
   783  000045                     	ds	4
   784  000049                     ___fltol@sign1:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x48
   788  000049                     	ds	1
   789  00004A                     ___fltol@exp1:
   790                           	opt stack 0
   791                           
   792                           ; 1 bytes @ 0x49
   793  00004A                     	ds	1
   794  00004B                     ??_AD_Converter:
   795                           
   796                           ; 1 bytes @ 0x4A
   797  00004B                     	ds	4
   798  00004F                     tblptru	equ	0xFF8
   799                           tblptrh	equ	0xFF7
   800                           tblptrl	equ	0xFF6
   801                           tablat	equ	0xFF5
   802                           postinc0	equ	0xFEE
   803                           wreg	equ	0xFE8
   804                           postdec1	equ	0xFE5
   805                           fsr1l	equ	0xFE1
   806                           
   807                           ; 1 bytes @ 0x4E
   808 ;;
   809 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   810 ;;
   811 ;; *************** function _main *****************
   812 ;; Defined at:
   813 ;;		line 22 in file "main.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   827 ;;      Params:         0       0       0       0       0       0       0       0       0
   828 ;;      Locals:         0       0       0       0       0       0       0       0       0
   829 ;;      Temps:          0       0       0       0       0       0       0       0       0
   830 ;;      Totals:         0       0       0       0       0       0       0       0       0
   831 ;;Total ram usage:        0 bytes
   832 ;; Hardware stack levels required when called:    7
   833 ;; This function calls:
   834 ;;		_AD_Converter
   835 ;;		_LCD_init
   836 ;;		_PicIni21
   837 ;;		_Simbolos
   838 ;;		_TIMER0_INI
   839 ;;		_TIMER1_INI
   840 ;; This function is called by:
   841 ;;		Startup code after reset
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text0
   846  006EC2                     __ptext0:
   847                           	opt stack 0
   848  006EC2                     _main:
   849                           	opt stack 24
   850                           
   851                           ;main.c: 23:     PicIni21();
   852                           
   853                           ;incstack = 0
   854  006EC2  ECAF  F037         	call	_PicIni21	;wreg free
   855                           
   856                           ;main.c: 24:     TIMER0_INI();
   857  006EC6  EC35  F037         	call	_TIMER0_INI	;wreg free
   858                           
   859                           ;main.c: 25:     TIMER1_INI();
   860  006ECA  EC51  F037         	call	_TIMER1_INI	;wreg free
   861                           
   862                           ;main.c: 26:     T0CONbits.TMR0ON = 1;
   863  006ECE  8ED5               	bsf	4053,7,c	;volatile
   864                           
   865                           ;main.c: 27:     T1CONbits.TMR1ON = 1;
   866  006ED0  80CD               	bsf	4045,0,c	;volatile
   867                           
   868                           ;main.c: 28:     T0CONbits.TMR0ON = 1;
   869  006ED2  8ED5               	bsf	4053,7,c	;volatile
   870                           
   871                           ;main.c: 29:     INTCONbits.GIE = 1;
   872  006ED4  8EF2               	bsf	intcon,7,c	;volatile
   873                           
   874                           ;main.c: 30:     LCD_init();
   875  006ED6  ECFB  F038         	call	_LCD_init	;wreg free
   876                           
   877                           ;main.c: 31:     Simbolos();
   878  006EDA  ECB0  F039         	call	_Simbolos	;wreg free
   879  006EDE                     
   880                           ;main.c: 38:         AD_Converter();
   881  006EDE  ECDA  F03D         	call	_AD_Converter	;wreg free
   882                           
   883                           ;main.c: 41:     }
   884  006EE2  D7FD               	goto	l41
   885  006EE4                     __end_of_main:
   886                           	opt stack 0
   887                           tblptru	equ	0xFF8
   888                           tblptrh	equ	0xFF7
   889                           tblptrl	equ	0xFF6
   890                           tablat	equ	0xFF5
   891                           intcon	equ	0xFF2
   892                           postinc0	equ	0xFEE
   893                           wreg	equ	0xFE8
   894                           postdec1	equ	0xFE5
   895                           fsr1l	equ	0xFE1
   896                           
   897 ;; *************** function _TIMER1_INI *****************
   898 ;; Defined at:
   899 ;;		line 205 in file "Tecnica1.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, status,2
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   913 ;;      Params:         0       0       0       0       0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0       0       0
   916 ;;      Totals:         0       0       0       0       0       0       0       0       0
   917 ;;Total ram usage:        0 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; Hardware stack levels required when called:    2
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_main
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text1
   928  006EA2                     __ptext1:
   929                           	opt stack 0
   930  006EA2                     _TIMER1_INI:
   931                           	opt stack 28
   932                           
   933                           ;Tecnica1.c: 206:     T1CONbits.TMR1ON = 0;
   934                           
   935                           ;incstack = 0
   936  006EA2  90CD               	bcf	4045,0,c	;volatile
   937                           
   938                           ;Tecnica1.c: 207:     T1CONbits.TMR1CS = 0;
   939  006EA4  92CD               	bcf	4045,1,c	;volatile
   940                           
   941                           ;Tecnica1.c: 208:     T1CONbits.nT1SYNC = 1;
   942  006EA6  84CD               	bsf	4045,2,c	;volatile
   943                           
   944                           ;Tecnica1.c: 209:     T1CONbits.T1OSCEN = 0;
   945  006EA8  96CD               	bcf	4045,3,c	;volatile
   946                           
   947                           ;Tecnica1.c: 210:     T1CONbits.T1CKPS1 = 1;
   948  006EAA  8ACD               	bsf	4045,5,c	;volatile
   949                           
   950                           ;Tecnica1.c: 211:     T1CONbits.T1CKPS0 = 1;
   951  006EAC  88CD               	bsf	4045,4,c	;volatile
   952                           
   953                           ;Tecnica1.c: 212:     T1CONbits.RD16 = 0;
   954  006EAE  9ECD               	bcf	4045,7,c	;volatile
   955                           
   956                           ;Tecnica1.c: 213:     T1CONbits.T1RUN = 0;
   957  006EB0  9CCD               	bcf	4045,6,c	;volatile
   958                           
   959                           ;Tecnica1.c: 214:     TMR1L = 0x78;
   960  006EB2  0E78               	movlw	120
   961  006EB4  6ECE               	movwf	4046,c	;volatile
   962                           
   963                           ;Tecnica1.c: 215:     TMR1H = 0xC4;
   964  006EB6  0EC4               	movlw	196
   965  006EB8  6ECF               	movwf	4047,c	;volatile
   966                           
   967                           ;Tecnica1.c: 216:     PIR1bits.TMR1IF = 0;
   968  006EBA  909E               	bcf	3998,0,c	;volatile
   969                           
   970                           ;Tecnica1.c: 217:     PIE1bits.TMR1IE = 1;
   971  006EBC  809D               	bsf	3997,0,c	;volatile
   972                           
   973                           ;Tecnica1.c: 218:     INTCONbits.PEIE = 1;
   974  006EBE  8CF2               	bsf	intcon,6,c	;volatile
   975  006EC0  0012               	return		;funcret
   976  006EC2                     __end_of_TIMER1_INI:
   977                           	opt stack 0
   978                           tblptru	equ	0xFF8
   979                           tblptrh	equ	0xFF7
   980                           tblptrl	equ	0xFF6
   981                           tablat	equ	0xFF5
   982                           intcon	equ	0xFF2
   983                           postinc0	equ	0xFEE
   984                           wreg	equ	0xFE8
   985                           postdec1	equ	0xFE5
   986                           fsr1l	equ	0xFE1
   987                           
   988 ;; *************** function _TIMER0_INI *****************
   989 ;; Defined at:
   990 ;;		line 193 in file "Tecnica1.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;		None
   993 ;; Auto vars:     Size  Location     Type
   994 ;;		None
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, status,2
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1004 ;;      Params:         0       0       0       0       0       0       0       0       0
  1005 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1007 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1008 ;;Total ram usage:        0 bytes
  1009 ;; Hardware stack levels used:    1
  1010 ;; Hardware stack levels required when called:    2
  1011 ;; This function calls:
  1012 ;;		Nothing
  1013 ;; This function is called by:
  1014 ;;		_main
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           	psect	text2
  1019  006E6A                     __ptext2:
  1020                           	opt stack 0
  1021  006E6A                     _TIMER0_INI:
  1022                           	opt stack 28
  1023                           
  1024                           ;Tecnica1.c: 194:     T0CONbits.TMR0ON = 0;
  1025                           
  1026                           ;incstack = 0
  1027  006E6A  9ED5               	bcf	4053,7,c	;volatile
  1028                           
  1029                           ;Tecnica1.c: 195:     T0CONbits.T08BIT = 1;
  1030  006E6C  8CD5               	bsf	4053,6,c	;volatile
  1031                           
  1032                           ;Tecnica1.c: 196:     T0CONbits.T0CS = 0;
  1033  006E6E  9AD5               	bcf	4053,5,c	;volatile
  1034                           
  1035                           ;Tecnica1.c: 197:     T0CONbits.PSA = 0;
  1036  006E70  96D5               	bcf	4053,3,c	;volatile
  1037                           
  1038                           ;Tecnica1.c: 198:     T0CONbits.T0PS0 = 1;
  1039  006E72  80D5               	bsf	4053,0,c	;volatile
  1040                           
  1041                           ;Tecnica1.c: 199:     T0CONbits.T0PS1 = 1;
  1042  006E74  82D5               	bsf	4053,1,c	;volatile
  1043                           
  1044                           ;Tecnica1.c: 200:     T0CONbits.T0PS2 = 1;
  1045  006E76  84D5               	bsf	4053,2,c	;volatile
  1046                           
  1047                           ;Tecnica1.c: 201:     TMR0L = 209;
  1048  006E78  0ED1               	movlw	209
  1049  006E7A  6ED6               	movwf	4054,c	;volatile
  1050                           
  1051                           ;Tecnica1.c: 202:     TMR0H = 0xFF;
  1052  006E7C  68D7               	setf	4055,c	;volatile
  1053                           
  1054                           ;Tecnica1.c: 203:     INTCONbits.TMR0IE = 1;
  1055  006E7E  8AF2               	bsf	intcon,5,c	;volatile
  1056  006E80  0012               	return		;funcret
  1057  006E82                     __end_of_TIMER0_INI:
  1058                           	opt stack 0
  1059                           tblptru	equ	0xFF8
  1060                           tblptrh	equ	0xFF7
  1061                           tblptrl	equ	0xFF6
  1062                           tablat	equ	0xFF5
  1063                           intcon	equ	0xFF2
  1064                           postinc0	equ	0xFEE
  1065                           wreg	equ	0xFE8
  1066                           postdec1	equ	0xFE5
  1067                           fsr1l	equ	0xFE1
  1068                           
  1069 ;; *************** function _Simbolos *****************
  1070 ;; Defined at:
  1071 ;;		line 13 in file "Tecnica1.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;		None
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;  contador        1    4[COMRAM] unsigned char 
  1076 ;;  flag_dibujo     1    3[COMRAM] unsigned char 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, status,2, status,0, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1086 ;;      Params:         0       0       0       0       0       0       0       0       0
  1087 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1089 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1090 ;;Total ram usage:        2 bytes
  1091 ;; Hardware stack levels used:    1
  1092 ;; Hardware stack levels required when called:    5
  1093 ;; This function calls:
  1094 ;;		_char2LCD
  1095 ;;		_read_BUSY
  1096 ;;		_ret_HOME
  1097 ;;		_write_CMD
  1098 ;; This function is called by:
  1099 ;;		_main
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text3
  1104  007360                     __ptext3:
  1105                           	opt stack 0
  1106  007360                     _Simbolos:
  1107                           	opt stack 25
  1108                           
  1109                           ;Tecnica1.c: 15:     char contador = 0;
  1110                           
  1111                           ;incstack = 0
  1112  007360  0E00               	movlw	0
  1113  007362  6E05               	movwf	Simbolos@contador,c
  1114                           
  1115                           ;Tecnica1.c: 16:     char flag_dibujo = 0;
  1116  007364  0E00               	movlw	0
  1117  007366  6E04               	movwf	Simbolos@flag_dibujo,c
  1118                           
  1119                           ;Tecnica1.c: 18:     write_CMD(0b01000000);
  1120  007368  0E40               	movlw	64
  1121  00736A  EC1E  F037         	call	_write_CMD
  1122                           
  1123                           ;Tecnica1.c: 19:     read_BUSY();
  1124  00736E  EC85  F037         	call	_read_BUSY	;wreg free
  1125                           
  1126                           ;Tecnica1.c: 22:     char2LCD(0b00001100);
  1127  007372  0E0C               	movlw	12
  1128  007374  EC17  F037         	call	_char2LCD
  1129                           
  1130                           ;Tecnica1.c: 23:     char2LCD(0b00000100);
  1131  007378  0E04               	movlw	4
  1132  00737A  EC17  F037         	call	_char2LCD
  1133                           
  1134                           ;Tecnica1.c: 24:     char2LCD(0b00001000);
  1135  00737E  0E08               	movlw	8
  1136  007380  EC17  F037         	call	_char2LCD
  1137                           
  1138                           ;Tecnica1.c: 25:     char2LCD(0b00001100);
  1139  007384  0E0C               	movlw	12
  1140  007386  EC17  F037         	call	_char2LCD
  1141                           
  1142                           ;Tecnica1.c: 26:     char2LCD(0b00000000);
  1143  00738A  0E00               	movlw	0
  1144  00738C  EC17  F037         	call	_char2LCD
  1145                           
  1146                           ;Tecnica1.c: 27:     char2LCD(0b00000000);
  1147  007390  0E00               	movlw	0
  1148  007392  EC17  F037         	call	_char2LCD
  1149                           
  1150                           ;Tecnica1.c: 28:     char2LCD(0b00000000);
  1151  007396  0E00               	movlw	0
  1152  007398  EC17  F037         	call	_char2LCD
  1153                           
  1154                           ;Tecnica1.c: 29:     char2LCD(0b00000000);
  1155  00739C  0E00               	movlw	0
  1156  00739E  EC17  F037         	call	_char2LCD
  1157                           
  1158                           ;Tecnica1.c: 32:     while (contador < 8 && flag_dibujo == 0) {
  1159  0073A2  D00C               	goto	l398
  1160  0073A4                     
  1161                           ;Tecnica1.c: 33:         char2LCD(0b00011111);
  1162  0073A4  0E1F               	movlw	31
  1163  0073A6  EC17  F037         	call	_char2LCD
  1164                           
  1165                           ;Tecnica1.c: 34:         contador++;
  1166  0073AA  2A05               	incf	Simbolos@contador,f,c
  1167                           
  1168                           ;Tecnica1.c: 35:         if (contador == 8) {
  1169  0073AC  0E08               	movlw	8
  1170  0073AE  1805               	xorwf	Simbolos@contador,w,c
  1171  0073B0  A4D8               	btfss	status,2,c
  1172  0073B2  D004               	goto	l398
  1173                           
  1174                           ;Tecnica1.c: 36:             flag_dibujo = 1;
  1175  0073B4  0E01               	movlw	1
  1176  0073B6  6E04               	movwf	Simbolos@flag_dibujo,c
  1177                           
  1178                           ;Tecnica1.c: 37:             contador = 0;
  1179  0073B8  0E00               	movlw	0
  1180  0073BA  6E05               	movwf	Simbolos@contador,c
  1181  0073BC                     l398:
  1182                           
  1183                           ;Tecnica1.c: 32:     while (contador < 8 && flag_dibujo == 0) {
  1184                           
  1185                           ;Tecnica1.c: 39:     }
  1186  0073BC  0E08               	movlw	8
  1187  0073BE  6005               	cpfslt	Simbolos@contador,c
  1188  0073C0  D010               	goto	l404
  1189  0073C2  5004               	movf	Simbolos@flag_dibujo,w,c
  1190  0073C4  A4D8               	btfss	status,2,c
  1191  0073C6  D00D               	goto	l404
  1192  0073C8  D7ED               	goto	l397
  1193  0073CA                     
  1194                           ;Tecnica1.c: 43:         char2LCD(0b00011110);
  1195  0073CA  0E1E               	movlw	30
  1196  0073CC  EC17  F037         	call	_char2LCD
  1197                           
  1198                           ;Tecnica1.c: 44:         contador++;
  1199  0073D0  2A05               	incf	Simbolos@contador,f,c
  1200                           
  1201                           ;Tecnica1.c: 45:         if (contador == 8) {
  1202  0073D2  0E08               	movlw	8
  1203  0073D4  1805               	xorwf	Simbolos@contador,w,c
  1204  0073D6  A4D8               	btfss	status,2,c
  1205  0073D8  D004               	goto	l404
  1206                           
  1207                           ;Tecnica1.c: 46:             flag_dibujo = 2;
  1208  0073DA  0E02               	movlw	2
  1209  0073DC  6E04               	movwf	Simbolos@flag_dibujo,c
  1210                           
  1211                           ;Tecnica1.c: 47:             contador = 0;
  1212  0073DE  0E00               	movlw	0
  1213  0073E0  6E05               	movwf	Simbolos@contador,c
  1214  0073E2                     l404:
  1215                           
  1216                           ;Tecnica1.c: 42:     while (contador < 8 && flag_dibujo == 1) {
  1217                           
  1218                           ;Tecnica1.c: 49:     }
  1219  0073E2  0E08               	movlw	8
  1220  0073E4  6005               	cpfslt	Simbolos@contador,c
  1221  0073E6  D010               	goto	l410
  1222  0073E8  0404               	decf	Simbolos@flag_dibujo,w,c
  1223  0073EA  A4D8               	btfss	status,2,c
  1224  0073EC  D00D               	goto	l410
  1225  0073EE  D7ED               	goto	l403
  1226  0073F0                     
  1227                           ;Tecnica1.c: 53:         char2LCD(0b00011100);
  1228  0073F0  0E1C               	movlw	28
  1229  0073F2  EC17  F037         	call	_char2LCD
  1230                           
  1231                           ;Tecnica1.c: 54:         contador++;
  1232  0073F6  2A05               	incf	Simbolos@contador,f,c
  1233                           
  1234                           ;Tecnica1.c: 55:         if (contador == 8) {
  1235  0073F8  0E08               	movlw	8
  1236  0073FA  1805               	xorwf	Simbolos@contador,w,c
  1237  0073FC  A4D8               	btfss	status,2,c
  1238  0073FE  D004               	goto	l410
  1239                           
  1240                           ;Tecnica1.c: 56:             flag_dibujo = 3;
  1241  007400  0E03               	movlw	3
  1242  007402  6E04               	movwf	Simbolos@flag_dibujo,c
  1243                           
  1244                           ;Tecnica1.c: 57:             contador = 0;
  1245  007404  0E00               	movlw	0
  1246  007406  6E05               	movwf	Simbolos@contador,c
  1247  007408                     l410:
  1248                           
  1249                           ;Tecnica1.c: 52:     while (contador < 8 && flag_dibujo == 2) {
  1250                           
  1251                           ;Tecnica1.c: 59:     }
  1252  007408  0E08               	movlw	8
  1253  00740A  6005               	cpfslt	Simbolos@contador,c
  1254  00740C  D011               	goto	l416
  1255  00740E  0E02               	movlw	2
  1256  007410  1804               	xorwf	Simbolos@flag_dibujo,w,c
  1257  007412  A4D8               	btfss	status,2,c
  1258  007414  D00D               	goto	l416
  1259  007416  D7EC               	goto	l409
  1260  007418                     
  1261                           ;Tecnica1.c: 63:         char2LCD(0b00011000);
  1262  007418  0E18               	movlw	24
  1263  00741A  EC17  F037         	call	_char2LCD
  1264                           
  1265                           ;Tecnica1.c: 64:         contador++;
  1266  00741E  2A05               	incf	Simbolos@contador,f,c
  1267                           
  1268                           ;Tecnica1.c: 65:         if (contador == 8) {
  1269  007420  0E08               	movlw	8
  1270  007422  1805               	xorwf	Simbolos@contador,w,c
  1271  007424  A4D8               	btfss	status,2,c
  1272  007426  D004               	goto	l416
  1273                           
  1274                           ;Tecnica1.c: 66:             flag_dibujo = 4;
  1275  007428  0E04               	movlw	4
  1276  00742A  6E04               	movwf	Simbolos@flag_dibujo,c
  1277                           
  1278                           ;Tecnica1.c: 67:             contador = 0;
  1279  00742C  0E00               	movlw	0
  1280  00742E  6E05               	movwf	Simbolos@contador,c
  1281  007430                     l416:
  1282                           
  1283                           ;Tecnica1.c: 62:     while (contador < 8 && flag_dibujo == 3) {
  1284                           
  1285                           ;Tecnica1.c: 69:     }
  1286  007430  0E08               	movlw	8
  1287  007432  6005               	cpfslt	Simbolos@contador,c
  1288  007434  D011               	goto	l422
  1289  007436  0E03               	movlw	3
  1290  007438  1804               	xorwf	Simbolos@flag_dibujo,w,c
  1291  00743A  A4D8               	btfss	status,2,c
  1292  00743C  D00D               	goto	l422
  1293  00743E  D7EC               	goto	l415
  1294  007440                     
  1295                           ;Tecnica1.c: 73:         char2LCD(0b00010000);
  1296  007440  0E10               	movlw	16
  1297  007442  EC17  F037         	call	_char2LCD
  1298                           
  1299                           ;Tecnica1.c: 74:         contador++;
  1300  007446  2A05               	incf	Simbolos@contador,f,c
  1301                           
  1302                           ;Tecnica1.c: 75:         if (contador == 8) {
  1303  007448  0E08               	movlw	8
  1304  00744A  1805               	xorwf	Simbolos@contador,w,c
  1305  00744C  A4D8               	btfss	status,2,c
  1306  00744E  D004               	goto	l422
  1307                           
  1308                           ;Tecnica1.c: 76:             flag_dibujo = 1;
  1309  007450  0E01               	movlw	1
  1310  007452  6E04               	movwf	Simbolos@flag_dibujo,c
  1311                           
  1312                           ;Tecnica1.c: 77:             contador = 0;
  1313  007454  0E00               	movlw	0
  1314  007456  6E05               	movwf	Simbolos@contador,c
  1315  007458                     l422:
  1316                           
  1317                           ;Tecnica1.c: 72:     while (contador < 8 && flag_dibujo == 4) {
  1318                           
  1319                           ;Tecnica1.c: 79:     }
  1320  007458  0E08               	movlw	8
  1321  00745A  6005               	cpfslt	Simbolos@contador,c
  1322  00745C  D004               	goto	u3000
  1323  00745E  0E04               	movlw	4
  1324  007460  1804               	xorwf	Simbolos@flag_dibujo,w,c
  1325  007462  B4D8               	btfsc	status,2,c
  1326  007464  D7ED               	goto	l421
  1327  007466                     u3000:
  1328                           
  1329                           ;Tecnica1.c: 81:     ret_HOME();
  1330  007466  EC0A  F037         	call	_ret_HOME	;wreg free
  1331  00746A  0012               	return		;funcret
  1332  00746C                     __end_of_Simbolos:
  1333                           	opt stack 0
  1334                           tblptru	equ	0xFF8
  1335                           tblptrh	equ	0xFF7
  1336                           tblptrl	equ	0xFF6
  1337                           tablat	equ	0xFF5
  1338                           intcon	equ	0xFF2
  1339                           postinc0	equ	0xFEE
  1340                           wreg	equ	0xFE8
  1341                           postdec1	equ	0xFE5
  1342                           fsr1l	equ	0xFE1
  1343                           status	equ	0xFD8
  1344                           
  1345 ;; *************** function _ret_HOME *****************
  1346 ;; Defined at:
  1347 ;;		line 50 in file "lcd.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, status,2, status,0, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1361 ;;      Params:         0       0       0       0       0       0       0       0       0
  1362 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1364 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1365 ;;Total ram usage:        0 bytes
  1366 ;; Hardware stack levels used:    1
  1367 ;; Hardware stack levels required when called:    4
  1368 ;; This function calls:
  1369 ;;		_read_BUSY
  1370 ;;		_write_CMD
  1371 ;; This function is called by:
  1372 ;;		_Simbolos
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text4
  1377  006E14                     __ptext4:
  1378                           	opt stack 0
  1379  006E14                     _ret_HOME:
  1380                           	opt stack 25
  1381                           
  1382                           ;lcd.c: 51:  write_CMD(0x02);
  1383                           
  1384                           ;incstack = 0
  1385  006E14  0E02               	movlw	2
  1386  006E16  EC1E  F037         	call	_write_CMD
  1387                           
  1388                           ;lcd.c: 52:  read_BUSY();
  1389  006E1A  EC85  F037         	call	_read_BUSY	;wreg free
  1390  006E1E  0012               	return		;funcret
  1391  006E20                     __end_of_ret_HOME:
  1392                           	opt stack 0
  1393                           tblptru	equ	0xFF8
  1394                           tblptrh	equ	0xFF7
  1395                           tblptrl	equ	0xFF6
  1396                           tablat	equ	0xFF5
  1397                           intcon	equ	0xFF2
  1398                           postinc0	equ	0xFEE
  1399                           wreg	equ	0xFE8
  1400                           postdec1	equ	0xFE5
  1401                           fsr1l	equ	0xFE1
  1402                           status	equ	0xFD8
  1403                           
  1404 ;; *************** function _PicIni21 *****************
  1405 ;; Defined at:
  1406 ;;		line 3 in file "ConfShield2_1.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;		None
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, status,2
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1420 ;;      Params:         0       0       0       0       0       0       0       0       0
  1421 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1423 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1424 ;;Total ram usage:        0 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    2
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_main
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text5
  1435  006F5E                     __ptext5:
  1436                           	opt stack 0
  1437  006F5E                     _PicIni21:
  1438                           	opt stack 28
  1439                           
  1440                           ;ConfShield2_1.c: 7:     LATA = 0x00;
  1441                           
  1442                           ;incstack = 0
  1443  006F5E  0E00               	movlw	0
  1444  006F60  6E89               	movwf	3977,c	;volatile
  1445                           
  1446                           ;ConfShield2_1.c: 8:     LATB = 0x00;
  1447  006F62  0E00               	movlw	0
  1448  006F64  6E8A               	movwf	3978,c	;volatile
  1449                           
  1450                           ;ConfShield2_1.c: 9:     LATC = 0x00;
  1451  006F66  0E00               	movlw	0
  1452  006F68  6E8B               	movwf	3979,c	;volatile
  1453                           
  1454                           ;ConfShield2_1.c: 10:     LATD = 0x00;
  1455  006F6A  0E00               	movlw	0
  1456  006F6C  6E8C               	movwf	3980,c	;volatile
  1457                           
  1458                           ;ConfShield2_1.c: 11:     LATE = 0x00;
  1459  006F6E  0E00               	movlw	0
  1460  006F70  6E8D               	movwf	3981,c	;volatile
  1461                           
  1462                           ;ConfShield2_1.c: 15:     TRISA = 0xFF;
  1463  006F72  6892               	setf	3986,c	;volatile
  1464                           
  1465                           ;ConfShield2_1.c: 17:     TRISB = 0xFF;
  1466  006F74  6893               	setf	3987,c	;volatile
  1467                           
  1468                           ;ConfShield2_1.c: 18:     TRISC = 0xFF;
  1469  006F76  6894               	setf	3988,c	;volatile
  1470                           
  1471                           ;ConfShield2_1.c: 22:     TRISD = 0x0C;
  1472  006F78  0E0C               	movlw	12
  1473  006F7A  6E95               	movwf	3989,c	;volatile
  1474                           
  1475                           ;ConfShield2_1.c: 24:     TRISE = 0x00;
  1476  006F7C  0E00               	movlw	0
  1477  006F7E  6E96               	movwf	3990,c	;volatile
  1478                           
  1479                           ;ConfShield2_1.c: 27:     CMCON = 0x07;
  1480  006F80  0E07               	movlw	7
  1481  006F82  6EB4               	movwf	4020,c	;volatile
  1482                           
  1483                           ;ConfShield2_1.c: 28:     ADCON1 = 0x0F;
  1484  006F84  0E0F               	movlw	15
  1485  006F86  6EC1               	movwf	4033,c	;volatile
  1486  006F88  0012               	return		;funcret
  1487  006F8A                     __end_of_PicIni21:
  1488                           	opt stack 0
  1489                           tblptru	equ	0xFF8
  1490                           tblptrh	equ	0xFF7
  1491                           tblptrl	equ	0xFF6
  1492                           tablat	equ	0xFF5
  1493                           intcon	equ	0xFF2
  1494                           postinc0	equ	0xFEE
  1495                           wreg	equ	0xFE8
  1496                           postdec1	equ	0xFE5
  1497                           fsr1l	equ	0xFE1
  1498                           status	equ	0xFD8
  1499                           
  1500 ;; *************** function _LCD_init *****************
  1501 ;; Defined at:
  1502 ;;		line 67 in file "lcd.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;		None
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;		None
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg, status,2, status,0, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1516 ;;      Params:         0       0       0       0       0       0       0       0       0
  1517 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1518 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1519 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1520 ;;Total ram usage:        0 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; Hardware stack levels required when called:    4
  1523 ;; This function calls:
  1524 ;;		_read_BUSY
  1525 ;;		_write_CMD
  1526 ;; This function is called by:
  1527 ;;		_main
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text6
  1532  0071F6                     __ptext6:
  1533                           	opt stack 0
  1534  0071F6                     _LCD_init:
  1535                           	opt stack 26
  1536                           
  1537                           ;lcd.c: 68:     TRISD &= 0x0F;
  1538                           
  1539                           ;incstack = 0
  1540  0071F6  0E0F               	movlw	15
  1541  0071F8  1695               	andwf	3989,f,c	;volatile
  1542                           
  1543                           ;lcd.c: 69:     TRISEbits.RE2 = 0;
  1544  0071FA  9496               	bcf	3990,2,c	;volatile
  1545                           
  1546                           ;lcd.c: 70:     TRISEbits.RE1 = 0;
  1547  0071FC  9296               	bcf	3990,1,c	;volatile
  1548                           
  1549                           ;lcd.c: 71:     TRISEbits.RE0 = 0;
  1550  0071FE  9096               	bcf	3990,0,c	;volatile
  1551                           
  1552                           ;lcd.c: 74:  LCD_tout = 30;
  1553  007200  0E00               	movlw	0
  1554  007202  6E5E               	movwf	_LCD_tout+1,c
  1555  007204  0E1E               	movlw	30
  1556  007206  6E5D               	movwf	_LCD_tout,c
  1557  007208  505D               	movf	_LCD_tout,w,c
  1558  00720A  105E               	iorwf	_LCD_tout+1,w,c
  1559  00720C  A4D8               	btfss	status,2,c
  1560  00720E  D7FC               	goto	l97
  1561                           
  1562                           ;lcd.c: 77:  write_CMD(0x02);
  1563  007210  0E02               	movlw	2
  1564  007212  EC1E  F037         	call	_write_CMD
  1565                           
  1566                           ;lcd.c: 78:  LCD_tout = 1;
  1567  007216  0E00               	movlw	0
  1568  007218  6E5E               	movwf	_LCD_tout+1,c
  1569  00721A  0E01               	movlw	1
  1570  00721C  6E5D               	movwf	_LCD_tout,c
  1571  00721E  505D               	movf	_LCD_tout,w,c
  1572  007220  105E               	iorwf	_LCD_tout+1,w,c
  1573  007222  A4D8               	btfss	status,2,c
  1574  007224  D7FC               	goto	l100
  1575                           
  1576                           ;lcd.c: 81:  write_CMD(0x28);
  1577  007226  0E28               	movlw	40
  1578  007228  EC1E  F037         	call	_write_CMD
  1579                           
  1580                           ;lcd.c: 82:  LCD_tout = 1;
  1581  00722C  0E00               	movlw	0
  1582  00722E  6E5E               	movwf	_LCD_tout+1,c
  1583  007230  0E01               	movlw	1
  1584  007232  6E5D               	movwf	_LCD_tout,c
  1585  007234  505D               	movf	_LCD_tout,w,c
  1586  007236  105E               	iorwf	_LCD_tout+1,w,c
  1587  007238  A4D8               	btfss	status,2,c
  1588  00723A  D7FC               	goto	l103
  1589                           
  1590                           ;lcd.c: 85:  write_CMD(0x0C);
  1591  00723C  0E0C               	movlw	12
  1592  00723E  EC1E  F037         	call	_write_CMD
  1593                           
  1594                           ;lcd.c: 86:  LCD_tout = 1;
  1595  007242  0E00               	movlw	0
  1596  007244  6E5E               	movwf	_LCD_tout+1,c
  1597  007246  0E01               	movlw	1
  1598  007248  6E5D               	movwf	_LCD_tout,c
  1599  00724A  505D               	movf	_LCD_tout,w,c
  1600  00724C  105E               	iorwf	_LCD_tout+1,w,c
  1601  00724E  A4D8               	btfss	status,2,c
  1602  007250  D7FC               	goto	l106
  1603                           
  1604                           ;lcd.c: 89:  write_CMD(0x01);
  1605  007252  0E01               	movlw	1
  1606  007254  EC1E  F037         	call	_write_CMD
  1607                           
  1608                           ;lcd.c: 90:  LCD_tout = 1;
  1609  007258  0E00               	movlw	0
  1610  00725A  6E5E               	movwf	_LCD_tout+1,c
  1611  00725C  0E01               	movlw	1
  1612  00725E  6E5D               	movwf	_LCD_tout,c
  1613  007260  505D               	movf	_LCD_tout,w,c
  1614  007262  105E               	iorwf	_LCD_tout+1,w,c
  1615  007264  A4D8               	btfss	status,2,c
  1616  007266  D7FC               	goto	l109
  1617                           
  1618                           ;lcd.c: 93:  write_CMD(0x06);
  1619  007268  0E06               	movlw	6
  1620  00726A  EC1E  F037         	call	_write_CMD
  1621                           
  1622                           ;lcd.c: 94:  LCD_tout = 1;
  1623  00726E  0E00               	movlw	0
  1624  007270  6E5E               	movwf	_LCD_tout+1,c
  1625  007272  0E01               	movlw	1
  1626  007274  6E5D               	movwf	_LCD_tout,c
  1627  007276  505D               	movf	_LCD_tout,w,c
  1628  007278  105E               	iorwf	_LCD_tout+1,w,c
  1629  00727A  A4D8               	btfss	status,2,c
  1630  00727C  D7FC               	goto	l112
  1631                           
  1632                           ;lcd.c: 97:  read_BUSY();
  1633  00727E  EC85  F037         	call	_read_BUSY	;wreg free
  1634  007282  0012               	return		;funcret
  1635  007284                     __end_of_LCD_init:
  1636                           	opt stack 0
  1637                           tblptru	equ	0xFF8
  1638                           tblptrh	equ	0xFF7
  1639                           tblptrl	equ	0xFF6
  1640                           tablat	equ	0xFF5
  1641                           intcon	equ	0xFF2
  1642                           postinc0	equ	0xFEE
  1643                           wreg	equ	0xFE8
  1644                           postdec1	equ	0xFE5
  1645                           fsr1l	equ	0xFE1
  1646                           status	equ	0xFD8
  1647                           
  1648 ;; *************** function _AD_Converter *****************
  1649 ;; Defined at:
  1650 ;;		line 115 in file "Tecnica1.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  Calculo_Prom    4   16[BANK0 ] unsigned long 
  1655 ;;  UVI             2   24[BANK0 ] unsigned int 
  1656 ;;  UV_VOLTS        2   20[BANK0 ] unsigned int 
  1657 ;;  UV_bits         2   12[BANK0 ] unsigned int 
  1658 ;;  ConversionAD    2    2[BANK0 ] int 
  1659 ;;  contador_pro    1   11[BANK0 ] unsigned char 
  1660 ;;  VumetroF        1   10[BANK0 ] unsigned char 
  1661 ;;  Vumetro         1    9[BANK0 ] unsigned char 
  1662 ;;  UniDiezMil      1    8[BANK0 ] unsigned char 
  1663 ;;  UniMil          1    7[BANK0 ] unsigned char 
  1664 ;;  Centena         1    6[BANK0 ] unsigned char 
  1665 ;;  Decena          1    5[BANK0 ] unsigned char 
  1666 ;;  Unidad          1    4[BANK0 ] unsigned char 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1676 ;;      Params:         0       0       0       0       0       0       0       0       0
  1677 ;;      Locals:         0      26       0       0       0       0       0       0       0
  1678 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1679 ;;      Totals:         4      26       0       0       0       0       0       0       0
  1680 ;;Total ram usage:       30 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; Hardware stack levels required when called:    6
  1683 ;; This function calls:
  1684 ;;		_Vumetro_Func
  1685 ;;		___fldiv
  1686 ;;		___flmul
  1687 ;;		___fltol
  1688 ;;		___lldiv
  1689 ;;		___lwdiv
  1690 ;;		___lwmod
  1691 ;;		___wmul
  1692 ;;		___xxtofl
  1693 ;;		_char2LCD
  1694 ;;		_msg2LCD
  1695 ;;		_obtener_ADC10
  1696 ;;		_set_CURSOR
  1697 ;; This function is called by:
  1698 ;;		_main
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text7
  1703  007BB4                     __ptext7:
  1704                           	opt stack 0
  1705  007BB4                     _AD_Converter:
  1706                           	opt stack 24
  1707                           
  1708                           ;Tecnica1.c: 117:     long unsigned int Calculo_Prom = 0;
  1709                           
  1710                           ;incstack = 0
  1711  007BB4  0E00               	movlw	0
  1712  007BB6  0100               	movlb	0	; () banked
  1713  007BB8  6F70               	movwf	AD_Converter@Calculo_Prom& (0+255),b
  1714  007BBA  0E00               	movlw	0
  1715  007BBC  6F71               	movwf	(AD_Converter@Calculo_Prom+1)& (0+255),b
  1716  007BBE  0E00               	movlw	0
  1717  007BC0  6F72               	movwf	(AD_Converter@Calculo_Prom+2)& (0+255),b
  1718  007BC2  0E00               	movlw	0
  1719  007BC4  6F73               	movwf	(AD_Converter@Calculo_Prom+3)& (0+255),b
  1720                           
  1721                           ;Tecnica1.c: 118:     unsigned char contador_prom = 0;
  1722  007BC6  0E00               	movlw	0
  1723  007BC8  6F6B               	movwf	AD_Converter@contador_prom& (0+255),b
  1724                           
  1725                           ;Tecnica1.c: 119:     int ConversionAD = 0;
  1726  007BCA  0E00               	movlw	0
  1727  007BCC  6F63               	movwf	(AD_Converter@ConversionAD+1)& (0+255),b
  1728  007BCE  0E00               	movlw	0
  1729  007BD0  6F62               	movwf	AD_Converter@ConversionAD& (0+255),b
  1730                           
  1731                           ;Tecnica1.c: 120:     unsigned char Unidad, Decena, Centena, UniMil, UniDiezMil;;Tecnica
      +                          1.c: 121:     unsigned char Vumetro = 0, VumetroF = 0;
  1732  007BD2  0E00               	movlw	0
  1733  007BD4  6F69               	movwf	AD_Converter@Vumetro& (0+255),b
  1734  007BD6  0E00               	movlw	0
  1735  007BD8  6F6A               	movwf	AD_Converter@VumetroF& (0+255),b
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;Tecnica1.c: 122:     unsigned int UV_bits, UV_VOLTS, UVI;;Tecnica1.c: 124:     set_CURS
      +                          OR(9);
  1739  007BDA  0E09               	movlw	9
  1740  007BDC  EC2D  F037         	call	_set_CURSOR
  1741                           
  1742                           ;Tecnica1.c: 125:     msg2LCD("mW/cm");
  1743  007BE0  0E34               	movlw	low STR_2
  1744  007BE2  6E03               	movwf	msg2LCD@datos,c
  1745  007BE4  0E20               	movlw	high STR_2
  1746  007BE6  6E04               	movwf	msg2LCD@datos+1,c
  1747  007BE8  ECC5  F037         	call	_msg2LCD	;wreg free
  1748                           
  1749                           ;Tecnica1.c: 126:     set_CURSOR(4);
  1750  007BEC  0E04               	movlw	4
  1751  007BEE  EC2D  F037         	call	_set_CURSOR
  1752                           
  1753                           ;Tecnica1.c: 127:     msg2LCD(".");
  1754  007BF2  0E3A               	movlw	low STR_3
  1755  007BF4  6E03               	movwf	msg2LCD@datos,c
  1756  007BF6  0E20               	movlw	high STR_3
  1757  007BF8  6E04               	movwf	msg2LCD@datos+1,c
  1758  007BFA  ECC5  F037         	call	_msg2LCD	;wreg free
  1759                           
  1760                           ;Tecnica1.c: 128:     set_CURSOR(14);
  1761  007BFE  0E0E               	movlw	14
  1762  007C00  EC2D  F037         	call	_set_CURSOR
  1763                           
  1764                           ;Tecnica1.c: 129:     char2LCD(0);
  1765  007C04  0E00               	movlw	0
  1766  007C06  EC17  F037         	call	_char2LCD
  1767                           
  1768                           ;Tecnica1.c: 133:             limitadorADC = 5;
  1769  007C0A  0E05               	movlw	5
  1770  007C0C  0100               	movlb	0	; () banked
  1771  007C0E  6F87               	movwf	_limitadorADC& (0+255),b
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;Tecnica1.c: 135:             ConversionAD = obtener_ADC10();
  1775  007C10  ECDC  F037         	call	_obtener_ADC10	;wreg free
  1776  007C14  C001  F062         	movff	?_obtener_ADC10,AD_Converter@ConversionAD
  1777  007C18  C002  F063         	movff	?_obtener_ADC10+1,AD_Converter@ConversionAD+1
  1778                           
  1779                           ;Tecnica1.c: 138:             if (contador_prom < 60) {
  1780  007C1C  0E3C               	movlw	60
  1781  007C1E  0100               	movlb	0	; () banked
  1782  007C20  616B               	cpfslt	AD_Converter@contador_prom& (0+255),b
  1783  007C22  D013               	goto	l443
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;Tecnica1.c: 139:                 Calculo_Prom += ConversionAD;
  1787  007C24  C062  F04B         	movff	AD_Converter@ConversionAD,??_AD_Converter
  1788  007C28  C063  F04C         	movff	AD_Converter@ConversionAD+1,??_AD_Converter+1
  1789  007C2C  0E00               	movlw	0
  1790  007C2E  BE4C               	btfsc	(??_AD_Converter+1)& (0+255),7,c
  1791  007C30  0EFF               	movlw	255
  1792  007C32  6E4D               	movwf	(??_AD_Converter+2)& (0+255),c
  1793  007C34  6E4E               	movwf	(??_AD_Converter+3)& (0+255),c
  1794  007C36  504B               	movf	??_AD_Converter,w,c
  1795  007C38  2770               	addwf	AD_Converter@Calculo_Prom& (0+255),f,b
  1796  007C3A  504C               	movf	??_AD_Converter+1,w,c
  1797  007C3C  2371               	addwfc	(AD_Converter@Calculo_Prom+1)& (0+255),f,b
  1798  007C3E  504D               	movf	??_AD_Converter+2,w,c
  1799  007C40  2372               	addwfc	(AD_Converter@Calculo_Prom+2)& (0+255),f,b
  1800  007C42  504E               	movf	??_AD_Converter+3,w,c
  1801  007C44  2373               	addwfc	(AD_Converter@Calculo_Prom+3)& (0+255),f,b
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;Tecnica1.c: 140:                 contador_prom++;
  1805  007C46  2B6B               	incf	AD_Converter@contador_prom& (0+255),f,b
  1806                           
  1807                           ;Tecnica1.c: 141:             } else {
  1808  007C48  D029               	goto	l444
  1809  007C4A                     l443:
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;Tecnica1.c: 142:                 Calculo_Prom /= 60;
  1813                           
  1814                           ; BSR set to: 0
  1815  007C4A  C070  F001         	movff	AD_Converter@Calculo_Prom,___lldiv@dividend
  1816  007C4E  C071  F002         	movff	AD_Converter@Calculo_Prom+1,___lldiv@dividend+1
  1817  007C52  C072  F003         	movff	AD_Converter@Calculo_Prom+2,___lldiv@dividend+2
  1818  007C56  C073  F004         	movff	AD_Converter@Calculo_Prom+3,___lldiv@dividend+3
  1819  007C5A  0E3C               	movlw	60
  1820  007C5C  6E05               	movwf	___lldiv@divisor,c
  1821  007C5E  0E00               	movlw	0
  1822  007C60  6E06               	movwf	___lldiv@divisor+1,c
  1823  007C62  0E00               	movlw	0
  1824  007C64  6E07               	movwf	___lldiv@divisor+2,c
  1825  007C66  0E00               	movlw	0
  1826  007C68  6E08               	movwf	___lldiv@divisor+3,c
  1827  007C6A  EC78  F038         	call	___lldiv	;wreg free
  1828  007C6E  C001  F070         	movff	?___lldiv,AD_Converter@Calculo_Prom
  1829  007C72  C002  F071         	movff	?___lldiv+1,AD_Converter@Calculo_Prom+1
  1830  007C76  C003  F072         	movff	?___lldiv+2,AD_Converter@Calculo_Prom+2
  1831  007C7A  C004  F073         	movff	?___lldiv+3,AD_Converter@Calculo_Prom+3
  1832                           
  1833                           ;Tecnica1.c: 143:                 contador_prom = 0;
  1834  007C7E  0E00               	movlw	0
  1835  007C80  0100               	movlb	0	; () banked
  1836  007C82  6F6B               	movwf	AD_Converter@contador_prom& (0+255),b
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;Tecnica1.c: 144:                 UV_bits = Calculo_Prom;
  1840  007C84  C070  F06C         	movff	AD_Converter@Calculo_Prom,AD_Converter@UV_bits
  1841  007C88  C071  F06D         	movff	AD_Converter@Calculo_Prom+1,AD_Converter@UV_bits+1
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;Tecnica1.c: 145:                 Calculo_Prom = 0;
  1845  007C8C  0E00               	movlw	0
  1846  007C8E  6F70               	movwf	AD_Converter@Calculo_Prom& (0+255),b
  1847  007C90  0E00               	movlw	0
  1848  007C92  6F71               	movwf	(AD_Converter@Calculo_Prom+1)& (0+255),b
  1849  007C94  0E00               	movlw	0
  1850  007C96  6F72               	movwf	(AD_Converter@Calculo_Prom+2)& (0+255),b
  1851  007C98  0E00               	movlw	0
  1852  007C9A  6F73               	movwf	(AD_Converter@Calculo_Prom+3)& (0+255),b
  1853  007C9C                     l444:
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;Tecnica1.c: 149:         if(UV_bits <= 330)
  1857                           
  1858                           ; BSR set to: 0
  1859  007C9C  0E4B               	movlw	75
  1860  007C9E  5D6C               	subwf	AD_Converter@UV_bits& (0+255),w,b
  1861  007CA0  0E01               	movlw	1
  1862  007CA2  596D               	subwfb	(AD_Converter@UV_bits+1)& (0+255),w,b
  1863  007CA4  B0D8               	btfsc	status,0,c
  1864  007CA6  D005               	goto	l445
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;Tecnica1.c: 150:                 UV_VOLTS = 0;
  1868  007CA8  0E00               	movlw	0
  1869  007CAA  6F75               	movwf	(AD_Converter@UV_VOLTS+1)& (0+255),b
  1870  007CAC  0E00               	movlw	0
  1871  007CAE  6F74               	movwf	AD_Converter@UV_VOLTS& (0+255),b
  1872  007CB0  D03B               	goto	l446
  1873  007CB2                     l445:
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;Tecnica1.c: 153:                 UV_VOLTS = UV_bits * 3300.0 / 1023;
  1877                           
  1878                           ; BSR set to: 0
  1879  007CB2  0E00               	movlw	0
  1880  007CB4  6E2C               	movwf	___fldiv@a,c
  1881  007CB6  0EC0               	movlw	192
  1882  007CB8  6E2D               	movwf	___fldiv@a+1,c
  1883  007CBA  0E7F               	movlw	127
  1884  007CBC  6E2E               	movwf	___fldiv@a+2,c
  1885  007CBE  0E44               	movlw	68
  1886  007CC0  6E2F               	movwf	___fldiv@a+3,c
  1887  007CC2  0E00               	movlw	0
  1888  007CC4  6E13               	movwf	___flmul@a,c
  1889  007CC6  0E40               	movlw	64
  1890  007CC8  6E14               	movwf	___flmul@a+1,c
  1891  007CCA  0E4E               	movlw	78
  1892  007CCC  6E15               	movwf	___flmul@a+2,c
  1893  007CCE  0E45               	movlw	69
  1894  007CD0  6E16               	movwf	___flmul@a+3,c
  1895  007CD2  C06C  F001         	movff	AD_Converter@UV_bits,___xxtofl@val
  1896  007CD6  C06D  F002         	movff	AD_Converter@UV_bits+1,___xxtofl@val+1
  1897  007CDA  6A03               	clrf	___xxtofl@val+2,c
  1898  007CDC  6A04               	clrf	___xxtofl@val+3,c
  1899  007CDE  0E00               	movlw	0
  1900  007CE0  EC36  F03A         	call	___xxtofl
  1901  007CE4  C001  F00F         	movff	?___xxtofl,___flmul@b
  1902  007CE8  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1903  007CEC  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1904  007CF0  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1905  007CF4  EC32  F03C         	call	___flmul	;wreg free
  1906  007CF8  C00F  F028         	movff	?___flmul,___fldiv@b
  1907  007CFC  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1908  007D00  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1909  007D04  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1910  007D08  ECD6  F03A         	call	___fldiv	;wreg free
  1911  007D0C  C028  F041         	movff	?___fldiv,___fltol@f1
  1912  007D10  C029  F042         	movff	?___fldiv+1,___fltol@f1+1
  1913  007D14  C02A  F043         	movff	?___fldiv+2,___fltol@f1+2
  1914  007D18  C02B  F044         	movff	?___fldiv+3,___fltol@f1+3
  1915  007D1C  EC42  F039         	call	___fltol	;wreg free
  1916  007D20  C041  F074         	movff	?___fltol,AD_Converter@UV_VOLTS
  1917  007D24  C042  F075         	movff	?___fltol+1,AD_Converter@UV_VOLTS+1
  1918  007D28                     l446:
  1919                           
  1920                           ;Tecnica1.c: 155:         if(UV_VOLTS > 0)
  1921  007D28  0100               	movlb	0	; () banked
  1922  007D2A  5174               	movf	AD_Converter@UV_VOLTS& (0+255),w,b
  1923  007D2C  1175               	iorwf	(AD_Converter@UV_VOLTS+1)& (0+255),w,b
  1924  007D2E  B4D8               	btfsc	status,2,c
  1925  007D30  D048               	goto	l447
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;Tecnica1.c: 156:             UVI = ((UV_VOLTS - 1000) * 15000.0) / 2000;
  1929  007D32  0E00               	movlw	0
  1930  007D34  6E2C               	movwf	___fldiv@a,c
  1931  007D36  0E00               	movlw	0
  1932  007D38  6E2D               	movwf	___fldiv@a+1,c
  1933  007D3A  0EFA               	movlw	250
  1934  007D3C  6E2E               	movwf	___fldiv@a+2,c
  1935  007D3E  0E44               	movlw	68
  1936  007D40  6E2F               	movwf	___fldiv@a+3,c
  1937  007D42  0E00               	movlw	0
  1938  007D44  6E13               	movwf	___flmul@a,c
  1939  007D46  0E60               	movlw	96
  1940  007D48  6E14               	movwf	___flmul@a+1,c
  1941  007D4A  0E6A               	movlw	106
  1942  007D4C  6E15               	movwf	___flmul@a+2,c
  1943  007D4E  0E46               	movlw	70
  1944  007D50  6E16               	movwf	___flmul@a+3,c
  1945  007D52  0E18               	movlw	24
  1946  007D54  6E4B               	movwf	??_AD_Converter& (0+255),c
  1947  007D56  0EFC               	movlw	252
  1948  007D58  6E4C               	movwf	(??_AD_Converter+1)& (0+255),c
  1949  007D5A  C074  F04D         	movff	AD_Converter@UV_VOLTS,??_AD_Converter+2
  1950  007D5E  C075  F04E         	movff	AD_Converter@UV_VOLTS+1,??_AD_Converter+3
  1951  007D62  504B               	movf	??_AD_Converter,w,c
  1952  007D64  264D               	addwf	??_AD_Converter+2,f,c
  1953  007D66  504C               	movf	??_AD_Converter+1,w,c
  1954  007D68  224E               	addwfc	??_AD_Converter+3,f,c
  1955  007D6A  C04D  F001         	movff	??_AD_Converter+2,___xxtofl@val
  1956  007D6E  C04E  F002         	movff	??_AD_Converter+3,___xxtofl@val+1
  1957  007D72  6A03               	clrf	___xxtofl@val+2,c
  1958  007D74  6A04               	clrf	___xxtofl@val+3,c
  1959  007D76  0E00               	movlw	0
  1960  007D78  EC36  F03A         	call	___xxtofl
  1961  007D7C  C001  F00F         	movff	?___xxtofl,___flmul@b
  1962  007D80  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1963  007D84  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1964  007D88  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1965  007D8C  EC32  F03C         	call	___flmul	;wreg free
  1966  007D90  C00F  F028         	movff	?___flmul,___fldiv@b
  1967  007D94  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1968  007D98  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1969  007D9C  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1970  007DA0  ECD6  F03A         	call	___fldiv	;wreg free
  1971  007DA4  C028  F041         	movff	?___fldiv,___fltol@f1
  1972  007DA8  C029  F042         	movff	?___fldiv+1,___fltol@f1+1
  1973  007DAC  C02A  F043         	movff	?___fldiv+2,___fltol@f1+2
  1974  007DB0  C02B  F044         	movff	?___fldiv+3,___fltol@f1+3
  1975  007DB4  EC42  F039         	call	___fltol	;wreg free
  1976  007DB8  C041  F078         	movff	?___fltol,AD_Converter@UVI
  1977  007DBC  C042  F079         	movff	?___fltol+1,AD_Converter@UVI+1
  1978  007DC0  D005               	goto	l448
  1979  007DC2                     l447:
  1980  007DC2  0E00               	movlw	0
  1981  007DC4  0100               	movlb	0	; () banked
  1982  007DC6  6F79               	movwf	(AD_Converter@UVI+1)& (0+255),b
  1983  007DC8  0E00               	movlw	0
  1984  007DCA  6F78               	movwf	AD_Converter@UVI& (0+255),b
  1985  007DCC                     l448:
  1986                           
  1987                           ;Tecnica1.c: 159:         if(UV_VOLTS >= 3000)
  1988                           
  1989                           ; BSR set to: 0
  1990  007DCC  0EB8               	movlw	184
  1991  007DCE  0100               	movlb	0	; () banked
  1992  007DD0  5D74               	subwf	AD_Converter@UV_VOLTS& (0+255),w,b
  1993  007DD2  0E0B               	movlw	11
  1994  007DD4  5975               	subwfb	(AD_Converter@UV_VOLTS+1)& (0+255),w,b
  1995  007DD6  A0D8               	btfss	status,0,c
  1996  007DD8  D004               	goto	l449
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;Tecnica1.c: 160:             UVI = 15000;
  2000  007DDA  0E3A               	movlw	58
  2001  007DDC  6F79               	movwf	(AD_Converter@UVI+1)& (0+255),b
  2002  007DDE  0E98               	movlw	152
  2003  007DE0  6F78               	movwf	AD_Converter@UVI& (0+255),b
  2004  007DE2                     l449:
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;Tecnica1.c: 163:         UniDiezMil = UVI / 10000 + 48;
  2008                           
  2009                           ; BSR set to: 0
  2010  007DE2  C078  F00C         	movff	AD_Converter@UVI,___lwdiv@dividend
  2011  007DE6  C079  F00D         	movff	AD_Converter@UVI+1,___lwdiv@dividend+1
  2012  007DEA  0E27               	movlw	39
  2013  007DEC  6E0F               	movwf	___lwdiv@divisor+1,c
  2014  007DEE  0E10               	movlw	16
  2015  007DF0  6E0E               	movwf	___lwdiv@divisor,c
  2016  007DF2  EC1D  F038         	call	___lwdiv	;wreg free
  2017  007DF6  500C               	movf	?___lwdiv,w,c
  2018  007DF8  0F30               	addlw	48
  2019  007DFA  0100               	movlb	0	; () banked
  2020  007DFC  6F68               	movwf	AD_Converter@UniDiezMil& (0+255),b
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;Tecnica1.c: 164:         UniMil = (UVI % 10000) / 1000 + 48;
  2024  007DFE  0E27               	movlw	39
  2025  007E00  6E04               	movwf	___lwmod@divisor+1,c
  2026  007E02  0E10               	movlw	16
  2027  007E04  6E03               	movwf	___lwmod@divisor,c
  2028  007E06  C078  F001         	movff	AD_Converter@UVI,___lwmod@dividend
  2029  007E0A  C079  F002         	movff	AD_Converter@UVI+1,___lwmod@dividend+1
  2030  007E0E  ECFC  F037         	call	___lwmod	;wreg free
  2031  007E12  C001  F00C         	movff	?___lwmod,___lwdiv@dividend
  2032  007E16  C002  F00D         	movff	?___lwmod+1,___lwdiv@dividend+1
  2033  007E1A  0E03               	movlw	3
  2034  007E1C  6E0F               	movwf	___lwdiv@divisor+1,c
  2035  007E1E  0EE8               	movlw	232
  2036  007E20  6E0E               	movwf	___lwdiv@divisor,c
  2037  007E22  EC1D  F038         	call	___lwdiv	;wreg free
  2038  007E26  500C               	movf	?___lwdiv,w,c
  2039  007E28  0F30               	addlw	48
  2040  007E2A  0100               	movlb	0	; () banked
  2041  007E2C  6F67               	movwf	AD_Converter@UniMil& (0+255),b
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;Tecnica1.c: 165:         Centena = ((UVI % 10000) % 1000) /100 + 48;
  2045  007E2E  0E27               	movlw	39
  2046  007E30  6E04               	movwf	___lwmod@divisor+1,c
  2047  007E32  0E10               	movlw	16
  2048  007E34  6E03               	movwf	___lwmod@divisor,c
  2049  007E36  C078  F001         	movff	AD_Converter@UVI,___lwmod@dividend
  2050  007E3A  C079  F002         	movff	AD_Converter@UVI+1,___lwmod@dividend+1
  2051  007E3E  ECFC  F037         	call	___lwmod	;wreg free
  2052  007E42  C001  F076         	movff	?___lwmod,_AD_Converter$2568
  2053  007E46  C002  F077         	movff	?___lwmod+1,_AD_Converter$2568+1
  2054                           
  2055                           ;Tecnica1.c: 165:         Centena = ((UVI % 10000) % 1000) /100 + 48;
  2056  007E4A  0E03               	movlw	3
  2057  007E4C  6E04               	movwf	___lwmod@divisor+1,c
  2058  007E4E  0EE8               	movlw	232
  2059  007E50  6E03               	movwf	___lwmod@divisor,c
  2060  007E52  C076  F001         	movff	_AD_Converter$2568,___lwmod@dividend
  2061  007E56  C077  F002         	movff	_AD_Converter$2568+1,___lwmod@dividend+1
  2062  007E5A  ECFC  F037         	call	___lwmod	;wreg free
  2063  007E5E  C001  F00C         	movff	?___lwmod,___lwdiv@dividend
  2064  007E62  C002  F00D         	movff	?___lwmod+1,___lwdiv@dividend+1
  2065  007E66  0E00               	movlw	0
  2066  007E68  6E0F               	movwf	___lwdiv@divisor+1,c
  2067  007E6A  0E64               	movlw	100
  2068  007E6C  6E0E               	movwf	___lwdiv@divisor,c
  2069  007E6E  EC1D  F038         	call	___lwdiv	;wreg free
  2070  007E72  500C               	movf	?___lwdiv,w,c
  2071  007E74  0F30               	addlw	48
  2072  007E76  0100               	movlb	0	; () banked
  2073  007E78  6F66               	movwf	AD_Converter@Centena& (0+255),b
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;Tecnica1.c: 166:         Decena = (((UVI % 10000) % 1000) % 100) / 10 + 48;
  2077  007E7A  0E27               	movlw	39
  2078  007E7C  6E04               	movwf	___lwmod@divisor+1,c
  2079  007E7E  0E10               	movlw	16
  2080  007E80  6E03               	movwf	___lwmod@divisor,c
  2081  007E82  C078  F001         	movff	AD_Converter@UVI,___lwmod@dividend
  2082  007E86  C079  F002         	movff	AD_Converter@UVI+1,___lwmod@dividend+1
  2083  007E8A  ECFC  F037         	call	___lwmod	;wreg free
  2084  007E8E  C001  F076         	movff	?___lwmod,_AD_Converter$2568
  2085  007E92  C002  F077         	movff	?___lwmod+1,_AD_Converter$2568+1
  2086                           
  2087                           ;Tecnica1.c: 166:         Decena = (((UVI % 10000) % 1000) % 100) / 10 + 48;
  2088  007E96  0E03               	movlw	3
  2089  007E98  6E04               	movwf	___lwmod@divisor+1,c
  2090  007E9A  0EE8               	movlw	232
  2091  007E9C  6E03               	movwf	___lwmod@divisor,c
  2092  007E9E  C076  F001         	movff	_AD_Converter$2568,___lwmod@dividend
  2093  007EA2  C077  F002         	movff	_AD_Converter$2568+1,___lwmod@dividend+1
  2094  007EA6  ECFC  F037         	call	___lwmod	;wreg free
  2095  007EAA  C001  F06E         	movff	?___lwmod,_AD_Converter$2569
  2096  007EAE  C002  F06F         	movff	?___lwmod+1,_AD_Converter$2569+1
  2097                           
  2098                           ;Tecnica1.c: 166:         Decena = (((UVI % 10000) % 1000) % 100) / 10 + 48;
  2099  007EB2  0E00               	movlw	0
  2100  007EB4  6E04               	movwf	___lwmod@divisor+1,c
  2101  007EB6  0E64               	movlw	100
  2102  007EB8  6E03               	movwf	___lwmod@divisor,c
  2103  007EBA  C06E  F001         	movff	_AD_Converter$2569,___lwmod@dividend
  2104  007EBE  C06F  F002         	movff	_AD_Converter$2569+1,___lwmod@dividend+1
  2105  007EC2  ECFC  F037         	call	___lwmod	;wreg free
  2106  007EC6  C001  F00C         	movff	?___lwmod,___lwdiv@dividend
  2107  007ECA  C002  F00D         	movff	?___lwmod+1,___lwdiv@dividend+1
  2108  007ECE  0E00               	movlw	0
  2109  007ED0  6E0F               	movwf	___lwdiv@divisor+1,c
  2110  007ED2  0E0A               	movlw	10
  2111  007ED4  6E0E               	movwf	___lwdiv@divisor,c
  2112  007ED6  EC1D  F038         	call	___lwdiv	;wreg free
  2113  007EDA  500C               	movf	?___lwdiv,w,c
  2114  007EDC  0F30               	addlw	48
  2115  007EDE  0100               	movlb	0	; () banked
  2116  007EE0  6F65               	movwf	AD_Converter@Decena& (0+255),b
  2117                           
  2118                           ; BSR set to: 0
  2119                           ;Tecnica1.c: 167:         Unidad = (((UVI % 10000) % 1000) % 100) % 10 + 48;
  2120  007EE2  0E27               	movlw	39
  2121  007EE4  6E04               	movwf	___lwmod@divisor+1,c
  2122  007EE6  0E10               	movlw	16
  2123  007EE8  6E03               	movwf	___lwmod@divisor,c
  2124  007EEA  C078  F001         	movff	AD_Converter@UVI,___lwmod@dividend
  2125  007EEE  C079  F002         	movff	AD_Converter@UVI+1,___lwmod@dividend+1
  2126  007EF2  ECFC  F037         	call	___lwmod	;wreg free
  2127  007EF6  C001  F076         	movff	?___lwmod,_AD_Converter$2568
  2128  007EFA  C002  F077         	movff	?___lwmod+1,_AD_Converter$2568+1
  2129                           
  2130                           ;Tecnica1.c: 167:         Unidad = (((UVI % 10000) % 1000) % 100) % 10 + 48;
  2131  007EFE  0E03               	movlw	3
  2132  007F00  6E04               	movwf	___lwmod@divisor+1,c
  2133  007F02  0EE8               	movlw	232
  2134  007F04  6E03               	movwf	___lwmod@divisor,c
  2135  007F06  C076  F001         	movff	_AD_Converter$2568,___lwmod@dividend
  2136  007F0A  C077  F002         	movff	_AD_Converter$2568+1,___lwmod@dividend+1
  2137  007F0E  ECFC  F037         	call	___lwmod	;wreg free
  2138  007F12  C001  F06E         	movff	?___lwmod,_AD_Converter$2569
  2139  007F16  C002  F06F         	movff	?___lwmod+1,_AD_Converter$2569+1
  2140                           
  2141                           ;Tecnica1.c: 167:         Unidad = (((UVI % 10000) % 1000) % 100) % 10 + 48;
  2142  007F1A  0E00               	movlw	0
  2143  007F1C  6E04               	movwf	___lwmod@divisor+1,c
  2144  007F1E  0E64               	movlw	100
  2145  007F20  6E03               	movwf	___lwmod@divisor,c
  2146  007F22  C06E  F001         	movff	_AD_Converter$2569,___lwmod@dividend
  2147  007F26  C06F  F002         	movff	_AD_Converter$2569+1,___lwmod@dividend+1
  2148  007F2A  ECFC  F037         	call	___lwmod	;wreg free
  2149  007F2E  C001  F060         	movff	?___lwmod,_AD_Converter$2570
  2150  007F32  C002  F061         	movff	?___lwmod+1,_AD_Converter$2570+1
  2151                           
  2152                           ;Tecnica1.c: 167:         Unidad = (((UVI % 10000) % 1000) % 100) % 10 + 48;
  2153  007F36  C060  F001         	movff	_AD_Converter$2570,___lwmod@dividend
  2154  007F3A  C061  F002         	movff	_AD_Converter$2570+1,___lwmod@dividend+1
  2155  007F3E  0E00               	movlw	0
  2156  007F40  6E04               	movwf	___lwmod@divisor+1,c
  2157  007F42  0E0A               	movlw	10
  2158  007F44  6E03               	movwf	___lwmod@divisor,c
  2159  007F46  ECFC  F037         	call	___lwmod	;wreg free
  2160  007F4A  5001               	movf	?___lwmod,w,c
  2161  007F4C  0F30               	addlw	48
  2162  007F4E  0100               	movlb	0	; () banked
  2163  007F50  6F64               	movwf	AD_Converter@Unidad& (0+255),b
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;Tecnica1.c: 170:         set_CURSOR(2);
  2167  007F52  0E02               	movlw	2
  2168  007F54  EC2D  F037         	call	_set_CURSOR
  2169                           
  2170                           ;Tecnica1.c: 171:         char2LCD(UniDiezMil);
  2171  007F58  0100               	movlb	0	; () banked
  2172  007F5A  5168               	movf	AD_Converter@UniDiezMil& (0+255),w,b
  2173  007F5C  EC17  F037         	call	_char2LCD
  2174                           
  2175                           ;Tecnica1.c: 172:         set_CURSOR(3);
  2176  007F60  0E03               	movlw	3
  2177  007F62  EC2D  F037         	call	_set_CURSOR
  2178                           
  2179                           ;Tecnica1.c: 173:         char2LCD(UniMil);
  2180  007F66  0100               	movlb	0	; () banked
  2181  007F68  5167               	movf	AD_Converter@UniMil& (0+255),w,b
  2182  007F6A  EC17  F037         	call	_char2LCD
  2183                           
  2184                           ;Tecnica1.c: 174:         set_CURSOR(5);
  2185  007F6E  0E05               	movlw	5
  2186  007F70  EC2D  F037         	call	_set_CURSOR
  2187                           
  2188                           ;Tecnica1.c: 175:         char2LCD(Centena);
  2189  007F74  0100               	movlb	0	; () banked
  2190  007F76  5166               	movf	AD_Converter@Centena& (0+255),w,b
  2191  007F78  EC17  F037         	call	_char2LCD
  2192                           
  2193                           ;Tecnica1.c: 176:         set_CURSOR(6);
  2194  007F7C  0E06               	movlw	6
  2195  007F7E  EC2D  F037         	call	_set_CURSOR
  2196                           
  2197                           ;Tecnica1.c: 177:         char2LCD(Decena);
  2198  007F82  0100               	movlb	0	; () banked
  2199  007F84  5165               	movf	AD_Converter@Decena& (0+255),w,b
  2200  007F86  EC17  F037         	call	_char2LCD
  2201                           
  2202                           ;Tecnica1.c: 178:         set_CURSOR(7);
  2203  007F8A  0E07               	movlw	7
  2204  007F8C  EC2D  F037         	call	_set_CURSOR
  2205                           
  2206                           ;Tecnica1.c: 179:         char2LCD(Unidad);
  2207  007F90  0100               	movlb	0	; () banked
  2208  007F92  5164               	movf	AD_Converter@Unidad& (0+255),w,b
  2209  007F94  EC17  F037         	call	_char2LCD
  2210                           
  2211                           ;Tecnica1.c: 182:         Vumetro = UVI / 938;
  2212  007F98  C078  F00C         	movff	AD_Converter@UVI,___lwdiv@dividend
  2213  007F9C  C079  F00D         	movff	AD_Converter@UVI+1,___lwdiv@dividend+1
  2214  007FA0  0E03               	movlw	3
  2215  007FA2  6E0F               	movwf	___lwdiv@divisor+1,c
  2216  007FA4  0EAA               	movlw	170
  2217  007FA6  6E0E               	movwf	___lwdiv@divisor,c
  2218  007FA8  EC1D  F038         	call	___lwdiv	;wreg free
  2219  007FAC  500C               	movf	?___lwdiv,w,c
  2220  007FAE  0100               	movlb	0	; () banked
  2221  007FB0  6F69               	movwf	AD_Converter@Vumetro& (0+255),b
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;Tecnica1.c: 183:         VumetroF = (UVI % 938 * 10) / 938;
  2225  007FB2  0E03               	movlw	3
  2226  007FB4  6E04               	movwf	___lwmod@divisor+1,c
  2227  007FB6  0EAA               	movlw	170
  2228  007FB8  6E03               	movwf	___lwmod@divisor,c
  2229  007FBA  C078  F001         	movff	AD_Converter@UVI,___lwmod@dividend
  2230  007FBE  C079  F002         	movff	AD_Converter@UVI+1,___lwmod@dividend+1
  2231  007FC2  ECFC  F037         	call	___lwmod	;wreg free
  2232  007FC6  C001  F006         	movff	?___lwmod,___wmul@multiplier
  2233  007FCA  C002  F007         	movff	?___lwmod+1,___wmul@multiplier+1
  2234  007FCE  0E00               	movlw	0
  2235  007FD0  6E09               	movwf	___wmul@multiplicand+1,c
  2236  007FD2  0E0A               	movlw	10
  2237  007FD4  6E08               	movwf	___wmul@multiplicand,c
  2238  007FD6  EC72  F037         	call	___wmul	;wreg free
  2239  007FDA  C006  F00C         	movff	?___wmul,___lwdiv@dividend
  2240  007FDE  C007  F00D         	movff	?___wmul+1,___lwdiv@dividend+1
  2241  007FE2  0E03               	movlw	3
  2242  007FE4  6E0F               	movwf	___lwdiv@divisor+1,c
  2243  007FE6  0EAA               	movlw	170
  2244  007FE8  6E0E               	movwf	___lwdiv@divisor,c
  2245  007FEA  EC1D  F038         	call	___lwdiv	;wreg free
  2246  007FEE  500C               	movf	?___lwdiv,w,c
  2247  007FF0  0100               	movlb	0	; () banked
  2248  007FF2  6F6A               	movwf	AD_Converter@VumetroF& (0+255),b
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;Tecnica1.c: 185:         Vumetro_Func(Vumetro, VumetroF);
  2252  007FF4  C06A  F005         	movff	AD_Converter@VumetroF,Vumetro_Func@Vumetro_Resto
  2253  007FF8  5169               	movf	AD_Converter@Vumetro& (0+255),w,b
  2254  007FFA  ECB9  F038         	call	_Vumetro_Func
  2255  007FFE  0012               	return		;funcret
  2256  008000                     __end_of_AD_Converter:
  2257                           	opt stack 0
  2258                           tblptru	equ	0xFF8
  2259                           tblptrh	equ	0xFF7
  2260                           tblptrl	equ	0xFF6
  2261                           tablat	equ	0xFF5
  2262                           intcon	equ	0xFF2
  2263                           postinc0	equ	0xFEE
  2264                           wreg	equ	0xFE8
  2265                           postdec1	equ	0xFE5
  2266                           fsr1l	equ	0xFE1
  2267                           status	equ	0xFD8
  2268                           
  2269 ;; *************** function _obtener_ADC10 *****************
  2270 ;; Defined at:
  2271 ;;		line 306 in file "Tecnica1.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;		None
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  GuardoTrisa     1    5[COMRAM] unsigned char 
  2276 ;;  GuardoPorta     1    4[COMRAM] unsigned char 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  2    0[COMRAM] unsigned int 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2286 ;;      Params:         2       0       0       0       0       0       0       0       0
  2287 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2288 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2289 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2290 ;;Total ram usage:        6 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    2
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_AD_Converter
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text8
  2301  006FB8                     __ptext8:
  2302                           	opt stack 0
  2303  006FB8                     _obtener_ADC10:
  2304                           	opt stack 27
  2305                           
  2306                           ;Tecnica1.c: 307:     unsigned char GuardoPorta,GuardoTrisa;;Tecnica1.c: 309:     Guardo
      +                          Porta = PORTA;
  2307                           
  2308                           ;incstack = 0
  2309  006FB8  CF80 F005          	movff	3968,obtener_ADC10@GuardoPorta	;volatile
  2310                           
  2311                           ;Tecnica1.c: 310:     GuardoTrisa = TRISA;
  2312  006FBC  CF92 F006          	movff	3986,obtener_ADC10@GuardoTrisa	;volatile
  2313                           
  2314                           ;Tecnica1.c: 312:     TRISAbits.RA0=1;
  2315  006FC0  8092               	bsf	3986,0,c	;volatile
  2316                           
  2317                           ;Tecnica1.c: 313:     TRISAbits.RA3=1;
  2318  006FC2  8692               	bsf	3986,3,c	;volatile
  2319                           
  2320                           ;Tecnica1.c: 314:     ADCON1 = 0x0B;
  2321  006FC4  0E0B               	movlw	11
  2322  006FC6  6EC1               	movwf	4033,c	;volatile
  2323                           
  2324                           ;Tecnica1.c: 316:     ADCON1bits.VCFG0=1;
  2325  006FC8  88C1               	bsf	4033,4,c	;volatile
  2326                           
  2327                           ;Tecnica1.c: 317:     ADCON2 = 0xAD;
  2328  006FCA  0EAD               	movlw	173
  2329  006FCC  6EC0               	movwf	4032,c	;volatile
  2330                           
  2331                           ;Tecnica1.c: 318:     ADCON0bits.ADON=1;
  2332  006FCE  80C2               	bsf	4034,0,c	;volatile
  2333                           
  2334                           ;Tecnica1.c: 319:     ADCON0bits.GO=1;
  2335  006FD0  82C2               	bsf	4034,1,c	;volatile
  2336  006FD2  B2C2               	btfsc	4034,1,c	;volatile
  2337  006FD4  D7FE               	goto	l496
  2338                           
  2339                           ;Tecnica1.c: 323:     ADCON0bits.ADON=0;
  2340  006FD6  90C2               	bcf	4034,0,c	;volatile
  2341                           
  2342                           ;Tecnica1.c: 324:     ADCON1 = 0x0F;
  2343  006FD8  0E0F               	movlw	15
  2344  006FDA  6EC1               	movwf	4033,c	;volatile
  2345                           
  2346                           ;Tecnica1.c: 325:     LATA = GuardoPorta;
  2347  006FDC  C005  FF89         	movff	obtener_ADC10@GuardoPorta,3977	;volatile
  2348                           
  2349                           ;Tecnica1.c: 326:     TRISA = GuardoTrisa;
  2350  006FE0  C006  FF92         	movff	obtener_ADC10@GuardoTrisa,3986	;volatile
  2351                           
  2352                           ;Tecnica1.c: 328:     return (ADRESH << 8) + ADRESL;
  2353  006FE4  50C4               	movf	4036,w,c	;volatile
  2354  006FE6  6E04               	movwf	(??_obtener_ADC10+1)& (0+255),c
  2355  006FE8  6A03               	clrf	??_obtener_ADC10& (0+255),c
  2356  006FEA  50C3               	movf	4035,w,c	;volatile
  2357  006FEC  2403               	addwf	??_obtener_ADC10,w,c
  2358  006FEE  6E01               	movwf	?_obtener_ADC10,c
  2359  006FF0  0E00               	movlw	0
  2360  006FF2  2004               	addwfc	??_obtener_ADC10+1,w,c
  2361  006FF4  6E02               	movwf	?_obtener_ADC10+1,c
  2362  006FF6  0012               	return	
  2363  006FF8                     __end_of_obtener_ADC10:
  2364                           	opt stack 0
  2365                           tblptru	equ	0xFF8
  2366                           tblptrh	equ	0xFF7
  2367                           tblptrl	equ	0xFF6
  2368                           tablat	equ	0xFF5
  2369                           intcon	equ	0xFF2
  2370                           postinc0	equ	0xFEE
  2371                           wreg	equ	0xFE8
  2372                           postdec1	equ	0xFE5
  2373                           fsr1l	equ	0xFE1
  2374                           status	equ	0xFD8
  2375                           
  2376 ;; *************** function ___xxtofl *****************
  2377 ;; Defined at:
  2378 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;  sign            1    wreg     unsigned char 
  2381 ;;  val             4    0[COMRAM] long 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  sign            1    8[COMRAM] unsigned char 
  2384 ;;  arg             4   10[COMRAM] unsigned long 
  2385 ;;  exp             1    9[COMRAM] unsigned char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  4    0[COMRAM] unsigned char 
  2388 ;; Registers used:
  2389 ;;		wreg, status,2, status,0
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2395 ;;      Params:         4       0       0       0       0       0       0       0       0
  2396 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2397 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2398 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2399 ;;Total ram usage:       14 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:    2
  2402 ;; This function calls:
  2403 ;;		Nothing
  2404 ;; This function is called by:
  2405 ;;		_AD_Converter
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text9
  2410  00746C                     __ptext9:
  2411                           	opt stack 0
  2412  00746C                     ___xxtofl:
  2413                           	opt stack 27
  2414                           
  2415                           ;incstack = 0
  2416                           ;___xxtofl@sign stored from wreg
  2417  00746C  6E09               	movwf	___xxtofl@sign,c
  2418  00746E  5009               	movf	___xxtofl@sign,w,c
  2419  007470  A4D8               	btfss	status,2,c
  2420  007472  AE04               	btfss	___xxtofl@val+3,7,c
  2421  007474  D01A               	goto	l1354
  2422  007476  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2423  00747A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2424  00747E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2425  007482  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2426  007486  1E05               	comf	??___xxtofl,f,c
  2427  007488  1E06               	comf	??___xxtofl+1,f,c
  2428  00748A  1E07               	comf	??___xxtofl+2,f,c
  2429  00748C  1E08               	comf	??___xxtofl+3,f,c
  2430  00748E  2A05               	incf	??___xxtofl,f,c
  2431  007490  0E00               	movlw	0
  2432  007492  2206               	addwfc	??___xxtofl+1,f,c
  2433  007494  2207               	addwfc	??___xxtofl+2,f,c
  2434  007496  2208               	addwfc	??___xxtofl+3,f,c
  2435  007498  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2436  00749C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2437  0074A0  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2438  0074A4  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2439  0074A8  D008               	goto	l1355
  2440  0074AA                     l1354:
  2441  0074AA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2442  0074AE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2443  0074B2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2444  0074B6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2445  0074BA                     l1355:
  2446  0074BA  5001               	movf	___xxtofl@val,w,c
  2447  0074BC  1002               	iorwf	___xxtofl@val+1,w,c
  2448  0074BE  1003               	iorwf	___xxtofl@val+2,w,c
  2449  0074C0  1004               	iorwf	___xxtofl@val+3,w,c
  2450  0074C2  A4D8               	btfss	status,2,c
  2451  0074C4  D009               	goto	l1356
  2452  0074C6  0E00               	movlw	0
  2453  0074C8  6E01               	movwf	?___xxtofl,c
  2454  0074CA  0E00               	movlw	0
  2455  0074CC  6E02               	movwf	?___xxtofl+1,c
  2456  0074CE  0E00               	movlw	0
  2457  0074D0  6E03               	movwf	?___xxtofl+2,c
  2458  0074D2  0E00               	movlw	0
  2459  0074D4  6E04               	movwf	?___xxtofl+3,c
  2460  0074D6  0012               	return	
  2461  0074D8                     l1356:
  2462  0074D8  0E96               	movlw	150
  2463  0074DA  6E0A               	movwf	___xxtofl@exp,c
  2464  0074DC  D006               	goto	l1358
  2465  0074DE  2A0A               	incf	___xxtofl@exp,f,c
  2466  0074E0  90D8               	bcf	status,0,c
  2467  0074E2  320E               	rrcf	___xxtofl@arg+3,f,c
  2468  0074E4  320D               	rrcf	___xxtofl@arg+2,f,c
  2469  0074E6  320C               	rrcf	___xxtofl@arg+1,f,c
  2470  0074E8  320B               	rrcf	___xxtofl@arg,f,c
  2471  0074EA                     l1358:
  2472  0074EA  0E00               	movlw	0
  2473  0074EC  140B               	andwf	___xxtofl@arg,w,c
  2474  0074EE  6E05               	movwf	??___xxtofl& (0+255),c
  2475  0074F0  0E00               	movlw	0
  2476  0074F2  140C               	andwf	___xxtofl@arg+1,w,c
  2477  0074F4  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  2478  0074F6  0E00               	movlw	0
  2479  0074F8  140D               	andwf	___xxtofl@arg+2,w,c
  2480  0074FA  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  2481  0074FC  0EFE               	movlw	254
  2482  0074FE  140E               	andwf	___xxtofl@arg+3,w,c
  2483  007500  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  2484  007502  5005               	movf	??___xxtofl,w,c
  2485  007504  1006               	iorwf	??___xxtofl+1,w,c
  2486  007506  1007               	iorwf	??___xxtofl+2,w,c
  2487  007508  1008               	iorwf	??___xxtofl+3,w,c
  2488  00750A  B4D8               	btfsc	status,2,c
  2489  00750C  D00D               	goto	l1361
  2490  00750E  D7E7               	goto	l1359
  2491  007510  2A0A               	incf	___xxtofl@exp,f,c
  2492  007512  0E01               	movlw	1
  2493  007514  260B               	addwf	___xxtofl@arg,f,c
  2494  007516  0E00               	movlw	0
  2495  007518  220C               	addwfc	___xxtofl@arg+1,f,c
  2496  00751A  220D               	addwfc	___xxtofl@arg+2,f,c
  2497  00751C  220E               	addwfc	___xxtofl@arg+3,f,c
  2498  00751E  90D8               	bcf	status,0,c
  2499  007520  320E               	rrcf	___xxtofl@arg+3,f,c
  2500  007522  320D               	rrcf	___xxtofl@arg+2,f,c
  2501  007524  320C               	rrcf	___xxtofl@arg+1,f,c
  2502  007526  320B               	rrcf	___xxtofl@arg,f,c
  2503  007528                     l1361:
  2504  007528  0E00               	movlw	0
  2505  00752A  140B               	andwf	___xxtofl@arg,w,c
  2506  00752C  6E05               	movwf	??___xxtofl& (0+255),c
  2507  00752E  0E00               	movlw	0
  2508  007530  140C               	andwf	___xxtofl@arg+1,w,c
  2509  007532  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  2510  007534  0E00               	movlw	0
  2511  007536  140D               	andwf	___xxtofl@arg+2,w,c
  2512  007538  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  2513  00753A  0EFF               	movlw	255
  2514  00753C  140E               	andwf	___xxtofl@arg+3,w,c
  2515  00753E  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  2516  007540  5005               	movf	??___xxtofl,w,c
  2517  007542  1006               	iorwf	??___xxtofl+1,w,c
  2518  007544  1007               	iorwf	??___xxtofl+2,w,c
  2519  007546  1008               	iorwf	??___xxtofl+3,w,c
  2520  007548  B4D8               	btfsc	status,2,c
  2521  00754A  D007               	goto	l1364
  2522  00754C  D7E1               	goto	l1362
  2523  00754E  060A               	decf	___xxtofl@exp,f,c
  2524  007550  90D8               	bcf	status,0,c
  2525  007552  360B               	rlcf	___xxtofl@arg,f,c
  2526  007554  360C               	rlcf	___xxtofl@arg+1,f,c
  2527  007556  360D               	rlcf	___xxtofl@arg+2,f,c
  2528  007558  360E               	rlcf	___xxtofl@arg+3,f,c
  2529  00755A                     l1364:
  2530  00755A  BE0D               	btfsc	___xxtofl@arg+2,7,c
  2531  00755C  D003               	goto	u2760
  2532  00755E  0E02               	movlw	2
  2533  007560  600A               	cpfslt	___xxtofl@exp,c
  2534  007562  D7F5               	goto	l1365
  2535  007564                     u2760:
  2536  007564  A00A               	btfss	___xxtofl@exp,0,c
  2537  007566  9E0D               	bcf	___xxtofl@arg+2,7,c
  2538  007568  90D8               	bcf	status,0,c
  2539  00756A  320A               	rrcf	___xxtofl@exp,f,c
  2540  00756C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2541  007570  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  2542  007572  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  2543  007574  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  2544  007576  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2545  00757A  6A07               	clrf	??___xxtofl+2,c
  2546  00757C  6A06               	clrf	??___xxtofl+1,c
  2547  00757E  6A05               	clrf	??___xxtofl,c
  2548  007580  5005               	movf	??___xxtofl,w,c
  2549  007582  120B               	iorwf	___xxtofl@arg,f,c
  2550  007584  5006               	movf	??___xxtofl+1,w,c
  2551  007586  120C               	iorwf	___xxtofl@arg+1,f,c
  2552  007588  5007               	movf	??___xxtofl+2,w,c
  2553  00758A  120D               	iorwf	___xxtofl@arg+2,f,c
  2554  00758C  5008               	movf	??___xxtofl+3,w,c
  2555  00758E  120E               	iorwf	___xxtofl@arg+3,f,c
  2556  007590  5009               	movf	___xxtofl@sign,w,c
  2557  007592  A4D8               	btfss	status,2,c
  2558  007594  AE04               	btfss	___xxtofl@val+3,7,c
  2559  007596  D001               	goto	l1370
  2560  007598  8E0E               	bsf	___xxtofl@arg+3,7,c
  2561  00759A                     l1370:
  2562  00759A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2563  00759E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2564  0075A2  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2565  0075A6  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2566  0075AA  0012               	return	
  2567  0075AC                     __end_of___xxtofl:
  2568                           	opt stack 0
  2569                           tblptru	equ	0xFF8
  2570                           tblptrh	equ	0xFF7
  2571                           tblptrl	equ	0xFF6
  2572                           tablat	equ	0xFF5
  2573                           intcon	equ	0xFF2
  2574                           postinc0	equ	0xFEE
  2575                           wreg	equ	0xFE8
  2576                           postdec1	equ	0xFE5
  2577                           fsr1l	equ	0xFE1
  2578                           status	equ	0xFD8
  2579                           
  2580 ;; *************** function ___wmul *****************
  2581 ;; Defined at:
  2582 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;  multiplier      2    5[COMRAM] unsigned int 
  2585 ;;  multiplicand    2    7[COMRAM] unsigned int 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  product         2    9[COMRAM] unsigned int 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  2    5[COMRAM] unsigned int 
  2590 ;; Registers used:
  2591 ;;		wreg, status,2, status,0, prodl, prodh
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2597 ;;      Params:         4       0       0       0       0       0       0       0       0
  2598 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2600 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2601 ;;Total ram usage:        6 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    2
  2604 ;; This function calls:
  2605 ;;		Nothing
  2606 ;; This function is called by:
  2607 ;;		_AD_Converter
  2608 ;;		_CalculoDeFrecuencia
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           	psect	text10
  2613  006EE4                     __ptext10:
  2614                           	opt stack 0
  2615  006EE4                     ___wmul:
  2616                           	opt stack 27
  2617                           
  2618                           ;incstack = 0
  2619  006EE4  5006               	movf	___wmul@multiplier,w,c
  2620  006EE6  0208               	mulwf	___wmul@multiplicand,c
  2621  006EE8  CFF3 F00A          	movff	prodl,___wmul@product
  2622  006EEC  CFF4 F00B          	movff	prodh,___wmul@product+1
  2623  006EF0  5006               	movf	___wmul@multiplier,w,c
  2624  006EF2  0209               	mulwf	___wmul@multiplicand+1,c
  2625  006EF4  50F3               	movf	prodl,w,c
  2626  006EF6  260B               	addwf	___wmul@product+1,f,c
  2627  006EF8  5007               	movf	___wmul@multiplier+1,w,c
  2628  006EFA  0208               	mulwf	___wmul@multiplicand,c
  2629  006EFC  50F3               	movf	prodl,w,c
  2630  006EFE  260B               	addwf	___wmul@product+1,f,c
  2631  006F00  C00A  F006         	movff	___wmul@product,?___wmul
  2632  006F04  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  2633  006F08  0012               	return	
  2634  006F0A                     __end_of___wmul:
  2635                           	opt stack 0
  2636                           tblptru	equ	0xFF8
  2637                           tblptrh	equ	0xFF7
  2638                           tblptrl	equ	0xFF6
  2639                           tablat	equ	0xFF5
  2640                           prodh	equ	0xFF4
  2641                           prodl	equ	0xFF3
  2642                           intcon	equ	0xFF2
  2643                           postinc0	equ	0xFEE
  2644                           wreg	equ	0xFE8
  2645                           postdec1	equ	0xFE5
  2646                           fsr1l	equ	0xFE1
  2647                           status	equ	0xFD8
  2648                           
  2649 ;; *************** function ___lwmod *****************
  2650 ;; Defined at:
  2651 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  dividend        2    0[COMRAM] unsigned int 
  2654 ;;  divisor         2    2[COMRAM] unsigned int 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  counter         1    4[COMRAM] unsigned char 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  2    0[COMRAM] unsigned int 
  2659 ;; Registers used:
  2660 ;;		wreg, status,2, status,0
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2666 ;;      Params:         4       0       0       0       0       0       0       0       0
  2667 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2669 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2670 ;;Total ram usage:        5 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:    2
  2673 ;; This function calls:
  2674 ;;		Nothing
  2675 ;; This function is called by:
  2676 ;;		_AD_Converter
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text11
  2681  006FF8                     __ptext11:
  2682                           	opt stack 0
  2683  006FF8                     ___lwmod:
  2684                           	opt stack 27
  2685                           
  2686                           ;incstack = 0
  2687  006FF8  5003               	movf	___lwmod@divisor,w,c
  2688  006FFA  1004               	iorwf	___lwmod@divisor+1,w,c
  2689  006FFC  B4D8               	btfsc	status,2,c
  2690  006FFE  D018               	goto	l1206
  2691  007000  0E01               	movlw	1
  2692  007002  6E05               	movwf	___lwmod@counter,c
  2693  007004  D004               	goto	l1201
  2694  007006  90D8               	bcf	status,0,c
  2695  007008  3603               	rlcf	___lwmod@divisor,f,c
  2696  00700A  3604               	rlcf	___lwmod@divisor+1,f,c
  2697  00700C  2A05               	incf	___lwmod@counter,f,c
  2698  00700E                     l1201:
  2699  00700E  AE04               	btfss	___lwmod@divisor+1,7,c
  2700  007010  D7FA               	goto	l1202
  2701  007012                     u2680:
  2702  007012  5003               	movf	___lwmod@divisor,w,c
  2703  007014  5C01               	subwf	___lwmod@dividend,w,c
  2704  007016  5004               	movf	___lwmod@divisor+1,w,c
  2705  007018  5802               	subwfb	___lwmod@dividend+1,w,c
  2706  00701A  A0D8               	btfss	status,0,c
  2707  00701C  D004               	goto	l1205
  2708  00701E  5003               	movf	___lwmod@divisor,w,c
  2709  007020  5E01               	subwf	___lwmod@dividend,f,c
  2710  007022  5004               	movf	___lwmod@divisor+1,w,c
  2711  007024  5A02               	subwfb	___lwmod@dividend+1,f,c
  2712  007026                     l1205:
  2713  007026  90D8               	bcf	status,0,c
  2714  007028  3204               	rrcf	___lwmod@divisor+1,f,c
  2715  00702A  3203               	rrcf	___lwmod@divisor,f,c
  2716  00702C  2E05               	decfsz	___lwmod@counter,f,c
  2717  00702E  D7F1               	goto	u2680
  2718  007030                     l1206:
  2719  007030  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2720  007034  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2721  007038  0012               	return		;funcret
  2722  00703A                     __end_of___lwmod:
  2723                           	opt stack 0
  2724                           tblptru	equ	0xFF8
  2725                           tblptrh	equ	0xFF7
  2726                           tblptrl	equ	0xFF6
  2727                           tablat	equ	0xFF5
  2728                           prodh	equ	0xFF4
  2729                           prodl	equ	0xFF3
  2730                           intcon	equ	0xFF2
  2731                           postinc0	equ	0xFEE
  2732                           wreg	equ	0xFE8
  2733                           postdec1	equ	0xFE5
  2734                           fsr1l	equ	0xFE1
  2735                           status	equ	0xFD8
  2736                           
  2737 ;; *************** function ___lwdiv *****************
  2738 ;; Defined at:
  2739 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  dividend        2   11[COMRAM] unsigned int 
  2742 ;;  divisor         2   13[COMRAM] unsigned int 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  quotient        2   15[COMRAM] unsigned int 
  2745 ;;  counter         1   17[COMRAM] unsigned char 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  2   11[COMRAM] unsigned int 
  2748 ;; Registers used:
  2749 ;;		wreg, status,2, status,0
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2755 ;;      Params:         4       0       0       0       0       0       0       0       0
  2756 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2758 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2759 ;;Total ram usage:        7 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    2
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_AD_Converter
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text12
  2770  00703A                     __ptext12:
  2771                           	opt stack 0
  2772  00703A                     ___lwdiv:
  2773                           	opt stack 27
  2774                           
  2775                           ;incstack = 0
  2776  00703A  0E00               	movlw	0
  2777  00703C  6E11               	movwf	___lwdiv@quotient+1,c
  2778  00703E  0E00               	movlw	0
  2779  007040  6E10               	movwf	___lwdiv@quotient,c
  2780  007042  500E               	movf	___lwdiv@divisor,w,c
  2781  007044  100F               	iorwf	___lwdiv@divisor+1,w,c
  2782  007046  B4D8               	btfsc	status,2,c
  2783  007048  D01C               	goto	l1196
  2784  00704A  0E01               	movlw	1
  2785  00704C  6E12               	movwf	___lwdiv@counter,c
  2786  00704E  D004               	goto	l1191
  2787  007050  90D8               	bcf	status,0,c
  2788  007052  360E               	rlcf	___lwdiv@divisor,f,c
  2789  007054  360F               	rlcf	___lwdiv@divisor+1,f,c
  2790  007056  2A12               	incf	___lwdiv@counter,f,c
  2791  007058                     l1191:
  2792  007058  AE0F               	btfss	___lwdiv@divisor+1,7,c
  2793  00705A  D7FA               	goto	l1192
  2794  00705C                     u2650:
  2795  00705C  90D8               	bcf	status,0,c
  2796  00705E  3610               	rlcf	___lwdiv@quotient,f,c
  2797  007060  3611               	rlcf	___lwdiv@quotient+1,f,c
  2798  007062  500E               	movf	___lwdiv@divisor,w,c
  2799  007064  5C0C               	subwf	___lwdiv@dividend,w,c
  2800  007066  500F               	movf	___lwdiv@divisor+1,w,c
  2801  007068  580D               	subwfb	___lwdiv@dividend+1,w,c
  2802  00706A  A0D8               	btfss	status,0,c
  2803  00706C  D005               	goto	l1195
  2804  00706E  500E               	movf	___lwdiv@divisor,w,c
  2805  007070  5E0C               	subwf	___lwdiv@dividend,f,c
  2806  007072  500F               	movf	___lwdiv@divisor+1,w,c
  2807  007074  5A0D               	subwfb	___lwdiv@dividend+1,f,c
  2808  007076  8010               	bsf	___lwdiv@quotient,0,c
  2809  007078                     l1195:
  2810  007078  90D8               	bcf	status,0,c
  2811  00707A  320F               	rrcf	___lwdiv@divisor+1,f,c
  2812  00707C  320E               	rrcf	___lwdiv@divisor,f,c
  2813  00707E  2E12               	decfsz	___lwdiv@counter,f,c
  2814  007080  D7ED               	goto	u2650
  2815  007082                     l1196:
  2816  007082  C010  F00C         	movff	___lwdiv@quotient,?___lwdiv
  2817  007086  C011  F00D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2818  00708A  0012               	return		;funcret
  2819  00708C                     __end_of___lwdiv:
  2820                           	opt stack 0
  2821                           tblptru	equ	0xFF8
  2822                           tblptrh	equ	0xFF7
  2823                           tblptrl	equ	0xFF6
  2824                           tablat	equ	0xFF5
  2825                           prodh	equ	0xFF4
  2826                           prodl	equ	0xFF3
  2827                           intcon	equ	0xFF2
  2828                           postinc0	equ	0xFEE
  2829                           wreg	equ	0xFE8
  2830                           postdec1	equ	0xFE5
  2831                           fsr1l	equ	0xFE1
  2832                           status	equ	0xFD8
  2833                           
  2834 ;; *************** function ___lldiv *****************
  2835 ;; Defined at:
  2836 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  dividend        4    0[COMRAM] unsigned long 
  2839 ;;  divisor         4    4[COMRAM] unsigned long 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  quotient        4    8[COMRAM] unsigned long 
  2842 ;;  counter         1   12[COMRAM] unsigned char 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  4    0[COMRAM] unsigned long 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2852 ;;      Params:         8       0       0       0       0       0       0       0       0
  2853 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2854 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2855 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2856 ;;Total ram usage:       13 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; Hardware stack levels required when called:    2
  2859 ;; This function calls:
  2860 ;;		Nothing
  2861 ;; This function is called by:
  2862 ;;		_AD_Converter
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           	psect	text13
  2867  0070F0                     __ptext13:
  2868                           	opt stack 0
  2869  0070F0                     ___lldiv:
  2870                           	opt stack 27
  2871                           
  2872                           ;incstack = 0
  2873  0070F0  0E00               	movlw	0
  2874  0070F2  6E09               	movwf	___lldiv@quotient,c
  2875  0070F4  0E00               	movlw	0
  2876  0070F6  6E0A               	movwf	___lldiv@quotient+1,c
  2877  0070F8  0E00               	movlw	0
  2878  0070FA  6E0B               	movwf	___lldiv@quotient+2,c
  2879  0070FC  0E00               	movlw	0
  2880  0070FE  6E0C               	movwf	___lldiv@quotient+3,c
  2881  007100  5005               	movf	___lldiv@divisor,w,c
  2882  007102  1006               	iorwf	___lldiv@divisor+1,w,c
  2883  007104  1007               	iorwf	___lldiv@divisor+2,w,c
  2884  007106  1008               	iorwf	___lldiv@divisor+3,w,c
  2885  007108  B4D8               	btfsc	status,2,c
  2886  00710A  D02A               	goto	l732
  2887  00710C  0E01               	movlw	1
  2888  00710E  6E0D               	movwf	___lldiv@counter,c
  2889  007110  D006               	goto	l727
  2890  007112  90D8               	bcf	status,0,c
  2891  007114  3605               	rlcf	___lldiv@divisor,f,c
  2892  007116  3606               	rlcf	___lldiv@divisor+1,f,c
  2893  007118  3607               	rlcf	___lldiv@divisor+2,f,c
  2894  00711A  3608               	rlcf	___lldiv@divisor+3,f,c
  2895  00711C  2A0D               	incf	___lldiv@counter,f,c
  2896  00711E                     l727:
  2897  00711E  AE08               	btfss	___lldiv@divisor+3,7,c
  2898  007120  D7F8               	goto	l728
  2899  007122                     u2130:
  2900  007122  90D8               	bcf	status,0,c
  2901  007124  3609               	rlcf	___lldiv@quotient,f,c
  2902  007126  360A               	rlcf	___lldiv@quotient+1,f,c
  2903  007128  360B               	rlcf	___lldiv@quotient+2,f,c
  2904  00712A  360C               	rlcf	___lldiv@quotient+3,f,c
  2905  00712C  5005               	movf	___lldiv@divisor,w,c
  2906  00712E  5C01               	subwf	___lldiv@dividend,w,c
  2907  007130  5006               	movf	___lldiv@divisor+1,w,c
  2908  007132  5802               	subwfb	___lldiv@dividend+1,w,c
  2909  007134  5007               	movf	___lldiv@divisor+2,w,c
  2910  007136  5803               	subwfb	___lldiv@dividend+2,w,c
  2911  007138  5008               	movf	___lldiv@divisor+3,w,c
  2912  00713A  5804               	subwfb	___lldiv@dividend+3,w,c
  2913  00713C  A0D8               	btfss	status,0,c
  2914  00713E  D009               	goto	l731
  2915  007140  5005               	movf	___lldiv@divisor,w,c
  2916  007142  5E01               	subwf	___lldiv@dividend,f,c
  2917  007144  5006               	movf	___lldiv@divisor+1,w,c
  2918  007146  5A02               	subwfb	___lldiv@dividend+1,f,c
  2919  007148  5007               	movf	___lldiv@divisor+2,w,c
  2920  00714A  5A03               	subwfb	___lldiv@dividend+2,f,c
  2921  00714C  5008               	movf	___lldiv@divisor+3,w,c
  2922  00714E  5A04               	subwfb	___lldiv@dividend+3,f,c
  2923  007150  8009               	bsf	___lldiv@quotient,0,c
  2924  007152                     l731:
  2925  007152  90D8               	bcf	status,0,c
  2926  007154  3208               	rrcf	___lldiv@divisor+3,f,c
  2927  007156  3207               	rrcf	___lldiv@divisor+2,f,c
  2928  007158  3206               	rrcf	___lldiv@divisor+1,f,c
  2929  00715A  3205               	rrcf	___lldiv@divisor,f,c
  2930  00715C  2E0D               	decfsz	___lldiv@counter,f,c
  2931  00715E  D7E1               	goto	u2130
  2932  007160                     l732:
  2933  007160  C009  F001         	movff	___lldiv@quotient,?___lldiv
  2934  007164  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  2935  007168  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  2936  00716C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  2937  007170  0012               	return		;funcret
  2938  007172                     __end_of___lldiv:
  2939                           	opt stack 0
  2940                           tblptru	equ	0xFF8
  2941                           tblptrh	equ	0xFF7
  2942                           tblptrl	equ	0xFF6
  2943                           tablat	equ	0xFF5
  2944                           prodh	equ	0xFF4
  2945                           prodl	equ	0xFF3
  2946                           intcon	equ	0xFF2
  2947                           postinc0	equ	0xFEE
  2948                           wreg	equ	0xFE8
  2949                           postdec1	equ	0xFE5
  2950                           fsr1l	equ	0xFE1
  2951                           status	equ	0xFD8
  2952                           
  2953 ;; *************** function ___fltol *****************
  2954 ;; Defined at:
  2955 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;  f1              4   64[COMRAM] unsigned long 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  exp1            1   73[COMRAM] unsigned char 
  2960 ;;  sign1           1   72[COMRAM] unsigned char 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  4   64[COMRAM] long 
  2963 ;; Registers used:
  2964 ;;		wreg, status,2, status,0
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2970 ;;      Params:         4       0       0       0       0       0       0       0       0
  2971 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2972 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2973 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2974 ;;Total ram usage:       10 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    2
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_AD_Converter
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text14
  2985  007284                     __ptext14:
  2986                           	opt stack 0
  2987  007284                     ___fltol:
  2988                           	opt stack 27
  2989                           
  2990                           ;incstack = 0
  2991  007284  3443               	rlcf	___fltol@f1+2,w,c
  2992  007286  3444               	rlcf	___fltol@f1+3,w,c
  2993  007288  6E4A               	movwf	___fltol@exp1,c
  2994  00728A  504A               	movf	___fltol@exp1,w,c
  2995  00728C  A4D8               	btfss	status,2,c
  2996  00728E  D009               	goto	l995
  2997  007290  0E00               	movlw	0
  2998  007292  6E41               	movwf	?___fltol,c
  2999  007294  0E00               	movlw	0
  3000  007296  6E42               	movwf	?___fltol+1,c
  3001  007298  0E00               	movlw	0
  3002  00729A  6E43               	movwf	?___fltol+2,c
  3003  00729C  0E00               	movlw	0
  3004  00729E  6E44               	movwf	?___fltol+3,c
  3005  0072A0  0012               	return	
  3006  0072A2                     l995:
  3007  0072A2  C041  F045         	movff	___fltol@f1,??___fltol
  3008  0072A6  C042  F046         	movff	___fltol@f1+1,??___fltol+1
  3009  0072AA  C043  F047         	movff	___fltol@f1+2,??___fltol+2
  3010  0072AE  C044  F048         	movff	___fltol@f1+3,??___fltol+3
  3011  0072B2  0E20               	movlw	32
  3012  0072B4  D005               	goto	u2580
  3013  0072B6                     u2585:
  3014  0072B6  90D8               	bcf	status,0,c
  3015  0072B8  3248               	rrcf	??___fltol+3,f,c
  3016  0072BA  3247               	rrcf	??___fltol+2,f,c
  3017  0072BC  3246               	rrcf	??___fltol+1,f,c
  3018  0072BE  3245               	rrcf	??___fltol,f,c
  3019  0072C0                     u2580:
  3020  0072C0  2EE8               	decfsz	wreg,f,c
  3021  0072C2  D7F9               	goto	u2585
  3022  0072C4  5045               	movf	??___fltol,w,c
  3023  0072C6  6E49               	movwf	___fltol@sign1,c
  3024  0072C8  8E43               	bsf	___fltol@f1+2,7,c
  3025  0072CA  0EFF               	movlw	255
  3026  0072CC  1641               	andwf	___fltol@f1,f,c
  3027  0072CE  0EFF               	movlw	255
  3028  0072D0  1642               	andwf	___fltol@f1+1,f,c
  3029  0072D2  0EFF               	movlw	255
  3030  0072D4  1643               	andwf	___fltol@f1+2,f,c
  3031  0072D6  0E00               	movlw	0
  3032  0072D8  1644               	andwf	___fltol@f1+3,f,c
  3033  0072DA  0E96               	movlw	150
  3034  0072DC  5E4A               	subwf	___fltol@exp1,f,c
  3035  0072DE  AE4A               	btfss	___fltol@exp1,7,c
  3036  0072E0  D016               	goto	l997
  3037  0072E2  504A               	movf	___fltol@exp1,w,c
  3038  0072E4  0A80               	xorlw	128
  3039  0072E6  0F97               	addlw	151
  3040  0072E8  B0D8               	btfsc	status,0,c
  3041  0072EA  D009               	goto	l998
  3042  0072EC  0E00               	movlw	0
  3043  0072EE  6E41               	movwf	?___fltol,c
  3044  0072F0  0E00               	movlw	0
  3045  0072F2  6E42               	movwf	?___fltol+1,c
  3046  0072F4  0E00               	movlw	0
  3047  0072F6  6E43               	movwf	?___fltol+2,c
  3048  0072F8  0E00               	movlw	0
  3049  0072FA  6E44               	movwf	?___fltol+3,c
  3050  0072FC  0012               	return	
  3051  0072FE                     l998:
  3052  0072FE  90D8               	bcf	status,0,c
  3053  007300  3244               	rrcf	___fltol@f1+3,f,c
  3054  007302  3243               	rrcf	___fltol@f1+2,f,c
  3055  007304  3242               	rrcf	___fltol@f1+1,f,c
  3056  007306  3241               	rrcf	___fltol@f1,f,c
  3057  007308  3E4A               	incfsz	___fltol@exp1,f,c
  3058  00730A  D7F9               	goto	l998
  3059  00730C  D015               	goto	u2620
  3060  00730E                     l997:
  3061  00730E  0E1F               	movlw	31
  3062  007310  644A               	cpfsgt	___fltol@exp1,c
  3063  007312  D00F               	goto	l1003
  3064  007314  0E00               	movlw	0
  3065  007316  6E41               	movwf	?___fltol,c
  3066  007318  0E00               	movlw	0
  3067  00731A  6E42               	movwf	?___fltol+1,c
  3068  00731C  0E00               	movlw	0
  3069  00731E  6E43               	movwf	?___fltol+2,c
  3070  007320  0E00               	movlw	0
  3071  007322  6E44               	movwf	?___fltol+3,c
  3072  007324  0012               	return	
  3073  007326  90D8               	bcf	status,0,c
  3074  007328  3641               	rlcf	___fltol@f1,f,c
  3075  00732A  3642               	rlcf	___fltol@f1+1,f,c
  3076  00732C  3643               	rlcf	___fltol@f1+2,f,c
  3077  00732E  3644               	rlcf	___fltol@f1+3,f,c
  3078  007330  064A               	decf	___fltol@exp1,f,c
  3079  007332                     l1003:
  3080  007332  504A               	movf	___fltol@exp1,w,c
  3081  007334  A4D8               	btfss	status,2,c
  3082  007336  D7F7               	goto	l1004
  3083  007338                     u2620:
  3084  007338  5049               	movf	___fltol@sign1,w,c
  3085  00733A  B4D8               	btfsc	status,2,c
  3086  00733C  D008               	goto	l1006
  3087  00733E  1E44               	comf	___fltol@f1+3,f,c
  3088  007340  1E43               	comf	___fltol@f1+2,f,c
  3089  007342  1E42               	comf	___fltol@f1+1,f,c
  3090  007344  6C41               	negf	___fltol@f1,c
  3091  007346  0E00               	movlw	0
  3092  007348  2242               	addwfc	___fltol@f1+1,f,c
  3093  00734A  2243               	addwfc	___fltol@f1+2,f,c
  3094  00734C  2244               	addwfc	___fltol@f1+3,f,c
  3095  00734E                     l1006:
  3096  00734E  C041  F041         	movff	___fltol@f1,?___fltol
  3097  007352  C042  F042         	movff	___fltol@f1+1,?___fltol+1
  3098  007356  C043  F043         	movff	___fltol@f1+2,?___fltol+2
  3099  00735A  C044  F044         	movff	___fltol@f1+3,?___fltol+3
  3100  00735E  0012               	return	
  3101  007360                     __end_of___fltol:
  3102                           	opt stack 0
  3103                           tblptru	equ	0xFF8
  3104                           tblptrh	equ	0xFF7
  3105                           tblptrl	equ	0xFF6
  3106                           tablat	equ	0xFF5
  3107                           prodh	equ	0xFF4
  3108                           prodl	equ	0xFF3
  3109                           intcon	equ	0xFF2
  3110                           postinc0	equ	0xFEE
  3111                           wreg	equ	0xFE8
  3112                           postdec1	equ	0xFE5
  3113                           fsr1l	equ	0xFE1
  3114                           status	equ	0xFD8
  3115                           
  3116 ;; *************** function ___flmul *****************
  3117 ;; Defined at:
  3118 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;  b               4   14[COMRAM] long 
  3121 ;;  a               4   18[COMRAM] long 
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;  prod            4   33[COMRAM] struct .
  3124 ;;  grs             4   27[COMRAM] unsigned long 
  3125 ;;  temp            2   37[COMRAM] struct .
  3126 ;;  bexp            1   32[COMRAM] unsigned char 
  3127 ;;  aexp            1   31[COMRAM] unsigned char 
  3128 ;;  sign            1   26[COMRAM] unsigned char 
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  4   14[COMRAM] unsigned char 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2, status,0, prodl, prodh
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3138 ;;      Params:         8       0       0       0       0       0       0       0       0
  3139 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3140 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3141 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3142 ;;Total ram usage:       25 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    2
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_AD_Converter
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           	psect	text15
  3153  007864                     __ptext15:
  3154                           	opt stack 0
  3155  007864                     ___flmul:
  3156                           	opt stack 27
  3157                           
  3158                           ;incstack = 0
  3159  007864  5012               	movf	___flmul@b+3,w,c
  3160  007866  0B80               	andlw	128
  3161  007868  6E1B               	movwf	___flmul@sign,c
  3162  00786A  5012               	movf	___flmul@b+3,w,c
  3163  00786C  2412               	addwf	___flmul@b+3,w,c
  3164  00786E  6E21               	movwf	___flmul@bexp,c
  3165  007870  BE11               	btfsc	___flmul@b+2,7,c
  3166  007872  8021               	bsf	___flmul@bexp,0,c
  3167  007874  5021               	movf	___flmul@bexp,w,c
  3168  007876  B4D8               	btfsc	status,2,c
  3169  007878  D00D               	goto	l1307
  3170  00787A  2821               	incf	___flmul@bexp,w,c
  3171  00787C  A4D8               	btfss	status,2,c
  3172  00787E  D008               	goto	l1308
  3173  007880  0E00               	movlw	0
  3174  007882  6E0F               	movwf	___flmul@b,c
  3175  007884  0E00               	movlw	0
  3176  007886  6E10               	movwf	___flmul@b+1,c
  3177  007888  0E00               	movlw	0
  3178  00788A  6E11               	movwf	___flmul@b+2,c
  3179  00788C  0E00               	movlw	0
  3180  00788E  6E12               	movwf	___flmul@b+3,c
  3181  007890                     l1308:
  3182  007890  8E11               	bsf	___flmul@b+2,7,c
  3183  007892  D008               	goto	l1309
  3184  007894                     l1307:
  3185  007894  0E00               	movlw	0
  3186  007896  6E0F               	movwf	___flmul@b,c
  3187  007898  0E00               	movlw	0
  3188  00789A  6E10               	movwf	___flmul@b+1,c
  3189  00789C  0E00               	movlw	0
  3190  00789E  6E11               	movwf	___flmul@b+2,c
  3191  0078A0  0E00               	movlw	0
  3192  0078A2  6E12               	movwf	___flmul@b+3,c
  3193  0078A4                     l1309:
  3194  0078A4  5016               	movf	___flmul@a+3,w,c
  3195  0078A6  0B80               	andlw	128
  3196  0078A8  1A1B               	xorwf	___flmul@sign,f,c
  3197  0078AA  5016               	movf	___flmul@a+3,w,c
  3198  0078AC  2416               	addwf	___flmul@a+3,w,c
  3199  0078AE  6E20               	movwf	___flmul@aexp,c
  3200  0078B0  BE15               	btfsc	___flmul@a+2,7,c
  3201  0078B2  8020               	bsf	___flmul@aexp,0,c
  3202  0078B4  5020               	movf	___flmul@aexp,w,c
  3203  0078B6  B4D8               	btfsc	status,2,c
  3204  0078B8  D00D               	goto	l1311
  3205  0078BA  2820               	incf	___flmul@aexp,w,c
  3206  0078BC  A4D8               	btfss	status,2,c
  3207  0078BE  D008               	goto	l1312
  3208  0078C0  0E00               	movlw	0
  3209  0078C2  6E13               	movwf	___flmul@a,c
  3210  0078C4  0E00               	movlw	0
  3211  0078C6  6E14               	movwf	___flmul@a+1,c
  3212  0078C8  0E00               	movlw	0
  3213  0078CA  6E15               	movwf	___flmul@a+2,c
  3214  0078CC  0E00               	movlw	0
  3215  0078CE  6E16               	movwf	___flmul@a+3,c
  3216  0078D0                     l1312:
  3217  0078D0  8E15               	bsf	___flmul@a+2,7,c
  3218  0078D2  D008               	goto	l1313
  3219  0078D4                     l1311:
  3220  0078D4  0E00               	movlw	0
  3221  0078D6  6E13               	movwf	___flmul@a,c
  3222  0078D8  0E00               	movlw	0
  3223  0078DA  6E14               	movwf	___flmul@a+1,c
  3224  0078DC  0E00               	movlw	0
  3225  0078DE  6E15               	movwf	___flmul@a+2,c
  3226  0078E0  0E00               	movlw	0
  3227  0078E2  6E16               	movwf	___flmul@a+3,c
  3228  0078E4                     l1313:
  3229  0078E4  5020               	movf	___flmul@aexp,w,c
  3230  0078E6  B4D8               	btfsc	status,2,c
  3231  0078E8  D003               	goto	u2450
  3232  0078EA  5021               	movf	___flmul@bexp,w,c
  3233  0078EC  A4D8               	btfss	status,2,c
  3234  0078EE  D009               	goto	l1314
  3235  0078F0                     u2450:
  3236  0078F0  0E00               	movlw	0
  3237  0078F2  6E0F               	movwf	?___flmul,c
  3238  0078F4  0E00               	movlw	0
  3239  0078F6  6E10               	movwf	?___flmul+1,c
  3240  0078F8  0E00               	movlw	0
  3241  0078FA  6E11               	movwf	?___flmul+2,c
  3242  0078FC  0E00               	movlw	0
  3243  0078FE  6E12               	movwf	?___flmul+3,c
  3244  007900  0012               	return	
  3245  007902                     l1314:
  3246  007902  5015               	movf	___flmul@a+2,w,c
  3247  007904  020F               	mulwf	___flmul@b,c
  3248  007906  CFF3 F026          	movff	prodl,___flmul@temp
  3249  00790A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3250  00790E  5026               	movf	___flmul@temp,w,c
  3251  007910  6E1C               	movwf	___flmul@grs,c
  3252  007912  6A1D               	clrf	___flmul@grs+1,c
  3253  007914  6A1E               	clrf	___flmul@grs+2,c
  3254  007916  6A1F               	clrf	___flmul@grs+3,c
  3255  007918  5027               	movf	___flmul@temp+1,w,c
  3256  00791A  6E22               	movwf	___flmul@prod,c
  3257  00791C  6A23               	clrf	___flmul@prod+1,c
  3258  00791E  6A24               	clrf	___flmul@prod+2,c
  3259  007920  6A25               	clrf	___flmul@prod+3,c
  3260  007922  5014               	movf	___flmul@a+1,w,c
  3261  007924  0210               	mulwf	___flmul@b+1,c
  3262  007926  CFF3 F026          	movff	prodl,___flmul@temp
  3263  00792A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3264  00792E  5026               	movf	___flmul@temp,w,c
  3265  007930  261C               	addwf	___flmul@grs,f,c
  3266  007932  0E00               	movlw	0
  3267  007934  221D               	addwfc	___flmul@grs+1,f,c
  3268  007936  221E               	addwfc	___flmul@grs+2,f,c
  3269  007938  221F               	addwfc	___flmul@grs+3,f,c
  3270  00793A  5027               	movf	___flmul@temp+1,w,c
  3271  00793C  2622               	addwf	___flmul@prod,f,c
  3272  00793E  0E00               	movlw	0
  3273  007940  2223               	addwfc	___flmul@prod+1,f,c
  3274  007942  2224               	addwfc	___flmul@prod+2,f,c
  3275  007944  2225               	addwfc	___flmul@prod+3,f,c
  3276  007946  5013               	movf	___flmul@a,w,c
  3277  007948  0211               	mulwf	___flmul@b+2,c
  3278  00794A  CFF3 F026          	movff	prodl,___flmul@temp
  3279  00794E  CFF4 F027          	movff	prodh,___flmul@temp+1
  3280  007952  5026               	movf	___flmul@temp,w,c
  3281  007954  261C               	addwf	___flmul@grs,f,c
  3282  007956  0E00               	movlw	0
  3283  007958  221D               	addwfc	___flmul@grs+1,f,c
  3284  00795A  221E               	addwfc	___flmul@grs+2,f,c
  3285  00795C  221F               	addwfc	___flmul@grs+3,f,c
  3286  00795E  5027               	movf	___flmul@temp+1,w,c
  3287  007960  2622               	addwf	___flmul@prod,f,c
  3288  007962  0E00               	movlw	0
  3289  007964  2223               	addwfc	___flmul@prod+1,f,c
  3290  007966  2224               	addwfc	___flmul@prod+2,f,c
  3291  007968  2225               	addwfc	___flmul@prod+3,f,c
  3292  00796A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3293  00796E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3294  007972  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3295  007976  6A1C               	clrf	___flmul@grs,c
  3296  007978  5013               	movf	___flmul@a,w,c
  3297  00797A  0210               	mulwf	___flmul@b+1,c
  3298  00797C  CFF3 F026          	movff	prodl,___flmul@temp
  3299  007980  CFF4 F027          	movff	prodh,___flmul@temp+1
  3300  007984  5026               	movf	___flmul@temp,w,c
  3301  007986  261C               	addwf	___flmul@grs,f,c
  3302  007988  5027               	movf	___flmul@temp+1,w,c
  3303  00798A  221D               	addwfc	___flmul@grs+1,f,c
  3304  00798C  0E00               	movlw	0
  3305  00798E  221E               	addwfc	___flmul@grs+2,f,c
  3306  007990  0E00               	movlw	0
  3307  007992  221F               	addwfc	___flmul@grs+3,f,c
  3308  007994  5014               	movf	___flmul@a+1,w,c
  3309  007996  020F               	mulwf	___flmul@b,c
  3310  007998  CFF3 F026          	movff	prodl,___flmul@temp
  3311  00799C  CFF4 F027          	movff	prodh,___flmul@temp+1
  3312  0079A0  5026               	movf	___flmul@temp,w,c
  3313  0079A2  261C               	addwf	___flmul@grs,f,c
  3314  0079A4  5027               	movf	___flmul@temp+1,w,c
  3315  0079A6  221D               	addwfc	___flmul@grs+1,f,c
  3316  0079A8  0E00               	movlw	0
  3317  0079AA  221E               	addwfc	___flmul@grs+2,f,c
  3318  0079AC  0E00               	movlw	0
  3319  0079AE  221F               	addwfc	___flmul@grs+3,f,c
  3320  0079B0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3321  0079B4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3322  0079B8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3323  0079BC  6A1C               	clrf	___flmul@grs,c
  3324  0079BE  5013               	movf	___flmul@a,w,c
  3325  0079C0  020F               	mulwf	___flmul@b,c
  3326  0079C2  CFF3 F026          	movff	prodl,___flmul@temp
  3327  0079C6  CFF4 F027          	movff	prodh,___flmul@temp+1
  3328  0079CA  5026               	movf	___flmul@temp,w,c
  3329  0079CC  261C               	addwf	___flmul@grs,f,c
  3330  0079CE  5027               	movf	___flmul@temp+1,w,c
  3331  0079D0  221D               	addwfc	___flmul@grs+1,f,c
  3332  0079D2  0E00               	movlw	0
  3333  0079D4  221E               	addwfc	___flmul@grs+2,f,c
  3334  0079D6  0E00               	movlw	0
  3335  0079D8  221F               	addwfc	___flmul@grs+3,f,c
  3336  0079DA  5015               	movf	___flmul@a+2,w,c
  3337  0079DC  0210               	mulwf	___flmul@b+1,c
  3338  0079DE  CFF3 F026          	movff	prodl,___flmul@temp
  3339  0079E2  CFF4 F027          	movff	prodh,___flmul@temp+1
  3340  0079E6  5026               	movf	___flmul@temp,w,c
  3341  0079E8  2622               	addwf	___flmul@prod,f,c
  3342  0079EA  5027               	movf	___flmul@temp+1,w,c
  3343  0079EC  2223               	addwfc	___flmul@prod+1,f,c
  3344  0079EE  0E00               	movlw	0
  3345  0079F0  2224               	addwfc	___flmul@prod+2,f,c
  3346  0079F2  0E00               	movlw	0
  3347  0079F4  2225               	addwfc	___flmul@prod+3,f,c
  3348  0079F6  5014               	movf	___flmul@a+1,w,c
  3349  0079F8  0211               	mulwf	___flmul@b+2,c
  3350  0079FA  CFF3 F026          	movff	prodl,___flmul@temp
  3351  0079FE  CFF4 F027          	movff	prodh,___flmul@temp+1
  3352  007A02  5026               	movf	___flmul@temp,w,c
  3353  007A04  2622               	addwf	___flmul@prod,f,c
  3354  007A06  5027               	movf	___flmul@temp+1,w,c
  3355  007A08  2223               	addwfc	___flmul@prod+1,f,c
  3356  007A0A  0E00               	movlw	0
  3357  007A0C  2224               	addwfc	___flmul@prod+2,f,c
  3358  007A0E  0E00               	movlw	0
  3359  007A10  2225               	addwfc	___flmul@prod+3,f,c
  3360  007A12  5015               	movf	___flmul@a+2,w,c
  3361  007A14  0211               	mulwf	___flmul@b+2,c
  3362  007A16  CFF3 F026          	movff	prodl,___flmul@temp
  3363  007A1A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3364  007A1E  5026               	movf	___flmul@temp,w,c
  3365  007A20  6E17               	movwf	??___flmul& (0+255),c
  3366  007A22  5027               	movf	___flmul@temp+1,w,c
  3367  007A24  6E18               	movwf	(??___flmul+1)& (0+255),c
  3368  007A26  6A19               	clrf	(??___flmul+2)& (0+255),c
  3369  007A28  6A1A               	clrf	(??___flmul+3)& (0+255),c
  3370  007A2A  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3371  007A2E  C018  F019         	movff	??___flmul+1,??___flmul+2
  3372  007A32  C017  F018         	movff	??___flmul,??___flmul+1
  3373  007A36  6A17               	clrf	??___flmul,c
  3374  007A38  5017               	movf	??___flmul,w,c
  3375  007A3A  2622               	addwf	___flmul@prod,f,c
  3376  007A3C  5018               	movf	??___flmul+1,w,c
  3377  007A3E  2223               	addwfc	___flmul@prod+1,f,c
  3378  007A40  5019               	movf	??___flmul+2,w,c
  3379  007A42  2224               	addwfc	___flmul@prod+2,f,c
  3380  007A44  501A               	movf	??___flmul+3,w,c
  3381  007A46  2225               	addwfc	___flmul@prod+3,f,c
  3382  007A48  C01C  F017         	movff	___flmul@grs,??___flmul
  3383  007A4C  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3384  007A50  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3385  007A54  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3386  007A58  0E19               	movlw	25
  3387  007A5A  D005               	goto	u2460
  3388  007A5C                     u2465:
  3389  007A5C  90D8               	bcf	status,0,c
  3390  007A5E  321A               	rrcf	??___flmul+3,f,c
  3391  007A60  3219               	rrcf	??___flmul+2,f,c
  3392  007A62  3218               	rrcf	??___flmul+1,f,c
  3393  007A64  3217               	rrcf	??___flmul,f,c
  3394  007A66                     u2460:
  3395  007A66  2EE8               	decfsz	wreg,f,c
  3396  007A68  D7F9               	goto	u2465
  3397  007A6A  5017               	movf	??___flmul,w,c
  3398  007A6C  2622               	addwf	___flmul@prod,f,c
  3399  007A6E  5018               	movf	??___flmul+1,w,c
  3400  007A70  2223               	addwfc	___flmul@prod+1,f,c
  3401  007A72  5019               	movf	??___flmul+2,w,c
  3402  007A74  2224               	addwfc	___flmul@prod+2,f,c
  3403  007A76  501A               	movf	??___flmul+3,w,c
  3404  007A78  2225               	addwfc	___flmul@prod+3,f,c
  3405  007A7A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3406  007A7E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3407  007A82  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3408  007A86  6A1C               	clrf	___flmul@grs,c
  3409  007A88  5020               	movf	___flmul@aexp,w,c
  3410  007A8A  C021  F017         	movff	___flmul@bexp,??___flmul
  3411  007A8E  6A18               	clrf	(??___flmul+1)& (0+255),c
  3412  007A90  2617               	addwf	??___flmul,f,c
  3413  007A92  0E00               	movlw	0
  3414  007A94  2218               	addwfc	??___flmul+1,f,c
  3415  007A96  0E82               	movlw	130
  3416  007A98  2417               	addwf	??___flmul,w,c
  3417  007A9A  6E26               	movwf	___flmul@temp,c
  3418  007A9C  0EFF               	movlw	255
  3419  007A9E  2018               	addwfc	??___flmul+1,w,c
  3420  007AA0  6E27               	movwf	___flmul@temp+1,c
  3421  007AA2  D00F               	goto	l1318
  3422  007AA4  90D8               	bcf	status,0,c
  3423  007AA6  3622               	rlcf	___flmul@prod,f,c
  3424  007AA8  3623               	rlcf	___flmul@prod+1,f,c
  3425  007AAA  3624               	rlcf	___flmul@prod+2,f,c
  3426  007AAC  3625               	rlcf	___flmul@prod+3,f,c
  3427  007AAE  BE1F               	btfsc	___flmul@grs+3,7,c
  3428  007AB0  8022               	bsf	___flmul@prod,0,c
  3429  007AB2  90D8               	bcf	status,0,c
  3430  007AB4  361C               	rlcf	___flmul@grs,f,c
  3431  007AB6  361D               	rlcf	___flmul@grs+1,f,c
  3432  007AB8  361E               	rlcf	___flmul@grs+2,f,c
  3433  007ABA  361F               	rlcf	___flmul@grs+3,f,c
  3434  007ABC  0626               	decf	___flmul@temp,f,c
  3435  007ABE  A0D8               	btfss	status,0,c
  3436  007AC0  0627               	decf	___flmul@temp+1,f,c
  3437  007AC2                     l1318:
  3438  007AC2  AE24               	btfss	___flmul@prod+2,7,c
  3439  007AC4  D7EF               	goto	l1319
  3440  007AC6  0E00               	movlw	0
  3441  007AC8  6E20               	movwf	___flmul@aexp,c
  3442  007ACA  AE1F               	btfss	___flmul@grs+3,7,c
  3443  007ACC  D016               	goto	l1325
  3444  007ACE  0EFF               	movlw	255
  3445  007AD0  141C               	andwf	___flmul@grs,w,c
  3446  007AD2  6E17               	movwf	??___flmul& (0+255),c
  3447  007AD4  0EFF               	movlw	255
  3448  007AD6  141D               	andwf	___flmul@grs+1,w,c
  3449  007AD8  6E18               	movwf	(??___flmul+1)& (0+255),c
  3450  007ADA  0EFF               	movlw	255
  3451  007ADC  141E               	andwf	___flmul@grs+2,w,c
  3452  007ADE  6E19               	movwf	(??___flmul+2)& (0+255),c
  3453  007AE0  0E7F               	movlw	127
  3454  007AE2  141F               	andwf	___flmul@grs+3,w,c
  3455  007AE4  6E1A               	movwf	(??___flmul+3)& (0+255),c
  3456  007AE6  5017               	movf	??___flmul,w,c
  3457  007AE8  1018               	iorwf	??___flmul+1,w,c
  3458  007AEA  1019               	iorwf	??___flmul+2,w,c
  3459  007AEC  101A               	iorwf	??___flmul+3,w,c
  3460  007AEE  A4D8               	btfss	status,2,c
  3461  007AF0  D002               	goto	u2510
  3462  007AF2  A022               	btfss	___flmul@prod,0,c
  3463  007AF4  D002               	goto	l1325
  3464  007AF6                     u2510:
  3465  007AF6  0E01               	movlw	1
  3466  007AF8  6E20               	movwf	___flmul@aexp,c
  3467  007AFA                     l1325:
  3468  007AFA  5020               	movf	___flmul@aexp,w,c
  3469  007AFC  B4D8               	btfsc	status,2,c
  3470  007AFE  D01F               	goto	l1327
  3471  007B00  0E01               	movlw	1
  3472  007B02  2622               	addwf	___flmul@prod,f,c
  3473  007B04  0E00               	movlw	0
  3474  007B06  2223               	addwfc	___flmul@prod+1,f,c
  3475  007B08  2224               	addwfc	___flmul@prod+2,f,c
  3476  007B0A  2225               	addwfc	___flmul@prod+3,f,c
  3477  007B0C  A025               	btfss	___flmul@prod+3,0,c
  3478  007B0E  D017               	goto	l1327
  3479  007B10  C022  F017         	movff	___flmul@prod,??___flmul
  3480  007B14  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  3481  007B18  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  3482  007B1C  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  3483  007B20  341A               	rlcf	??___flmul+3,w,c
  3484  007B22  321A               	rrcf	??___flmul+3,f,c
  3485  007B24  3219               	rrcf	??___flmul+2,f,c
  3486  007B26  3218               	rrcf	??___flmul+1,f,c
  3487  007B28  3217               	rrcf	??___flmul,f,c
  3488  007B2A  C017  F022         	movff	??___flmul,___flmul@prod
  3489  007B2E  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  3490  007B32  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  3491  007B36  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  3492  007B3A  4A26               	infsnz	___flmul@temp,f,c
  3493  007B3C  2A27               	incf	___flmul@temp+1,f,c
  3494  007B3E                     l1327:
  3495  007B3E  BE27               	btfsc	___flmul@temp+1,7,c
  3496  007B40  D00D               	goto	l1328
  3497  007B42  5027               	movf	___flmul@temp+1,w,c
  3498  007B44  E103               	bnz	u2540
  3499  007B46  2826               	incf	___flmul@temp,w,c
  3500  007B48  A0D8               	btfss	status,0,c
  3501  007B4A  D008               	goto	l1328
  3502  007B4C                     u2540:
  3503  007B4C  0E00               	movlw	0
  3504  007B4E  6E22               	movwf	___flmul@prod,c
  3505  007B50  0E00               	movlw	0
  3506  007B52  6E23               	movwf	___flmul@prod+1,c
  3507  007B54  0E80               	movlw	128
  3508  007B56  6E24               	movwf	___flmul@prod+2,c
  3509  007B58  0E7F               	movlw	127
  3510  007B5A  D020               	goto	L1
  3511  007B5C                     l1328:
  3512  007B5C  BE27               	btfsc	___flmul@temp+1,7,c
  3513  007B5E  D005               	goto	u2550
  3514  007B60  5027               	movf	___flmul@temp+1,w,c
  3515  007B62  E10E               	bnz	l1330
  3516  007B64  0426               	decf	___flmul@temp,w,c
  3517  007B66  B0D8               	btfsc	status,0,c
  3518  007B68  D00B               	goto	l1330
  3519  007B6A                     u2550:
  3520  007B6A  0E00               	movlw	0
  3521  007B6C  6E22               	movwf	___flmul@prod,c
  3522  007B6E  0E00               	movlw	0
  3523  007B70  6E23               	movwf	___flmul@prod+1,c
  3524  007B72  0E00               	movlw	0
  3525  007B74  6E24               	movwf	___flmul@prod+2,c
  3526  007B76  0E00               	movlw	0
  3527  007B78  6E25               	movwf	___flmul@prod+3,c
  3528  007B7A  0E00               	movlw	0
  3529  007B7C  6E1B               	movwf	___flmul@sign,c
  3530  007B7E  D00F               	goto	l1331
  3531  007B80                     l1330:
  3532  007B80  C026  F021         	movff	___flmul@temp,___flmul@bexp
  3533  007B84  0EFF               	movlw	255
  3534  007B86  1622               	andwf	___flmul@prod,f,c
  3535  007B88  0EFF               	movlw	255
  3536  007B8A  1623               	andwf	___flmul@prod+1,f,c
  3537  007B8C  0E7F               	movlw	127
  3538  007B8E  1624               	andwf	___flmul@prod+2,f,c
  3539  007B90  0E00               	movlw	0
  3540  007B92  1625               	andwf	___flmul@prod+3,f,c
  3541  007B94  B021               	btfsc	___flmul@bexp,0,c
  3542  007B96  8E24               	bsf	___flmul@prod+2,7,c
  3543  007B98  90D8               	bcf	status,0,c
  3544  007B9A  3021               	rrcf	___flmul@bexp,w,c
  3545  007B9C                     L1:
  3546  007B9C  6E25               	movwf	___flmul@prod+3,c
  3547  007B9E                     l1331:
  3548  007B9E  501B               	movf	___flmul@sign,w,c
  3549  007BA0  1225               	iorwf	___flmul@prod+3,f,c
  3550  007BA2  C022  F00F         	movff	___flmul@prod,?___flmul
  3551  007BA6  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  3552  007BAA  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  3553  007BAE  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  3554  007BB2  0012               	return	
  3555  007BB4                     __end_of___flmul:
  3556                           	opt stack 0
  3557                           tblptru	equ	0xFF8
  3558                           tblptrh	equ	0xFF7
  3559                           tblptrl	equ	0xFF6
  3560                           tablat	equ	0xFF5
  3561                           prodh	equ	0xFF4
  3562                           prodl	equ	0xFF3
  3563                           intcon	equ	0xFF2
  3564                           postinc0	equ	0xFEE
  3565                           wreg	equ	0xFE8
  3566                           postdec1	equ	0xFE5
  3567                           fsr1l	equ	0xFE1
  3568                           status	equ	0xFD8
  3569                           
  3570 ;; *************** function ___fldiv *****************
  3571 ;; Defined at:
  3572 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  b               4   39[COMRAM] unsigned char 
  3575 ;;  a               4   43[COMRAM] unsigned char 
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;  grs             4   58[COMRAM] unsigned long 
  3578 ;;  rem             4   51[COMRAM] unsigned long 
  3579 ;;  new_exp         2   56[COMRAM] short 
  3580 ;;  aexp            1   63[COMRAM] unsigned char 
  3581 ;;  bexp            1   62[COMRAM] unsigned char 
  3582 ;;  sign            1   55[COMRAM] unsigned char 
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  4   39[COMRAM] unsigned char 
  3585 ;; Registers used:
  3586 ;;		wreg, status,2, status,0
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3592 ;;      Params:         8       0       0       0       0       0       0       0       0
  3593 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3594 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3595 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3596 ;;Total ram usage:       25 bytes
  3597 ;; Hardware stack levels used:    1
  3598 ;; Hardware stack levels required when called:    2
  3599 ;; This function calls:
  3600 ;;		Nothing
  3601 ;; This function is called by:
  3602 ;;		_AD_Converter
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	text16
  3607  0075AC                     __ptext16:
  3608                           	opt stack 0
  3609  0075AC                     ___fldiv:
  3610                           	opt stack 27
  3611                           
  3612                           ;incstack = 0
  3613  0075AC  502B               	movf	___fldiv@b+3,w,c
  3614  0075AE  0B80               	andlw	128
  3615  0075B0  6E38               	movwf	___fldiv@sign,c
  3616  0075B2  502B               	movf	___fldiv@b+3,w,c
  3617  0075B4  242B               	addwf	___fldiv@b+3,w,c
  3618  0075B6  6E3F               	movwf	___fldiv@bexp,c
  3619  0075B8  BE2A               	btfsc	___fldiv@b+2,7,c
  3620  0075BA  803F               	bsf	___fldiv@bexp,0,c
  3621  0075BC  503F               	movf	___fldiv@bexp,w,c
  3622  0075BE  B4D8               	btfsc	status,2,c
  3623  0075C0  D00D               	goto	l1273
  3624  0075C2  283F               	incf	___fldiv@bexp,w,c
  3625  0075C4  A4D8               	btfss	status,2,c
  3626  0075C6  D008               	goto	l1274
  3627  0075C8  0E00               	movlw	0
  3628  0075CA  6E28               	movwf	___fldiv@b,c
  3629  0075CC  0E00               	movlw	0
  3630  0075CE  6E29               	movwf	___fldiv@b+1,c
  3631  0075D0  0E00               	movlw	0
  3632  0075D2  6E2A               	movwf	___fldiv@b+2,c
  3633  0075D4  0E00               	movlw	0
  3634  0075D6  6E2B               	movwf	___fldiv@b+3,c
  3635  0075D8                     l1274:
  3636  0075D8  8E2A               	bsf	___fldiv@b+2,7,c
  3637  0075DA  D006               	goto	L2
  3638  0075DC                     l1273:
  3639  0075DC  0E00               	movlw	0
  3640  0075DE  6E28               	movwf	___fldiv@b,c
  3641  0075E0  0E00               	movlw	0
  3642  0075E2  6E29               	movwf	___fldiv@b+1,c
  3643  0075E4  0E00               	movlw	0
  3644  0075E6  6E2A               	movwf	___fldiv@b+2,c
  3645  0075E8                     L2:
  3646  0075E8  0E00               	movlw	0
  3647  0075EA  6E2B               	movwf	___fldiv@b+3,c
  3648  0075EC  502F               	movf	___fldiv@a+3,w,c
  3649  0075EE  0B80               	andlw	128
  3650  0075F0  1A38               	xorwf	___fldiv@sign,f,c
  3651  0075F2  502F               	movf	___fldiv@a+3,w,c
  3652  0075F4  242F               	addwf	___fldiv@a+3,w,c
  3653  0075F6  6E40               	movwf	___fldiv@aexp,c
  3654  0075F8  BE2E               	btfsc	___fldiv@a+2,7,c
  3655  0075FA  8040               	bsf	___fldiv@aexp,0,c
  3656  0075FC  5040               	movf	___fldiv@aexp,w,c
  3657  0075FE  B4D8               	btfsc	status,2,c
  3658  007600  D00D               	goto	l1277
  3659  007602  2840               	incf	___fldiv@aexp,w,c
  3660  007604  A4D8               	btfss	status,2,c
  3661  007606  D008               	goto	l1278
  3662  007608  0E00               	movlw	0
  3663  00760A  6E2C               	movwf	___fldiv@a,c
  3664  00760C  0E00               	movlw	0
  3665  00760E  6E2D               	movwf	___fldiv@a+1,c
  3666  007610  0E00               	movlw	0
  3667  007612  6E2E               	movwf	___fldiv@a+2,c
  3668  007614  0E00               	movlw	0
  3669  007616  6E2F               	movwf	___fldiv@a+3,c
  3670  007618                     l1278:
  3671  007618  8E2E               	bsf	___fldiv@a+2,7,c
  3672  00761A  D006               	goto	L3
  3673  00761C                     l1277:
  3674  00761C  0E00               	movlw	0
  3675  00761E  6E2C               	movwf	___fldiv@a,c
  3676  007620  0E00               	movlw	0
  3677  007622  6E2D               	movwf	___fldiv@a+1,c
  3678  007624  0E00               	movlw	0
  3679  007626  6E2E               	movwf	___fldiv@a+2,c
  3680  007628                     L3:
  3681  007628  0E00               	movlw	0
  3682  00762A  6E2F               	movwf	___fldiv@a+3,c
  3683  00762C  502C               	movf	___fldiv@a,w,c
  3684  00762E  102D               	iorwf	___fldiv@a+1,w,c
  3685  007630  102E               	iorwf	___fldiv@a+2,w,c
  3686  007632  102F               	iorwf	___fldiv@a+3,w,c
  3687  007634  A4D8               	btfss	status,2,c
  3688  007636  D017               	goto	l1280
  3689  007638  0E00               	movlw	0
  3690  00763A  6E28               	movwf	___fldiv@b,c
  3691  00763C  0E00               	movlw	0
  3692  00763E  6E29               	movwf	___fldiv@b+1,c
  3693  007640  0E00               	movlw	0
  3694  007642  6E2A               	movwf	___fldiv@b+2,c
  3695  007644  0E00               	movlw	0
  3696  007646  6E2B               	movwf	___fldiv@b+3,c
  3697  007648  0E80               	movlw	128
  3698  00764A  122A               	iorwf	___fldiv@b+2,f,c
  3699  00764C  0E7F               	movlw	127
  3700  00764E  122B               	iorwf	___fldiv@b+3,f,c
  3701  007650  5038               	movf	___fldiv@sign,w,c
  3702  007652  122B               	iorwf	___fldiv@b+3,f,c
  3703  007654  C028  F028         	movff	___fldiv@b,?___fldiv
  3704  007658  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  3705  00765C  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  3706  007660  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  3707  007664  0012               	return	
  3708  007666                     l1280:
  3709  007666  503F               	movf	___fldiv@bexp,w,c
  3710  007668  A4D8               	btfss	status,2,c
  3711  00766A  D011               	goto	l1282
  3712  00766C  0E00               	movlw	0
  3713  00766E  6E28               	movwf	___fldiv@b,c
  3714  007670  0E00               	movlw	0
  3715  007672  6E29               	movwf	___fldiv@b+1,c
  3716  007674  0E00               	movlw	0
  3717  007676  6E2A               	movwf	___fldiv@b+2,c
  3718  007678  0E00               	movlw	0
  3719  00767A  6E2B               	movwf	___fldiv@b+3,c
  3720  00767C  C028  F028         	movff	___fldiv@b,?___fldiv
  3721  007680  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  3722  007684  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  3723  007688  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  3724  00768C  0012               	return	
  3725  00768E                     l1282:
  3726  00768E  5040               	movf	___fldiv@aexp,w,c
  3727  007690  6E30               	movwf	??___fldiv& (0+255),c
  3728  007692  6A31               	clrf	(??___fldiv+1)& (0+255),c
  3729  007694  1E30               	comf	??___fldiv,f,c
  3730  007696  1E31               	comf	??___fldiv+1,f,c
  3731  007698  4A30               	infsnz	??___fldiv,f,c
  3732  00769A  2A31               	incf	??___fldiv+1,f,c
  3733  00769C  503F               	movf	___fldiv@bexp,w,c
  3734  00769E  6E32               	movwf	(??___fldiv+2)& (0+255),c
  3735  0076A0  6A33               	clrf	(??___fldiv+3)& (0+255),c
  3736  0076A2  5030               	movf	??___fldiv,w,c
  3737  0076A4  2632               	addwf	??___fldiv+2,f,c
  3738  0076A6  5031               	movf	??___fldiv+1,w,c
  3739  0076A8  2233               	addwfc	??___fldiv+3,f,c
  3740  0076AA  0E7F               	movlw	127
  3741  0076AC  2432               	addwf	??___fldiv+2,w,c
  3742  0076AE  6E39               	movwf	___fldiv@new_exp,c
  3743  0076B0  0E00               	movlw	0
  3744  0076B2  2033               	addwfc	??___fldiv+3,w,c
  3745  0076B4  6E3A               	movwf	___fldiv@new_exp+1,c
  3746  0076B6  C028  F034         	movff	___fldiv@b,___fldiv@rem
  3747  0076BA  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  3748  0076BE  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  3749  0076C2  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  3750  0076C6  0E00               	movlw	0
  3751  0076C8  6E28               	movwf	___fldiv@b,c
  3752  0076CA  0E00               	movlw	0
  3753  0076CC  6E29               	movwf	___fldiv@b+1,c
  3754  0076CE  0E00               	movlw	0
  3755  0076D0  6E2A               	movwf	___fldiv@b+2,c
  3756  0076D2  0E00               	movlw	0
  3757  0076D4  6E2B               	movwf	___fldiv@b+3,c
  3758  0076D6  0E00               	movlw	0
  3759  0076D8  6E3B               	movwf	___fldiv@grs,c
  3760  0076DA  0E00               	movlw	0
  3761  0076DC  6E3C               	movwf	___fldiv@grs+1,c
  3762  0076DE  0E00               	movlw	0
  3763  0076E0  6E3D               	movwf	___fldiv@grs+2,c
  3764  0076E2  0E00               	movlw	0
  3765  0076E4  6E3E               	movwf	___fldiv@grs+3,c
  3766  0076E6  0E00               	movlw	0
  3767  0076E8  6E40               	movwf	___fldiv@aexp,c
  3768  0076EA  D028               	goto	l1283
  3769  0076EC  5040               	movf	___fldiv@aexp,w,c
  3770  0076EE  B4D8               	btfsc	status,2,c
  3771  0076F0  D011               	goto	l1285
  3772  0076F2  90D8               	bcf	status,0,c
  3773  0076F4  3634               	rlcf	___fldiv@rem,f,c
  3774  0076F6  3635               	rlcf	___fldiv@rem+1,f,c
  3775  0076F8  3636               	rlcf	___fldiv@rem+2,f,c
  3776  0076FA  3637               	rlcf	___fldiv@rem+3,f,c
  3777  0076FC  90D8               	bcf	status,0,c
  3778  0076FE  3628               	rlcf	___fldiv@b,f,c
  3779  007700  3629               	rlcf	___fldiv@b+1,f,c
  3780  007702  362A               	rlcf	___fldiv@b+2,f,c
  3781  007704  362B               	rlcf	___fldiv@b+3,f,c
  3782  007706  BE3E               	btfsc	___fldiv@grs+3,7,c
  3783  007708  8028               	bsf	___fldiv@b,0,c
  3784  00770A  90D8               	bcf	status,0,c
  3785  00770C  363B               	rlcf	___fldiv@grs,f,c
  3786  00770E  363C               	rlcf	___fldiv@grs+1,f,c
  3787  007710  363D               	rlcf	___fldiv@grs+2,f,c
  3788  007712  363E               	rlcf	___fldiv@grs+3,f,c
  3789  007714                     l1285:
  3790  007714  502C               	movf	___fldiv@a,w,c
  3791  007716  5C34               	subwf	___fldiv@rem,w,c
  3792  007718  502D               	movf	___fldiv@a+1,w,c
  3793  00771A  5835               	subwfb	___fldiv@rem+1,w,c
  3794  00771C  502E               	movf	___fldiv@a+2,w,c
  3795  00771E  5836               	subwfb	___fldiv@rem+2,w,c
  3796  007720  502F               	movf	___fldiv@a+3,w,c
  3797  007722  5837               	subwfb	___fldiv@rem+3,w,c
  3798  007724  A0D8               	btfss	status,0,c
  3799  007726  D009               	goto	l1287
  3800  007728  8C3E               	bsf	___fldiv@grs+3,6,c
  3801  00772A  502C               	movf	___fldiv@a,w,c
  3802  00772C  5E34               	subwf	___fldiv@rem,f,c
  3803  00772E  502D               	movf	___fldiv@a+1,w,c
  3804  007730  5A35               	subwfb	___fldiv@rem+1,f,c
  3805  007732  502E               	movf	___fldiv@a+2,w,c
  3806  007734  5A36               	subwfb	___fldiv@rem+2,f,c
  3807  007736  502F               	movf	___fldiv@a+3,w,c
  3808  007738  5A37               	subwfb	___fldiv@rem+3,f,c
  3809  00773A                     l1287:
  3810  00773A  2A40               	incf	___fldiv@aexp,f,c
  3811  00773C                     l1283:
  3812  00773C  0E19               	movlw	25
  3813  00773E  6440               	cpfsgt	___fldiv@aexp,c
  3814  007740  D7D5               	goto	l1284
  3815  007742  5034               	movf	___fldiv@rem,w,c
  3816  007744  1035               	iorwf	___fldiv@rem+1,w,c
  3817  007746  1036               	iorwf	___fldiv@rem+2,w,c
  3818  007748  1037               	iorwf	___fldiv@rem+3,w,c
  3819  00774A  B4D8               	btfsc	status,2,c
  3820  00774C  D011               	goto	l1290
  3821  00774E  803B               	bsf	___fldiv@grs,0,c
  3822  007750  D00F               	goto	l1290
  3823  007752  90D8               	bcf	status,0,c
  3824  007754  3628               	rlcf	___fldiv@b,f,c
  3825  007756  3629               	rlcf	___fldiv@b+1,f,c
  3826  007758  362A               	rlcf	___fldiv@b+2,f,c
  3827  00775A  362B               	rlcf	___fldiv@b+3,f,c
  3828  00775C  BE3E               	btfsc	___fldiv@grs+3,7,c
  3829  00775E  8028               	bsf	___fldiv@b,0,c
  3830  007760  90D8               	bcf	status,0,c
  3831  007762  363B               	rlcf	___fldiv@grs,f,c
  3832  007764  363C               	rlcf	___fldiv@grs+1,f,c
  3833  007766  363D               	rlcf	___fldiv@grs+2,f,c
  3834  007768  363E               	rlcf	___fldiv@grs+3,f,c
  3835  00776A  0639               	decf	___fldiv@new_exp,f,c
  3836  00776C  A0D8               	btfss	status,0,c
  3837  00776E  063A               	decf	___fldiv@new_exp+1,f,c
  3838  007770                     l1290:
  3839  007770  AE2A               	btfss	___fldiv@b+2,7,c
  3840  007772  D7EF               	goto	l1291
  3841  007774  0E00               	movlw	0
  3842  007776  6E40               	movwf	___fldiv@aexp,c
  3843  007778  AE3E               	btfss	___fldiv@grs+3,7,c
  3844  00777A  D016               	goto	l1297
  3845  00777C  0EFF               	movlw	255
  3846  00777E  143B               	andwf	___fldiv@grs,w,c
  3847  007780  6E30               	movwf	??___fldiv& (0+255),c
  3848  007782  0EFF               	movlw	255
  3849  007784  143C               	andwf	___fldiv@grs+1,w,c
  3850  007786  6E31               	movwf	(??___fldiv+1)& (0+255),c
  3851  007788  0EFF               	movlw	255
  3852  00778A  143D               	andwf	___fldiv@grs+2,w,c
  3853  00778C  6E32               	movwf	(??___fldiv+2)& (0+255),c
  3854  00778E  0E7F               	movlw	127
  3855  007790  143E               	andwf	___fldiv@grs+3,w,c
  3856  007792  6E33               	movwf	(??___fldiv+3)& (0+255),c
  3857  007794  5030               	movf	??___fldiv,w,c
  3858  007796  1031               	iorwf	??___fldiv+1,w,c
  3859  007798  1032               	iorwf	??___fldiv+2,w,c
  3860  00779A  1033               	iorwf	??___fldiv+3,w,c
  3861  00779C  A4D8               	btfss	status,2,c
  3862  00779E  D002               	goto	u2320
  3863  0077A0  A028               	btfss	___fldiv@b,0,c
  3864  0077A2  D002               	goto	l1297
  3865  0077A4                     u2320:
  3866  0077A4  0E01               	movlw	1
  3867  0077A6  6E40               	movwf	___fldiv@aexp,c
  3868  0077A8                     l1297:
  3869  0077A8  5040               	movf	___fldiv@aexp,w,c
  3870  0077AA  B4D8               	btfsc	status,2,c
  3871  0077AC  D01F               	goto	l1299
  3872  0077AE  0E01               	movlw	1
  3873  0077B0  2628               	addwf	___fldiv@b,f,c
  3874  0077B2  0E00               	movlw	0
  3875  0077B4  2229               	addwfc	___fldiv@b+1,f,c
  3876  0077B6  222A               	addwfc	___fldiv@b+2,f,c
  3877  0077B8  222B               	addwfc	___fldiv@b+3,f,c
  3878  0077BA  A02B               	btfss	___fldiv@b+3,0,c
  3879  0077BC  D017               	goto	l1299
  3880  0077BE  C028  F030         	movff	___fldiv@b,??___fldiv
  3881  0077C2  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  3882  0077C6  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  3883  0077CA  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  3884  0077CE  3433               	rlcf	??___fldiv+3,w,c
  3885  0077D0  3233               	rrcf	??___fldiv+3,f,c
  3886  0077D2  3232               	rrcf	??___fldiv+2,f,c
  3887  0077D4  3231               	rrcf	??___fldiv+1,f,c
  3888  0077D6  3230               	rrcf	??___fldiv,f,c
  3889  0077D8  C030  F028         	movff	??___fldiv,___fldiv@b
  3890  0077DC  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  3891  0077E0  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  3892  0077E4  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  3893  0077E8  4A39               	infsnz	___fldiv@new_exp,f,c
  3894  0077EA  2A3A               	incf	___fldiv@new_exp+1,f,c
  3895  0077EC                     l1299:
  3896  0077EC  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  3897  0077EE  D010               	goto	l1300
  3898  0077F0  503A               	movf	___fldiv@new_exp+1,w,c
  3899  0077F2  E103               	bnz	u2350
  3900  0077F4  2839               	incf	___fldiv@new_exp,w,c
  3901  0077F6  A0D8               	btfss	status,0,c
  3902  0077F8  D00B               	goto	l1300
  3903  0077FA                     u2350:
  3904  0077FA  0E00               	movlw	0
  3905  0077FC  6E3A               	movwf	___fldiv@new_exp+1,c
  3906  0077FE  6839               	setf	___fldiv@new_exp,c
  3907  007800  0E00               	movlw	0
  3908  007802  6E28               	movwf	___fldiv@b,c
  3909  007804  0E00               	movlw	0
  3910  007806  6E29               	movwf	___fldiv@b+1,c
  3911  007808  0E00               	movlw	0
  3912  00780A  6E2A               	movwf	___fldiv@b+2,c
  3913  00780C  0E00               	movlw	0
  3914  00780E  6E2B               	movwf	___fldiv@b+3,c
  3915  007810                     l1300:
  3916  007810  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  3917  007812  D005               	goto	u2360
  3918  007814  503A               	movf	___fldiv@new_exp+1,w,c
  3919  007816  E111               	bnz	l3042
  3920  007818  0439               	decf	___fldiv@new_exp,w,c
  3921  00781A  B0D8               	btfsc	status,0,c
  3922  00781C  D00E               	goto	l1301
  3923  00781E                     u2360:
  3924  00781E  0E00               	movlw	0
  3925  007820  6E3A               	movwf	___fldiv@new_exp+1,c
  3926  007822  0E00               	movlw	0
  3927  007824  6E39               	movwf	___fldiv@new_exp,c
  3928  007826  0E00               	movlw	0
  3929  007828  6E28               	movwf	___fldiv@b,c
  3930  00782A  0E00               	movlw	0
  3931  00782C  6E29               	movwf	___fldiv@b+1,c
  3932  00782E  0E00               	movlw	0
  3933  007830  6E2A               	movwf	___fldiv@b+2,c
  3934  007832  0E00               	movlw	0
  3935  007834  6E2B               	movwf	___fldiv@b+3,c
  3936  007836  0E00               	movlw	0
  3937  007838  6E38               	movwf	___fldiv@sign,c
  3938  00783A                     l1301:
  3939  00783A                     l3042:
  3940  00783A  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  3941  00783E  A03F               	btfss	___fldiv@bexp,0,c
  3942  007840  D002               	goto	l1302
  3943  007842  8E2A               	bsf	___fldiv@b+2,7,c
  3944  007844  D001               	goto	l1303
  3945  007846                     l1302:
  3946  007846  9E2A               	bcf	___fldiv@b+2,7,c
  3947  007848                     l1303:
  3948  007848  90D8               	bcf	status,0,c
  3949  00784A  303F               	rrcf	___fldiv@bexp,w,c
  3950  00784C  6E2B               	movwf	___fldiv@b+3,c
  3951  00784E  5038               	movf	___fldiv@sign,w,c
  3952  007850  122B               	iorwf	___fldiv@b+3,f,c
  3953  007852  C028  F028         	movff	___fldiv@b,?___fldiv
  3954  007856  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  3955  00785A  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  3956  00785E  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  3957  007862  0012               	return	
  3958  007864                     __end_of___fldiv:
  3959                           	opt stack 0
  3960                           tblptru	equ	0xFF8
  3961                           tblptrh	equ	0xFF7
  3962                           tblptrl	equ	0xFF6
  3963                           tablat	equ	0xFF5
  3964                           prodh	equ	0xFF4
  3965                           prodl	equ	0xFF3
  3966                           intcon	equ	0xFF2
  3967                           postinc0	equ	0xFEE
  3968                           wreg	equ	0xFE8
  3969                           postdec1	equ	0xFE5
  3970                           fsr1l	equ	0xFE1
  3971                           status	equ	0xFD8
  3972                           
  3973 ;; *************** function _Vumetro_Func *****************
  3974 ;; Defined at:
  3975 ;;		line 85 in file "Tecnica1.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;  Vumetro_Ente    1    wreg     unsigned char 
  3978 ;;  Vumetro_Rest    1    4[COMRAM] unsigned char 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;  Vumetro_Ente    1    5[COMRAM] unsigned char 
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      void 
  3983 ;; Registers used:
  3984 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3990 ;;      Params:         1       0       0       0       0       0       0       0       0
  3991 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3992 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3993 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3994 ;;Total ram usage:        2 bytes
  3995 ;; Hardware stack levels used:    1
  3996 ;; Hardware stack levels required when called:    5
  3997 ;; This function calls:
  3998 ;;		_char2LCD
  3999 ;;		_msg2LCD
  4000 ;;		_set_CURSOR
  4001 ;; This function is called by:
  4002 ;;		_AD_Converter
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text17
  4007  007172                     __ptext17:
  4008                           	opt stack 0
  4009  007172                     _Vumetro_Func:
  4010                           	opt stack 24
  4011                           
  4012                           ;incstack = 0
  4013                           ;Vumetro_Func@Vumetro_Entero stored from wreg
  4014  007172  6E06               	movwf	Vumetro_Func@Vumetro_Entero,c
  4015                           
  4016                           ;Tecnica1.c: 88:     if (!limitador_vumetro) {
  4017  007174  5059               	movf	_limitador_vumetro,w,c
  4018  007176  A4D8               	btfss	status,2,c
  4019  007178  D00B               	goto	l429
  4020                           
  4021                           ;Tecnica1.c: 89:         set_CURSOR(0x40);
  4022  00717A  0E40               	movlw	64
  4023  00717C  EC2D  F037         	call	_set_CURSOR
  4024                           
  4025                           ;Tecnica1.c: 90:         msg2LCD("              ");
  4026  007180  0E25               	movlw	low STR_1
  4027  007182  6E03               	movwf	msg2LCD@datos,c
  4028  007184  0E20               	movlw	high STR_1
  4029  007186  6E04               	movwf	msg2LCD@datos+1,c
  4030  007188  ECC5  F037         	call	_msg2LCD	;wreg free
  4031                           
  4032                           ;Tecnica1.c: 91:         limitador_vumetro = 60;
  4033  00718C  0E3C               	movlw	60
  4034  00718E  6E59               	movwf	_limitador_vumetro,c
  4035  007190                     l429:
  4036                           
  4037                           ;Tecnica1.c: 94:     set_CURSOR(0x40);
  4038  007190  0E40               	movlw	64
  4039  007192  EC2D  F037         	call	_set_CURSOR
  4040                           
  4041                           ;Tecnica1.c: 96:     while (Vumetro_Entero > 0) {
  4042  007196  D004               	goto	l430
  4043  007198                     
  4044                           ;Tecnica1.c: 97:         char2LCD(1);
  4045  007198  0E01               	movlw	1
  4046  00719A  EC17  F037         	call	_char2LCD
  4047                           
  4048                           ;Tecnica1.c: 98:         Vumetro_Entero--;
  4049  00719E  0606               	decf	Vumetro_Func@Vumetro_Entero,f,c
  4050  0071A0                     l430:
  4051                           
  4052                           ;Tecnica1.c: 96:     while (Vumetro_Entero > 0) {
  4053  0071A0  5006               	movf	Vumetro_Func@Vumetro_Entero,w,c
  4054  0071A2  A4D8               	btfss	status,2,c
  4055  0071A4  D7F9               	goto	l431
  4056                           
  4057                           ;Tecnica1.c: 101:     if ((Vumetro_Resto > 0) && (Vumetro_Resto <= 2))
  4058  0071A6  5005               	movf	Vumetro_Func@Vumetro_Resto,w,c
  4059  0071A8  B4D8               	btfsc	status,2,c
  4060  0071AA  D007               	goto	l433
  4061  0071AC  0E03               	movlw	3
  4062  0071AE  6005               	cpfslt	Vumetro_Func@Vumetro_Resto,c
  4063  0071B0  D004               	goto	l433
  4064                           
  4065                           ;Tecnica1.c: 102:         char2LCD(5);
  4066  0071B2  0E05               	movlw	5
  4067  0071B4  EC17  F037         	call	_char2LCD
  4068  0071B8  0012               	return	
  4069  0071BA                     l433:
  4070  0071BA  0E02               	movlw	2
  4071  0071BC  6405               	cpfsgt	Vumetro_Func@Vumetro_Resto,c
  4072  0071BE  D007               	goto	l435
  4073  0071C0  0E05               	movlw	5
  4074  0071C2  6005               	cpfslt	Vumetro_Func@Vumetro_Resto,c
  4075  0071C4  D004               	goto	l435
  4076                           
  4077                           ;Tecnica1.c: 105:         char2LCD(4);
  4078  0071C6  0E04               	movlw	4
  4079  0071C8  EC17  F037         	call	_char2LCD
  4080  0071CC  0012               	return	
  4081  0071CE                     l435:
  4082  0071CE  0E04               	movlw	4
  4083  0071D0  6405               	cpfsgt	Vumetro_Func@Vumetro_Resto,c
  4084  0071D2  D007               	goto	l437
  4085  0071D4  0E07               	movlw	7
  4086  0071D6  6005               	cpfslt	Vumetro_Func@Vumetro_Resto,c
  4087  0071D8  D004               	goto	l437
  4088                           
  4089                           ;Tecnica1.c: 108:         char2LCD(3);
  4090  0071DA  0E03               	movlw	3
  4091  0071DC  EC17  F037         	call	_char2LCD
  4092  0071E0  0012               	return	
  4093  0071E2                     l437:
  4094  0071E2  0E06               	movlw	6
  4095  0071E4  6405               	cpfsgt	Vumetro_Func@Vumetro_Resto,c
  4096  0071E6  0012               	return	
  4097  0071E8  0E09               	movlw	9
  4098  0071EA  6005               	cpfslt	Vumetro_Func@Vumetro_Resto,c
  4099  0071EC  0012               	return	
  4100                           
  4101                           ;Tecnica1.c: 111:         char2LCD(2);
  4102  0071EE  0E02               	movlw	2
  4103  0071F0  EC17  F037         	call	_char2LCD
  4104  0071F4  0012               	return	
  4105  0071F6                     __end_of_Vumetro_Func:
  4106                           	opt stack 0
  4107                           tblptru	equ	0xFF8
  4108                           tblptrh	equ	0xFF7
  4109                           tblptrl	equ	0xFF6
  4110                           tablat	equ	0xFF5
  4111                           prodh	equ	0xFF4
  4112                           prodl	equ	0xFF3
  4113                           intcon	equ	0xFF2
  4114                           postinc0	equ	0xFEE
  4115                           wreg	equ	0xFE8
  4116                           postdec1	equ	0xFE5
  4117                           fsr1l	equ	0xFE1
  4118                           status	equ	0xFD8
  4119                           
  4120 ;; *************** function _set_CURSOR *****************
  4121 ;; Defined at:
  4122 ;;		line 56 in file "lcd.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  posi            1    wreg     unsigned char 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  posi            1    2[COMRAM] unsigned char 
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      void 
  4129 ;; Registers used:
  4130 ;;		wreg, status,2, status,0, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4136 ;;      Params:         0       0       0       0       0       0       0       0       0
  4137 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4138 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4139 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4140 ;;Total ram usage:        1 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:    4
  4143 ;; This function calls:
  4144 ;;		_read_BUSY
  4145 ;;		_write_CMD
  4146 ;; This function is called by:
  4147 ;;		_Vumetro_Func
  4148 ;;		_AD_Converter
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           	psect	text18
  4153  006E5A                     __ptext18:
  4154                           	opt stack 0
  4155  006E5A                     _set_CURSOR:
  4156                           	opt stack 25
  4157                           
  4158                           ;incstack = 0
  4159                           ;set_CURSOR@posi stored from wreg
  4160  006E5A  6E03               	movwf	set_CURSOR@posi,c
  4161                           
  4162                           ;lcd.c: 57:  posi |= 0x80;
  4163  006E5C  8E03               	bsf	set_CURSOR@posi,7,c
  4164                           
  4165                           ;lcd.c: 58:  write_CMD(posi);
  4166  006E5E  5003               	movf	set_CURSOR@posi,w,c
  4167  006E60  EC1E  F037         	call	_write_CMD
  4168                           
  4169                           ;lcd.c: 59:  read_BUSY();
  4170  006E64  EC85  F037         	call	_read_BUSY	;wreg free
  4171  006E68  0012               	return		;funcret
  4172  006E6A                     __end_of_set_CURSOR:
  4173                           	opt stack 0
  4174                           tblptru	equ	0xFF8
  4175                           tblptrh	equ	0xFF7
  4176                           tblptrl	equ	0xFF6
  4177                           tablat	equ	0xFF5
  4178                           prodh	equ	0xFF4
  4179                           prodl	equ	0xFF3
  4180                           intcon	equ	0xFF2
  4181                           postinc0	equ	0xFEE
  4182                           wreg	equ	0xFE8
  4183                           postdec1	equ	0xFE5
  4184                           fsr1l	equ	0xFE1
  4185                           status	equ	0xFD8
  4186                           
  4187 ;; *************** function _write_CMD *****************
  4188 ;; Defined at:
  4189 ;;		line 110 in file "lcd.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  dato            1    wreg     unsigned char 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  dato            1    1[COMRAM] unsigned char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		wreg, status,2, status,0, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4203 ;;      Params:         0       0       0       0       0       0       0       0       0
  4204 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4206 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4207 ;;Total ram usage:        1 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    3
  4210 ;; This function calls:
  4211 ;;		_write_LCD
  4212 ;; This function is called by:
  4213 ;;		_ret_HOME
  4214 ;;		_set_CURSOR
  4215 ;;		_LCD_init
  4216 ;;		_Simbolos
  4217 ;;		_clear_LCD
  4218 ;;		_DesplazarIzquierda
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text19
  4223  006E3C                     __ptext19:
  4224                           	opt stack 0
  4225  006E3C                     _write_CMD:
  4226                           	opt stack 26
  4227                           
  4228                           ;incstack = 0
  4229                           ;write_CMD@dato stored from wreg
  4230  006E3C  6E02               	movwf	write_CMD@dato,c
  4231                           
  4232                           ;lcd.c: 112:  PORTEbits.RE2 = 0x0;
  4233  006E3E  9484               	bcf	3972,2,c	;volatile
  4234                           
  4235                           ;lcd.c: 113:  PORTEbits.RE1 = 0x0;
  4236  006E40  9284               	bcf	3972,1,c	;volatile
  4237                           
  4238                           ;lcd.c: 114:  write_LCD(dato);
  4239  006E42  5002               	movf	write_CMD@dato,w,c
  4240  006E44  EC41  F037         	call	_write_LCD
  4241  006E48  0012               	return		;funcret
  4242  006E4A                     __end_of_write_CMD:
  4243                           	opt stack 0
  4244                           tblptru	equ	0xFF8
  4245                           tblptrh	equ	0xFF7
  4246                           tblptrl	equ	0xFF6
  4247                           tablat	equ	0xFF5
  4248                           prodh	equ	0xFF4
  4249                           prodl	equ	0xFF3
  4250                           intcon	equ	0xFF2
  4251                           postinc0	equ	0xFEE
  4252                           wreg	equ	0xFE8
  4253                           postdec1	equ	0xFE5
  4254                           fsr1l	equ	0xFE1
  4255                           status	equ	0xFD8
  4256                           
  4257 ;; *************** function _msg2LCD *****************
  4258 ;; Defined at:
  4259 ;;		line 27 in file "lcd.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  datos           2    2[COMRAM] PTR const unsigned char 
  4262 ;;		 -> STR_3(2), STR_2(6), STR_1(15), 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;		None
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      void 
  4267 ;; Registers used:
  4268 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4274 ;;      Params:         2       0       0       0       0       0       0       0       0
  4275 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4277 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4278 ;;Total ram usage:        2 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:    4
  4281 ;; This function calls:
  4282 ;;		_read_BUSY
  4283 ;;		_write_DATA
  4284 ;; This function is called by:
  4285 ;;		_Vumetro_Func
  4286 ;;		_AD_Converter
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text20
  4291  006F8A                     __ptext20:
  4292                           	opt stack 0
  4293  006F8A                     _msg2LCD:
  4294                           	opt stack 25
  4295                           
  4296                           ;lcd.c: 29:  while (*datos != 0){
  4297                           
  4298                           ;incstack = 0
  4299  006F8A  D00C               	goto	l75
  4300  006F8C                     
  4301                           ;lcd.c: 30:   write_DATA(*datos);
  4302  006F8C  C003  FFF6         	movff	msg2LCD@datos,tblptrl
  4303  006F90  C004  FFF7         	movff	msg2LCD@datos+1,tblptrh
  4304  006F94                     	if	0	;tblptru may be non-zero
  4305  006F94                     	endif
  4306  006F94                     	if	0	;tblptru may be non-zero
  4307  006F94                     	endif
  4308  006F94  0008               	tblrd		*
  4309  006F96  50F5               	movf	tablat,w,c
  4310  006F98  EC10  F037         	call	_write_DATA
  4311                           
  4312                           ;lcd.c: 31:   read_BUSY();
  4313  006F9C  EC85  F037         	call	_read_BUSY	;wreg free
  4314                           
  4315                           ;lcd.c: 32:   datos++;
  4316  006FA0  4A03               	infsnz	msg2LCD@datos,f,c
  4317  006FA2  2A04               	incf	msg2LCD@datos+1,f,c
  4318  006FA4                     l75:
  4319                           
  4320                           ;lcd.c: 29:  while (*datos != 0){
  4321  006FA4  C003  FFF6         	movff	msg2LCD@datos,tblptrl
  4322  006FA8  C004  FFF7         	movff	msg2LCD@datos+1,tblptrh
  4323  006FAC                     	if	0	;tblptru may be non-zero
  4324  006FAC                     	endif
  4325  006FAC                     	if	0	;tblptru may be non-zero
  4326  006FAC                     	endif
  4327  006FAC  0008               	tblrd		*
  4328  006FAE  50F5               	movf	tablat,w,c
  4329  006FB0  0900               	iorlw	0
  4330  006FB2  B4D8               	btfsc	status,2,c
  4331  006FB4  0012               	return	
  4332  006FB6  D7EA               	goto	l76
  4333  006FB8                     __end_of_msg2LCD:
  4334                           	opt stack 0
  4335                           tblptru	equ	0xFF8
  4336                           tblptrh	equ	0xFF7
  4337                           tblptrl	equ	0xFF6
  4338                           tablat	equ	0xFF5
  4339                           prodh	equ	0xFF4
  4340                           prodl	equ	0xFF3
  4341                           intcon	equ	0xFF2
  4342                           postinc0	equ	0xFEE
  4343                           wreg	equ	0xFE8
  4344                           postdec1	equ	0xFE5
  4345                           fsr1l	equ	0xFE1
  4346                           status	equ	0xFD8
  4347                           
  4348 ;; *************** function _char2LCD *****************
  4349 ;; Defined at:
  4350 ;;		line 37 in file "lcd.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;  dato            1    wreg     unsigned char 
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;  dato            1    2[COMRAM] unsigned char 
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  1    wreg      void 
  4357 ;; Registers used:
  4358 ;;		wreg, status,2, status,0, cstack
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4364 ;;      Params:         0       0       0       0       0       0       0       0       0
  4365 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4366 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4367 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4368 ;;Total ram usage:        1 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:    4
  4371 ;; This function calls:
  4372 ;;		_read_BUSY
  4373 ;;		_write_DATA
  4374 ;; This function is called by:
  4375 ;;		_Simbolos
  4376 ;;		_Vumetro_Func
  4377 ;;		_AD_Converter
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text21
  4382  006E2E                     __ptext21:
  4383                           	opt stack 0
  4384  006E2E                     _char2LCD:
  4385                           	opt stack 25
  4386                           
  4387                           ;incstack = 0
  4388                           ;char2LCD@dato stored from wreg
  4389  006E2E  6E03               	movwf	char2LCD@dato,c
  4390                           
  4391                           ;lcd.c: 39:  write_DATA(dato);
  4392  006E30  5003               	movf	char2LCD@dato,w,c
  4393  006E32  EC10  F037         	call	_write_DATA
  4394                           
  4395                           ;lcd.c: 40:  read_BUSY();
  4396  006E36  EC85  F037         	call	_read_BUSY	;wreg free
  4397  006E3A  0012               	return		;funcret
  4398  006E3C                     __end_of_char2LCD:
  4399                           	opt stack 0
  4400                           tblptru	equ	0xFF8
  4401                           tblptrh	equ	0xFF7
  4402                           tblptrl	equ	0xFF6
  4403                           tablat	equ	0xFF5
  4404                           prodh	equ	0xFF4
  4405                           prodl	equ	0xFF3
  4406                           intcon	equ	0xFF2
  4407                           postinc0	equ	0xFEE
  4408                           wreg	equ	0xFE8
  4409                           postdec1	equ	0xFE5
  4410                           fsr1l	equ	0xFE1
  4411                           status	equ	0xFD8
  4412                           
  4413 ;; *************** function _write_DATA *****************
  4414 ;; Defined at:
  4415 ;;		line 101 in file "lcd.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  dato            1    wreg     unsigned char 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  dato            1    1[COMRAM] unsigned char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      void 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2, status,0, cstack
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4429 ;;      Params:         0       0       0       0       0       0       0       0       0
  4430 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4432 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4433 ;;Total ram usage:        1 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; Hardware stack levels required when called:    3
  4436 ;; This function calls:
  4437 ;;		_write_LCD
  4438 ;; This function is called by:
  4439 ;;		_msg2LCD
  4440 ;;		_char2LCD
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           	psect	text22
  4445  006E20                     __ptext22:
  4446                           	opt stack 0
  4447  006E20                     _write_DATA:
  4448                           	opt stack 25
  4449                           
  4450                           ;incstack = 0
  4451                           ;write_DATA@dato stored from wreg
  4452  006E20  6E02               	movwf	write_DATA@dato,c
  4453                           
  4454                           ;lcd.c: 103:  PORTEbits.RE2 = 0x1;
  4455  006E22  8484               	bsf	3972,2,c	;volatile
  4456                           
  4457                           ;lcd.c: 104:  PORTEbits.RE1 = 0x0;
  4458  006E24  9284               	bcf	3972,1,c	;volatile
  4459                           
  4460                           ;lcd.c: 105:  write_LCD(dato);
  4461  006E26  5002               	movf	write_DATA@dato,w,c
  4462  006E28  EC41  F037         	call	_write_LCD
  4463  006E2C  0012               	return		;funcret
  4464  006E2E                     __end_of_write_DATA:
  4465                           	opt stack 0
  4466                           tblptru	equ	0xFF8
  4467                           tblptrh	equ	0xFF7
  4468                           tblptrl	equ	0xFF6
  4469                           tablat	equ	0xFF5
  4470                           prodh	equ	0xFF4
  4471                           prodl	equ	0xFF3
  4472                           intcon	equ	0xFF2
  4473                           postinc0	equ	0xFEE
  4474                           wreg	equ	0xFE8
  4475                           postdec1	equ	0xFE5
  4476                           fsr1l	equ	0xFE1
  4477                           status	equ	0xFD8
  4478                           
  4479 ;; *************** function _write_LCD *****************
  4480 ;; Defined at:
  4481 ;;		line 119 in file "lcd.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;  dato            1    wreg     unsigned char 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  dato            1    0[COMRAM] unsigned char 
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      void 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2, status,0
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4495 ;;      Params:         0       0       0       0       0       0       0       0       0
  4496 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4498 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4499 ;;Total ram usage:        1 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; Hardware stack levels required when called:    2
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_write_DATA
  4506 ;;		_write_CMD
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text23
  4511  006E82                     __ptext23:
  4512                           	opt stack 0
  4513  006E82                     _write_LCD:
  4514                           	opt stack 26
  4515                           
  4516                           ;incstack = 0
  4517                           ;write_LCD@dato stored from wreg
  4518  006E82  6E01               	movwf	write_LCD@dato,c
  4519                           
  4520                           ;lcd.c: 121:     LATD &= 0x0F;
  4521  006E84  0E0F               	movlw	15
  4522  006E86  168C               	andwf	3980,f,c	;volatile
  4523                           
  4524                           ;lcd.c: 122:     PORTEbits.RE0 = 0x1;
  4525  006E88  8084               	bsf	3972,0,c	;volatile
  4526                           
  4527                           ;lcd.c: 125:     LATD |= (dato & 0xF0);
  4528  006E8A  5001               	movf	write_LCD@dato,w,c
  4529  006E8C  0BF0               	andlw	240
  4530  006E8E  128C               	iorwf	3980,f,c	;volatile
  4531                           
  4532                           ;lcd.c: 127:     PORTEbits.RE0 = 0x0;
  4533  006E90  9084               	bcf	3972,0,c	;volatile
  4534                           
  4535                           ;lcd.c: 129:     LATD &= 0x0F;
  4536  006E92  0E0F               	movlw	15
  4537  006E94  168C               	andwf	3980,f,c	;volatile
  4538                           
  4539                           ;lcd.c: 130:     PORTEbits.RE0 = 0x1;
  4540  006E96  8084               	bsf	3972,0,c	;volatile
  4541                           
  4542                           ;lcd.c: 133:     LATD |= (dato<<4);
  4543  006E98  3801               	swapf	write_LCD@dato,w,c	;volatile
  4544  006E9A  0BF0               	andlw	240
  4545  006E9C  128C               	iorwf	3980,f,c	;volatile
  4546                           
  4547                           ;lcd.c: 135:     PORTEbits.RE0 = 0x0;
  4548  006E9E  9084               	bcf	3972,0,c	;volatile
  4549  006EA0  0012               	return		;funcret
  4550  006EA2                     __end_of_write_LCD:
  4551                           	opt stack 0
  4552                           tblptru	equ	0xFF8
  4553                           tblptrh	equ	0xFF7
  4554                           tblptrl	equ	0xFF6
  4555                           tablat	equ	0xFF5
  4556                           prodh	equ	0xFF4
  4557                           prodl	equ	0xFF3
  4558                           intcon	equ	0xFF2
  4559                           postinc0	equ	0xFEE
  4560                           wreg	equ	0xFE8
  4561                           postdec1	equ	0xFE5
  4562                           fsr1l	equ	0xFE1
  4563                           status	equ	0xFD8
  4564                           
  4565 ;; *************** function _read_BUSY *****************
  4566 ;; Defined at:
  4567 ;;		line 140 in file "lcd.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;		None
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;  aux             1    0[COMRAM] unsigned char 
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    wreg      void 
  4574 ;; Registers used:
  4575 ;;		wreg, status,2, status,0
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4581 ;;      Params:         0       0       0       0       0       0       0       0       0
  4582 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4584 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4585 ;;Total ram usage:        1 bytes
  4586 ;; Hardware stack levels used:    1
  4587 ;; Hardware stack levels required when called:    2
  4588 ;; This function calls:
  4589 ;;		Nothing
  4590 ;; This function is called by:
  4591 ;;		_msg2LCD
  4592 ;;		_char2LCD
  4593 ;;		_ret_HOME
  4594 ;;		_set_CURSOR
  4595 ;;		_LCD_init
  4596 ;;		_Simbolos
  4597 ;;		_clear_LCD
  4598 ;;		_DesplazarIzquierda
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           	psect	text24
  4603  006F0A                     __ptext24:
  4604                           	opt stack 0
  4605  006F0A                     _read_BUSY:
  4606                           	opt stack 26
  4607                           
  4608                           ;lcd.c: 141:  unsigned char aux;;lcd.c: 143:  TRISD |= 0xF0;
  4609                           
  4610                           ;incstack = 0
  4611  006F0A  0EF0               	movlw	240
  4612  006F0C  1295               	iorwf	3989,f,c	;volatile
  4613                           
  4614                           ;lcd.c: 144:  PORTEbits.RE2 = 0x0;
  4615  006F0E  9484               	bcf	3972,2,c	;volatile
  4616                           
  4617                           ;lcd.c: 145:  PORTEbits.RE1 = 0x1;
  4618  006F10  8284               	bsf	3972,1,c	;volatile
  4619  006F12                     
  4620                           ;lcd.c: 147:   PORTEbits.RE0 = 0x1;
  4621  006F12  8084               	bsf	3972,0,c	;volatile
  4622                           
  4623                           ;lcd.c: 148:   aux = PORTDbits.RD7;
  4624  006F14  0E00               	movlw	0
  4625  006F16  BE83               	btfsc	3971,7,c	;volatile
  4626  006F18  0E01               	movlw	1
  4627  006F1A  6E01               	movwf	read_BUSY@aux,c
  4628                           
  4629                           ;lcd.c: 149:   PORTEbits.RE0 = 0x0;
  4630  006F1C  9084               	bcf	3972,0,c	;volatile
  4631                           
  4632                           ;lcd.c: 150:   PORTEbits.RE0 = 0x1;
  4633  006F1E  8084               	bsf	3972,0,c	;volatile
  4634                           
  4635                           ;lcd.c: 151:   (void)PORTDbits.RD7;
  4636  006F20  5083               	movf	3971,w,c	;volatile
  4637                           
  4638                           ;lcd.c: 152:   PORTEbits.RE0 = 0x0;
  4639  006F22  9084               	bcf	3972,0,c	;volatile
  4640                           
  4641                           ;lcd.c: 153:  }while (aux);
  4642  006F24  5001               	movf	read_BUSY@aux,w,c
  4643  006F26  A4D8               	btfss	status,2,c
  4644  006F28  D7F4               	goto	l126
  4645                           
  4646                           ;lcd.c: 154:  PORTEbits.RE1 = 0x0;
  4647  006F2A  9284               	bcf	3972,1,c	;volatile
  4648                           
  4649                           ;lcd.c: 155:  TRISD &= 0x0F;
  4650  006F2C  0E0F               	movlw	15
  4651  006F2E  1695               	andwf	3989,f,c	;volatile
  4652  006F30  0012               	return		;funcret
  4653  006F32                     __end_of_read_BUSY:
  4654                           	opt stack 0
  4655                           tblptru	equ	0xFF8
  4656                           tblptrh	equ	0xFF7
  4657                           tblptrl	equ	0xFF6
  4658                           tablat	equ	0xFF5
  4659                           prodh	equ	0xFF4
  4660                           prodl	equ	0xFF3
  4661                           intcon	equ	0xFF2
  4662                           postinc0	equ	0xFEE
  4663                           wreg	equ	0xFE8
  4664                           postdec1	equ	0xFE5
  4665                           fsr1l	equ	0xFE1
  4666                           status	equ	0xFD8
  4667                           
  4668 ;; *************** function _myISR *****************
  4669 ;; Defined at:
  4670 ;;		line 44 in file "main.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;		None
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;		None
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  1    wreg      void 
  4677 ;; Registers used:
  4678 ;;		wreg, status,2, status,0, cstack
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4684 ;;      Params:         0       0       0       0       0       0       0       0       0
  4685 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4687 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4688 ;;Total ram usage:        0 bytes
  4689 ;; Hardware stack levels used:    1
  4690 ;; Hardware stack levels required when called:    1
  4691 ;; This function calls:
  4692 ;;		_tic_ADC
  4693 ;;		_tic_LCD
  4694 ;; This function is called by:
  4695 ;;		Interrupt level 2
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	intcode
  4700  002008                     __pintcode:
  4701                           	opt stack 0
  4702  002008                     _myISR:
  4703                           	opt stack 24
  4704                           
  4705                           ;incstack = 0
  4706  002008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4707  00200A  ED99  F037         	call	int_func,f	;refresh shadow registers
  4708                           tblptru	equ	0xFF8
  4709                           tblptrh	equ	0xFF7
  4710                           tblptrl	equ	0xFF6
  4711                           tablat	equ	0xFF5
  4712                           prodh	equ	0xFF4
  4713                           prodl	equ	0xFF3
  4714                           intcon	equ	0xFF2
  4715                           postinc0	equ	0xFEE
  4716                           wreg	equ	0xFE8
  4717                           postdec1	equ	0xFE5
  4718                           fsr1l	equ	0xFE1
  4719                           status	equ	0xFD8
  4720                           
  4721                           	psect	intcode_body
  4722  006F32                     __pintcode_body:
  4723                           	opt stack 24
  4724  006F32                     int_func:
  4725                           	opt stack 24
  4726  006F32  0006               	pop		; remove dummy address from shadow register refresh
  4727                           
  4728                           ;main.c: 46:     if (INTCONbits.TMR0IF) {
  4729  006F34  A4F2               	btfss	intcon,2,c	;volatile
  4730  006F36  D006               	goto	i2l49
  4731                           
  4732                           ;main.c: 47:         TMR0L = 209;
  4733  006F38  0ED1               	movlw	209
  4734  006F3A  6ED6               	movwf	4054,c	;volatile
  4735                           
  4736                           ;main.c: 49:         tic_ADC();
  4737  006F3C  EC04  F037         	call	_tic_ADC	;wreg free
  4738                           
  4739                           ;main.c: 51:         tic_LCD();
  4740  006F40  EC25  F037         	call	_tic_LCD	;wreg free
  4741  006F44                     i2l49:
  4742                           
  4743                           ;main.c: 55:     if (PIR1bits.TMR1IF == 1) {
  4744  006F44  A09E               	btfss	3998,0,c	;volatile
  4745  006F46  D007               	goto	i2l51
  4746                           
  4747                           ;main.c: 56:         TMR1L = 0x78;
  4748  006F48  0E78               	movlw	120
  4749  006F4A  6ECE               	movwf	4046,c	;volatile
  4750                           
  4751                           ;main.c: 57:         TMR1H = 0xC4;
  4752  006F4C  0EC4               	movlw	196
  4753  006F4E  6ECF               	movwf	4047,c	;volatile
  4754                           
  4755                           ;main.c: 59:         if (limitador_vumetro > 0)
  4756  006F50  5059               	movf	_limitador_vumetro,w,c
  4757  006F52  A4D8               	btfss	status,2,c
  4758                           
  4759                           ;main.c: 60:             limitador_vumetro--;
  4760  006F54  0659               	decf	_limitador_vumetro,f,c
  4761  006F56                     i2l51:
  4762                           
  4763                           ;main.c: 63:     PIR1bits.TMR1IF = 0;
  4764                           
  4765                           ;main.c: 61:     }
  4766  006F56  909E               	bcf	3998,0,c	;volatile
  4767                           
  4768                           ;main.c: 64:     INTCONbits.TMR0IF = 0;
  4769  006F58  94F2               	bcf	intcon,2,c	;volatile
  4770  006F5A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4771  006F5C  0011               	retfie		f
  4772  006F5E                     __end_of_myISR:
  4773                           	opt stack 0
  4774                           tblptru	equ	0xFF8
  4775                           tblptrh	equ	0xFF7
  4776                           tblptrl	equ	0xFF6
  4777                           tablat	equ	0xFF5
  4778                           prodh	equ	0xFF4
  4779                           prodl	equ	0xFF3
  4780                           intcon	equ	0xFF2
  4781                           postinc0	equ	0xFEE
  4782                           wreg	equ	0xFE8
  4783                           postdec1	equ	0xFE5
  4784                           fsr1l	equ	0xFE1
  4785                           status	equ	0xFD8
  4786                           
  4787 ;; *************** function _tic_LCD *****************
  4788 ;; Defined at:
  4789 ;;		line 159 in file "lcd.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;		None
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;		None
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  1    wreg      void 
  4796 ;; Registers used:
  4797 ;;		wreg, status,2, status,0
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4803 ;;      Params:         0       0       0       0       0       0       0       0       0
  4804 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4805 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4806 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4807 ;;Total ram usage:        0 bytes
  4808 ;; Hardware stack levels used:    1
  4809 ;; This function calls:
  4810 ;;		Nothing
  4811 ;; This function is called by:
  4812 ;;		_myISR
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text26
  4817  006E4A                     __ptext26:
  4818                           	opt stack 0
  4819  006E4A                     _tic_LCD:
  4820                           	opt stack 24
  4821                           
  4822                           ;lcd.c: 160:   if (LCD_tout) LCD_tout--;
  4823                           
  4824                           ;incstack = 0
  4825  006E4A  505D               	movf	_LCD_tout,w,c
  4826  006E4C  105E               	iorwf	_LCD_tout+1,w,c
  4827  006E4E  B4D8               	btfsc	status,2,c
  4828  006E50  0012               	return	
  4829  006E52  065D               	decf	_LCD_tout,f,c
  4830  006E54  A0D8               	btfss	status,0,c
  4831  006E56  065E               	decf	_LCD_tout+1,f,c
  4832  006E58  0012               	return	
  4833  006E5A                     __end_of_tic_LCD:
  4834                           	opt stack 0
  4835                           tblptru	equ	0xFF8
  4836                           tblptrh	equ	0xFF7
  4837                           tblptrl	equ	0xFF6
  4838                           tablat	equ	0xFF5
  4839                           prodh	equ	0xFF4
  4840                           prodl	equ	0xFF3
  4841                           intcon	equ	0xFF2
  4842                           postinc0	equ	0xFEE
  4843                           wreg	equ	0xFE8
  4844                           postdec1	equ	0xFE5
  4845                           fsr1l	equ	0xFE1
  4846                           status	equ	0xFD8
  4847                           
  4848 ;; *************** function _tic_ADC *****************
  4849 ;; Defined at:
  4850 ;;		line 189 in file "Tecnica1.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;		None
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;		None
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  1    wreg      void 
  4857 ;; Registers used:
  4858 ;;		wreg, status,2, status,0
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4864 ;;      Params:         0       0       0       0       0       0       0       0       0
  4865 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4866 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4867 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4868 ;;Total ram usage:        0 bytes
  4869 ;; Hardware stack levels used:    1
  4870 ;; This function calls:
  4871 ;;		Nothing
  4872 ;; This function is called by:
  4873 ;;		_myISR
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           	psect	text27
  4878  006E08                     __ptext27:
  4879                           	opt stack 0
  4880  006E08                     _tic_ADC:
  4881                           	opt stack 24
  4882                           
  4883                           ;Tecnica1.c: 190:     if(limitadorADC) limitadorADC--;
  4884                           
  4885                           ;incstack = 0
  4886  006E08  0100               	movlb	0	; () banked
  4887  006E0A  5187               	movf	_limitadorADC& (0+255),w,b
  4888  006E0C  B4D8               	btfsc	status,2,c
  4889  006E0E  0012               	return	
  4890                           
  4891                           ; BSR set to: 0
  4892  006E10  0787               	decf	_limitadorADC& (0+255),f,b
  4893  006E12  0012               	return	
  4894  006E14                     __end_of_tic_ADC:
  4895                           	opt stack 0
  4896                           tblptru	equ	0xFF8
  4897                           tblptrh	equ	0xFF7
  4898                           tblptrl	equ	0xFF6
  4899                           tablat	equ	0xFF5
  4900                           prodh	equ	0xFF4
  4901                           prodl	equ	0xFF3
  4902                           intcon	equ	0xFF2
  4903                           postinc0	equ	0xFEE
  4904                           wreg	equ	0xFE8
  4905                           postdec1	equ	0xFE5
  4906                           fsr1l	equ	0xFE1
  4907                           status	equ	0xFD8
  4908                           tblptru	equ	0xFF8
  4909                           tblptrh	equ	0xFF7
  4910                           tblptrl	equ	0xFF6
  4911                           tablat	equ	0xFF5
  4912                           prodh	equ	0xFF4
  4913                           prodl	equ	0xFF3
  4914                           intcon	equ	0xFF2
  4915                           postinc0	equ	0xFEE
  4916                           wreg	equ	0xFE8
  4917                           postdec1	equ	0xFE5
  4918                           fsr1l	equ	0xFE1
  4919                           status	equ	0xFD8
  4920                           
  4921                           	psect	rparam
  4922  0000                     tblptru	equ	0xFF8
  4923                           tblptrh	equ	0xFF7
  4924                           tblptrl	equ	0xFF6
  4925                           tablat	equ	0xFF5
  4926                           prodh	equ	0xFF4
  4927                           prodl	equ	0xFF3
  4928                           intcon	equ	0xFF2
  4929                           postinc0	equ	0xFEE
  4930                           wreg	equ	0xFE8
  4931                           postdec1	equ	0xFE5
  4932                           fsr1l	equ	0xFE1
  4933                           status	equ	0xFD8
  4934                           
  4935                           	psect	temp
  4936  00005F                     btemp:
  4937                           	opt stack 0
  4938  00005F                     	ds	1
  4939  0000                     int$flags	set	btemp
  4940  0000                     wtemp8	set	btemp+1
  4941  0000                     ttemp5	set	btemp+1
  4942  0000                     ttemp6	set	btemp+4
  4943  0000                     ttemp7	set	btemp+8
  4944                           tblptru	equ	0xFF8
  4945                           tblptrh	equ	0xFF7
  4946                           tblptrl	equ	0xFF6
  4947                           tablat	equ	0xFF5
  4948                           prodh	equ	0xFF4
  4949                           prodl	equ	0xFF3
  4950                           intcon	equ	0xFF2
  4951                           postinc0	equ	0xFEE
  4952                           wreg	equ	0xFE8
  4953                           postdec1	equ	0xFE5
  4954                           fsr1l	equ	0xFE1
  4955                           status	equ	0xFD8


Data Sizes:
    Strings     23
    Constant    12
    Data        10
    BSS         26
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      94
    BANK0           160     26      48
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    msg2LCD@datos	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[2]), STR_2(CODE[6]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_AD_Converter
    _Simbolos->_char2LCD
    _ret_HOME->_write_CMD
    _LCD_init->_write_CMD
    _AD_Converter->___fltol
    ___wmul->___lwmod
    ___lwdiv->___wmul
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _Vumetro_Func->_msg2LCD
    _set_CURSOR->_write_CMD
    _write_CMD->_write_LCD
    _msg2LCD->_write_DATA
    _char2LCD->_write_DATA
    _write_DATA->_write_LCD

Critical Paths under _myISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_AD_Converter

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11324
                       _AD_Converter
                           _LCD_init
                           _PicIni21
                           _Simbolos
                         _TIMER0_INI
                         _TIMER1_INI
 ---------------------------------------------------------------------------------
 (1) _TIMER1_INI                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_INI                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Simbolos                                             2     2      0     636
                                              3 COMRAM     2     2      0
                           _char2LCD
                          _read_BUSY
                           _ret_HOME
                          _write_CMD
 ---------------------------------------------------------------------------------
 (2) _ret_HOME                                             0     0      0      89
                          _read_BUSY
                          _write_CMD
 ---------------------------------------------------------------------------------
 (1) _PicIni21                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0      89
                          _read_BUSY
                          _write_CMD
 ---------------------------------------------------------------------------------
 (1) _AD_Converter                                        30    30      0   10599
                                             74 COMRAM     4     4      0
                                              0 BANK0     26    26      0
                       _Vumetro_Func
                            ___fldiv
                            ___flmul
                            ___fltol
                            ___lldiv
                            ___lwdiv
                            ___lwmod
                             ___wmul
                           ___xxtofl
                           _char2LCD
                            _msg2LCD
                      _obtener_ADC10
                         _set_CURSOR
 ---------------------------------------------------------------------------------
 (2) _obtener_ADC10                                        6     4      2      46
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     919
                                              5 COMRAM     6     2      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1831
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1074
                                             11 COMRAM     7     3      4
                            ___lwmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     381
                                             64 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Vumetro_Func                                         2     1      1     860
                                              4 COMRAM     2     1      1
                           _char2LCD
                            _msg2LCD
                         _set_CURSOR
 ---------------------------------------------------------------------------------
 (2) _set_CURSOR                                           1     1      0     112
                                              2 COMRAM     1     1      0
                          _read_BUSY
                          _write_CMD
 ---------------------------------------------------------------------------------
 (2) _write_CMD                                            1     1      0      66
                                              1 COMRAM     1     1      0
                          _write_LCD
 ---------------------------------------------------------------------------------
 (2) _msg2LCD                                              2     0      2     362
                                              2 COMRAM     2     0      2
                          _read_BUSY
                         _write_DATA
 ---------------------------------------------------------------------------------
 (2) _char2LCD                                             1     1      0     111
                                              2 COMRAM     1     1      0
                          _read_BUSY
                         _write_DATA
 ---------------------------------------------------------------------------------
 (3) _write_DATA                                           1     1      0      66
                                              1 COMRAM     1     1      0
                          _write_LCD
 ---------------------------------------------------------------------------------
 (3) _write_LCD                                            1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _read_BUSY                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _myISR                                                0     0      0       0
                            _tic_ADC
                            _tic_LCD
 ---------------------------------------------------------------------------------
 (7) _tic_LCD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _tic_ADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD_Converter
     _Vumetro_Func
       _char2LCD
         _read_BUSY
         _write_DATA
           _write_LCD
       _msg2LCD
         _read_BUSY
         _write_DATA
           _write_LCD
       _set_CURSOR
         _read_BUSY
         _write_CMD
           _write_LCD
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___lldiv
     ___lwdiv
       ___lwmod (ARG)
       ___wmul (ARG)
         ___lwmod (ARG)
     ___lwmod
     ___wmul
       ___lwmod (ARG)
     ___xxtofl
     _char2LCD
       _read_BUSY
       _write_DATA
         _write_LCD
     _msg2LCD
       _read_BUSY
       _write_DATA
         _write_LCD
     _obtener_ADC10
     _set_CURSOR
       _read_BUSY
       _write_CMD
         _write_LCD
   _LCD_init
     _read_BUSY
     _write_CMD
       _write_LCD
   _PicIni21
   _Simbolos
     _char2LCD
       _read_BUSY
       _write_DATA
         _write_LCD
     _read_BUSY
     _ret_HOME
       _read_BUSY
       _write_CMD
         _write_LCD
     _write_CMD
       _write_LCD
   _TIMER0_INI
   _TIMER1_INI

 _myISR (ROOT)
   _tic_ADC
   _tic_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1A      30       5       30.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8E      20        0.0%
DATA                 0      0      8E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Nov 22 17:11:50 2018

              ___fldiv@aexp 0040                ___fldiv@bexp 003F                ___fldiv@sign 0038  
                        l41 6EDE                          l75 6FA4                          l76 6F8C  
                        l97 7208                 __CFG_BOR$ON 000000         ___wmul@multiplicand 0008  
               __CFG_BORV$3 000000                __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000  
                       l100 721E                         l103 7234                         l112 7276  
                       l106 724A                         l109 7260                         l126 6F12  
                       l410 7408                         l403 73CA                         l404 73E2  
                       l421 7440                         l430 71A0                         l422 7458  
                       l431 7198                         l415 7418                         l416 7430  
                       l433 71BA                         l409 73F0                         l435 71CE  
                       l443 7C4A                         l444 7C9C                         l437 71E2  
                       l429 7190                         l445 7CB2                         l446 7D28  
                       l447 7DC2                         l448 7DCC                         l449 7DE2  
                       l731 7152                         l732 7160                         l397 73A4  
                       l398 73BC                         l727 711E                         l728 7112  
                       l496 6FD2                         l995 72A2                         l997 730E  
                       l998 72FE                __CFG_CPB$OFF 000000                         _PR2 000FCB  
                       _col 0089            _MultiplicadorSet 0083                         wreg 000FE8  
              ___flmul@aexp 0020                ___flmul@bexp 0021                ___flmul@sign 001B  
              ___flmul@temp 0026                ___flmul@prod 0022                __CFG_LVP$OFF 000000  
              ___fltol@exp1 004A                __CFG_WDT$OFF 000000                        l1003 7332  
                      l1004 7326                        l1006 734E                        l1201 700E  
                      l1202 7006                        l1300 7810                        l1301 783A  
                      l1205 7026                        l1302 7846                        l1206 7030  
                      l1303 7848                        l1311 78D4                        l1312 78D0  
                      l1313 78E4                        l1330 7B80                        l1314 7902  
                      l1331 7B9E                        l1307 7894                        l1308 7890  
                      l1325 7AFA                        l1309 78A4                        l1318 7AC2  
                      l1327 7B3E                        l1319 7AA4                        l1191 7058  
                      l1280 7666                        l1328 7B5C                        l1192 7050  
                      l1273 75DC                        l1361 7528                        l3042 783A  
                      l1290 7770                        l1282 768E                        l1274 75D8  
                      l1370 759A                        l1362 7510                        l1354 74AA  
                      l1291 7752                        l1283 773C                        l1195 7078  
                      l1355 74BA                        l1284 76EC                        l1196 7082  
                      l1364 755A                        l1356 74D8                        l1285 7714  
                      l1277 761C                        l1365 754E                        l1278 7618  
                      l1358 74EA                        l1287 773A                        l1359 74DE  
                      l1297 77A8                        l1299 77EC                        STR_1 2025  
                      STR_2 2034                        STR_3 203A                        u3000 7466  
                      u2130 7122                        _LATA 000F89                        _LATB 000F8A  
                      _LATC 000F8B                        u2320 77A4                        _LATD 000F8C  
                      _LATE 000F8D                        u2350 77FA                        u2510 7AF6  
                      u2360 781E                        u2450 78F0                        u2540 7B4C  
                      u2460 7A66                        u2620 7338                        u2550 7B6A  
                      u2465 7A5C                        u2650 705C                        u2580 72C0  
                      u2680 7012                        u2760 7564                        u2585 72B6  
                      _RBIE 007F93                        _RBIF 007F90                        _RBIP 007F88  
                      i2l51 6F56                        i2l49 6F44                        _RBPU 007F8F  
                      _fila 008A                        _main 6EC2                        fsr1l 000FE1  
                      btemp 005F                        prodh 000FF4                        prodl 000FF3  
                      start 200E               __CFG_IESO$OFF 000000             ___fldiv@new_exp 0039  
              msg2LCD@datos 0003               __CFG_MCLRE$ON 000000                ___param_bank 000000  
               ?_TIMER0_INI 0001                 ?_TIMER1_INI 0001               __CFG_PLLDIV$5 000000  
          __end_of_LCD_init 7284               ___fltol@sign1 0049                       ?_main 0001  
           __end_of___fldiv 7864                       _EEADR 000FA9             __end_of___flmul 7BB4  
           __end_of___fltol 7360                       _CMCON 000FB4             __end_of___lldiv 7172  
           __end_of___lwdiv 708C             __end_of___lwmod 703A                       _RCREG 000FAE  
                     _TMR0H 000FD7                       _TMR1H 000FCF                       _TMR0L 000FD6  
                     _TMR1L 000FCE                       _SPBRG 000FAF                       _PORTA 000F80  
                     _PORTB 000F81               __CFG_USBDIV$2 000000                       _TRISA 000F92  
                     _TRISB 000F93                       _TRISC 000F94                       _TRISD 000F95  
                     _TRISE 000F96                       _TXREG 000FAD               __CFG_PWRT$OFF 000000  
             __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000              __CFG_EBTR0$OFF 000000  
            __CFG_FCMEN$OFF 000000       __size_of_Vumetro_Func 0084              __CFG_EBTR1$OFF 000000  
           __end_of_msg2LCD 6FB8               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
            __CFG_EBTRB$OFF 000000                       _myISR 2008        __end_of_AD_Converter 8000  
           __end_of_tic_ADC 6E14             __end_of_tic_LCD 6E5A                       tablat 000FF5  
                     ttemp5 0060                       ttemp6 0063                       ttemp7 0067  
                     status 000FD8                       wtemp8 0060             __initialization 708C  
              __end_of_main 6EE4            __end_of_PicIni21 6F8A                _Vumetro_Func 7172  
                    ??_main 004F               __activetblptr 000002           _limitador_vumetro 0059  
          __end_of_Simbolos 746C                      _ADCON1 000FC1                      _ADCON2 000FC0  
                    ?_myISR 0001                      _ADRESH 000FC4                      _ADRESL 000FC3  
                    _EEDATA 000FA8                      _CCPR1L 000FBE                      _EECON2 000FA7  
                    _INT0IE 007F94                      _INT0IF 007F91                      _INT1IE 007F83  
                    _INT1IF 007F80            __end_of_char2LCD 6E3C         __size_of_TIMER0_INI 0018  
       __size_of_TIMER1_INI 0020    AD_Converter@Calculo_Prom 0070                      _SPBRGH 000FB0  
          __end_of___xxtofl 75AC              __CFG_VREGEN$ON 000000              __CFG_XINST$OFF 000000  
                    ___wmul 6EE4                   ??___fldiv 0030              __CFG_STVREN$ON 000000  
                 ??___flmul 0017                   ??___fltol 0045                   ??___lldiv 0009  
                 ??___lwdiv 0010                   ??___lwmod 0005                      clear_0 70D0  
                    clear_1 70DC                      _teclas 2019            __end_of_ret_HOME 6E20  
                 ??_msg2LCD 0005                __pdataCOMRAM 005A                   ??_tic_ADC 0001  
                 ??_tic_LCD 0001                __mediumconst 0000                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8               _OffsetPeriodo 005A  
              ___xxtofl@arg 000B                ___xxtofl@exp 000A                ___xxtofl@val 0001  
                __accesstop 0060     __end_of__initialization 70E2             __CFG_PBADEN$OFF 000000  
                 ?_LCD_init 0001               ___rparam_used 000001                  ___fltol@f1 0041  
            __pcstackCOMRAM 0001                __pidataBANK0 6E01               __end_of_myISR 6F5E  
     __size_of_AD_Converter 044C      __size_of_obtener_ADC10 0040                     ??_myISR 0001  
                __pbssBANK0 007A                   ?_PicIni21 0001          __size_of_read_BUSY 0028  
                __pnvCOMRAM 005D                  ??_LCD_init 0003            Simbolos@contador 0005  
        AD_Converter@Decena 0065               _maximoEncoder 0081        AD_Converter@UV_VOLTS 0074  
                 ?_Simbolos 0001                     ?___wmul 0006                ??_TIMER0_INI 0001  
        AD_Converter@UniMil 0067                ??_TIMER1_INI 0001                _AD_Converter 7BB4  
        AD_Converter@Unidad 0064                read_BUSY@aux 0001                   ?_char2LCD 0001  
              char2LCD@dato 0003  Vumetro_Func@Vumetro_Entero 0006                   ?___xxtofl 0001  
                   Leds13@i 008F                  ??_PicIni21 0001          __end_of_TIMER0_INI 6E82  
        __end_of_TIMER1_INI 6EC2        AD_Converter@VumetroF 006A   Vumetro_Func@Vumetro_Resto 0005  
                _frecuencia 005B          __size_of_write_CMD 000E          __size_of_write_LCD 0020  
                 ?_ret_HOME 0001                     __Hparam 0000                     __Lparam 0000  
                ??_Simbolos 0004               _obtener_ADC10 6FB8                     ___fldiv 75AC  
                   ___flmul 7864                     ___fltol 7284                     ___lldiv 70F0  
           __size_of___wmul 0026                     ___lwdiv 703A                     ___lwmod 6FF8  
              __psmallconst 2018    obtener_ADC10@GuardoPorta 0005                     __pcinit 708C  
  obtener_ADC10@GuardoTrisa 0006                     __ramtop 0800                     _flag_kb 007D  
                   __ptext0 6EC2                     __ptext1 6EA2                     __ptext2 6E6A  
                   __ptext3 7360                     __ptext4 6E14                     __ptext5 6F5E  
                   __ptext6 71F6                     __ptext7 7BB4                     __ptext8 6FB8  
                   __ptext9 746C                  ??_char2LCD 0003                     _msg2LCD 6F8A  
         __end_of_read_BUSY 6F32                   _T0CONbits 000FD5                   _T1CONbits 000FCD  
                 _T2CONbits 000FCA                     _tic_ADC 6E08                  ??___xxtofl 0005  
                   _tic_LCD 6E4A               _minimoEncoder 0080                  _set_CURSOR 6E5A  
            __pintcode_body 6F32               debounce@state 0056        end_of_initialization 70E2  
            set_CURSOR@posi 0003               __Lmediumconst 0000                     int_func 6F32  
                ??_ret_HOME 0003      AD_Converter@UniDiezMil 0068             ___lldiv@divisor 0005  
           ___lldiv@counter 000D              ?_obtener_ADC10 0001                   _RCSTAbits 000FAB  
                   postdec1 000FE5                     postinc0 000FEE                   _PORTBbits 000F81  
                 _PORTDbits 000F83                   _PORTEbits 000F84           __end_of_write_CMD 6E4A  
        _EstadoDeLosBotones 0088           __end_of_write_LCD 6EA2    AD_Converter@ConversionAD 0062  
             ___xxtofl@sign 0009                   _TRISAbits 000F92                   _TRISBbits 000F93  
                 _TRISCbits 000F94                   _TRISEbits 000F96           tic_encoder@estado 008B  
               ___fldiv@grs 003B                 ___fldiv@rem 0034                 ___flmul@grs 001C  
               _CCP1CONbits 000FBD                   _TXSTAbits 000FAC           __size_of_LCD_init 008E  
                _write_DATA 6E20             AD_Converter@UVI 0078              __end_of___wmul 6F0A  
               _BAUDCONbits 000FB8               __pidataCOMRAM 2012         Simbolos@flag_dibujo 0004  
            __end_of_teclas 2025         start_initialization 708C                 ?_set_CURSOR 0001  
         __size_of_PicIni21 002C             ??_obtener_ADC10 0003              tecla@status_KB 007C  
                 _LowerByte 0085                    ??___wmul 000A           __size_of_Simbolos 010C  
               __pdataBANK0 0089            __CFG_LPT1OSC$OFF 000000             _posicionEncoder 0054  
  tic_debounce@debounce_tic 008C                   ___fldiv@a 002C                   ___fldiv@b 0028  
                 _UpperByte 008D                   ___flmul@a 0013                   ___flmul@b 000F  
         __size_of_char2LCD 000E                 __pbssCOMRAM 004F               __pcstackBANK0 0060  
         __size_of___xxtofl 0140            ___lwdiv@dividend 000C         AD_Converter@Centena 0066  
                 _flagCanal 007E           __size_of_ret_HOME 000C                   __pintcode 2008  
       AD_Converter@UV_bits 006C         __size_of_set_CURSOR 0010                 ?_write_DATA 0001  
                  ?___fldiv 0028                    ?___flmul 000F                    ?___fltol 0041  
                  ?___lldiv 0001                    ?___lwdiv 000C                    ?___lwmod 0001  
             ?_Vumetro_Func 0005   AD_Converter@contador_prom 006B           Send4Disp@Nro_Disp 008E  
                  ?_msg2LCD 0003                _limitadorADC 0087                 __smallconst 2018  
       AD_Converter@Vumetro 0069                    ?_tic_ADC 0001                    ?_tic_LCD 0001  
            _desplazar_tout 007A                   _read_BUSY 6F0A            ___lwdiv@quotient 0010  
            __size_of_myISR 4F56                debounce@cnt0 0055                debounce@cnt1 0082  
            ___wmul@product 000A                    _LATAbits 000F89                    _LATBbits 000F8A  
                  _LATCbits 000F8B                    _LATDbits 000F8C                    _LATEbits 000F8D  
                  _LCD_init 71F6                    _LCD_tout 005D                    _PIE1bits 000F9D  
               _encoderTout 007F                    _PIR1bits 000F9E            __CFG_WDTPS$32768 000000  
            ??_Vumetro_Func 0006                  _ADCON0bits 000FC2                  _ADCON1bits 000FC1  
             _Multiplicador 0084           ___wmul@multiplier 0006             _MedioPeriodoSet 004F  
                ?_read_BUSY 0001                   _write_CMD 6E3C                   _write_LCD 6E82  
               _INTCON2bits 000FF1                 _INTCON3bits 000FF0                   copy_data0 70A0  
       __size_of_write_DATA 000E                    _PicIni21 6F5E         Botones13@Estado_BOT 0086  
                _EECON1bits 000FA6                    __Hrparam 0000                    __Lrparam 0000  
                  _Simbolos 7360              write_DATA@dato 0002            __size_of___fldiv 02B8  
          __size_of___flmul 0350            __size_of___fltol 00DC            __size_of___lldiv 0082  
          __size_of___lwdiv 0052            __size_of___lwmod 0042                    _char2LCD 6E2E  
          __size_of_msg2LCD 002E                    ___xxtofl 746C            __size_of_tic_ADC 000C  
                  _delay_kb 0053            __size_of_tic_LCD 0010                ??_set_CURSOR 0003  
           ___lwdiv@divisor 000E             ___lwdiv@counter 0012                  ?_write_CMD 0001  
                ?_write_LCD 0001                    __ptext10 6EE4                    __ptext11 6FF8  
                  __ptext20 6F8A                    __ptext12 703A                    __ptext21 6E2E  
                  __ptext13 70F0                    __ptext22 6E20                    __ptext14 7284  
                  __ptext23 6E82                    __ptext15 7864                    __ptext24 6F0A  
                  __ptext16 75AC                    __ptext17 7172                    __ptext26 6E4A  
                  __ptext18 6E5A                    __ptext27 6E08                    __ptext19 6E3C  
                  _bot_tout 0057                    _led_tout 0051               __size_of_main 0022  
                  _ret_HOME 6E14               ?_AD_Converter 0001                    int$flags 005F  
                  _mux_tout 0058          __end_of_set_CURSOR 6E6A       __CFG_CPUDIV$OSC1_PLL2 000000  
                _INTCONbits 000FF2                 ??_read_BUSY 0001           _AD_Converter$2570 0060  
         _AD_Converter$2568 0076           _AD_Converter$2569 006E                    intlevel2 0000  
             write_CMD@dato 0002        __end_of_Vumetro_Func 71F6            ___lwmod@dividend 0001  
          ___lldiv@dividend 0001               write_LCD@dato 0001       __end_of_obtener_ADC10 6FF8  
            ??_AD_Converter 004B                ??_write_DATA 0002                  _TIMER0_INI 6E6A  
                _TIMER1_INI 6EA2            ___lldiv@quotient 0009             ___lwmod@divisor 0003  
           ___lwmod@counter 0005                 ??_write_CMD 0002                 ??_write_LCD 0001  
        __CFG_FOSC$HSPLL_HS 000000          __end_of_write_DATA 6E2E  
